infrastructure\market_data\base_connector.py:153: error: Statement is unreachable  [unreachable]
domain\services\spread_analyzer.py:64: error: Statement is unreachable  [unreachable]
domain\services\spread_analyzer.py:89: error: Statement is unreachable  [unreachable]
domain\services\spread_analyzer.py:132: error: Statement is unreachable  [unreachable]
domain\strategies\utils.py:26: error: Statement is unreachable  [unreachable]
domain\strategies\utils.py:48: error: Statement is unreachable  [unreachable]
domain\strategies\utils.py:280: error: Statement is unreachable  [unreachable]
domain\sessions\session_predictor.py:412: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
domain\sessions\session_predictor.py:413: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\sessions\session_predictor.py:422: error: Statement is unreachable  [unreachable]
domain\sessions\session_predictor.py:425: error: Statement is unreachable  [unreachable]
domain\sessions\session_optimizer.py:348: error: Statement is unreachable  [unreachable]
domain\sessions\session_optimizer.py:350: error: Statement is unreachable  [unreachable]
domain\sessions\session_optimizer.py:407: error: Statement is unreachable  [unreachable]
domain\sessions\session_influence_analyzer.py:521: error: Statement is unreachable  [unreachable]
domain\sessions\session_influence_analyzer.py:523: error: Statement is unreachable  [unreachable]
domain\sessions\session_analyzer.py:293: error: Statement is unreachable  [unreachable]
domain\sessions\session_analyzer.py:295: error: Statement is unreachable  [unreachable]
domain\sessions\implementations.py:246: error: Statement is unreachable  [unreachable]
domain\services\market_metrics.py:256: error: Statement is unreachable  [unreachable]
domain\services\market_metrics.py:269: error: Statement is unreachable  [unreachable]
domain\services\market_metrics.py:271: error: Statement is unreachable  [unreachable]
domain\services\market_metrics.py:329: error: Statement is unreachable  [unreachable]
domain\services\market_metrics.py:418: error: Statement is unreachable  [unreachable]
domain\sessions\session_analyzer_factory.py:40: error: Statement is unreachable  [unreachable]
infrastructure\repositories\trading\validators.py:201: error: Statement is unreachable  [unreachable]
infrastructure\repositories\trading\validators.py:212: error: Statement is unreachable  [unreachable]
infrastructure\repositories\trading\validators.py:339: error: Statement is unreachable  [unreachable]
infrastructure\repositories\trading\validators.py:355: error: Statement is unreachable  [unreachable]
infrastructure\repositories\trading\validators.py:368: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchange.py:88: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchange.py:301: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchange.py:363: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchange.py:572: error: Returning Any from function declared to return "dict[str, Any] | None"  [no-any-return]
domain\prediction\reversal_predictor.py:353: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchanges\base_exchange_service.py:128: error: Statement is unreachable  [unreachable]
infrastructure\external_services\ml_services.py:91: error: Unsupported operand types for > ("Series[type[object]]" and "float")  [operator]
infrastructure\external_services\ml_services.py:92: error: Unsupported operand types for < ("Series[type[object]]" and "float")  [operator]
infrastructure\external_services\ml_services.py:148: error: Incompatible types in assignment (expression has type "Series[Timestamp]", variable has type "TimestampSeries")  [assignment]
infrastructure\external_services\ml_services.py:154: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "TimestampSeries")  [assignment]
infrastructure\external_services\ml_services.py:169: error: Returning Any from function declared to return "Series[Any]"  [no-any-return]
infrastructure\external_services\ml_services.py:440: error: Unsupported operand types for < ("int" and "None")  [operator]
infrastructure\external_services\ml_services.py:440: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:441: error: Unsupported operand types for / ("float" and "None")  [operator]
infrastructure\external_services\ml_services.py:441: note: Right operand is of type "float | None"
infrastructure\external_services\ml_services.py:442: error: Unsupported operand types for - ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:442: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:578: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
infrastructure\external_services\ml_services.py:612: error: Unsupported operand types for < ("int" and "None")  [operator]
infrastructure\external_services\ml_services.py:612: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:613: error: Unsupported operand types for / ("float" and "None")  [operator]
infrastructure\external_services\ml_services.py:613: note: Right operand is of type "float | None"
infrastructure\external_services\ml_services.py:614: error: Unsupported operand types for - ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:614: note: Left operand is of type "float | None"
infrastructure\external_services\exchanges\bybit_exchange_service.py:34: error: Statement is unreachable  [unreachable]
infrastructure\external_services\exchanges\binance_exchange_service.py:34: error: Statement is unreachable  [unreachable]
domain\services\risk_analysis.py:351: error: Statement is unreachable  [unreachable]
domain\services\risk_analysis.py:386: error: No overload variant of "minimize" matches argument types "Callable[[ndarray[Any, Any]], float]", "ndarray[Any, dtype[Any]]", "str", "list[tuple[float, float]]", "list[dict[str, object]]", "dict[str, bool]"  [call-overload]
domain\services\risk_analysis.py:386: note: Possible overload variants:
domain\services\risk_analysis.py:386: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\services\risk_analysis.py:386: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\services\risk_analysis.py:386: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\strategies\validators_fixed.py:121: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:137: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:163: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:193: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:208: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:223: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:253: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:272: error: Statement is unreachable  [unreachable]
domain\strategies\validators_fixed.py:280: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:250: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:266: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:282: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:315: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:336: error: Statement is unreachable  [unreachable]
domain\strategies\validators.py:344: error: Statement is unreachable  [unreachable]
domain\strategies\base_strategy.py:134: error: Statement is unreachable  [unreachable]
domain\protocols\strategy_protocol.py:1197: error: Statement is unreachable  [unreachable]
domain\entities\strategy_interface.py:465: error: Incompatible types in assignment (expression has type "float | int", variable has type "int")  [assignment]
infrastructure\repositories\strategy_repository.py:661: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\strategy_repository.py:680: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\strategy_repository.py:695: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\strategy_repository.py:879: error: Extra keys ("total_entities", "cache_hit_rate", "avg_query_time", "error_rate", "last_cleanup") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\strategy_repository.py:889: error: Returning Any from function declared to return "PerformanceMetricsDict"  [no-any-return]
infrastructure\repositories\strategy_repository.py:910: error: Extra keys ("database_connected", "cache_working", "last_check", "errors") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\strategy_repository.py:924: error: Extra keys ("database_connected", "cache_working", "last_check", "errors") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\strategy_repository.py:951: error: Unsupported operand types for - ("float" and "datetime")  [operator]
infrastructure\repositories\risk_repository.py:606: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\risk_repository.py:661: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\risk_repository.py:717: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\risk_repository.py:728: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\portfolio_repository.py:777: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\portfolio_repository.py:857: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\portfolio_repository.py:881: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\portfolio_repository.py:941: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:492: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:494: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:496: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:655: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:701: error: "Prediction" has no attribute "predicted_value"  [attr-defined]
infrastructure\repositories\ml_repository.py:709: error: Returning Any from function declared to return "Prediction"  [no-any-return]
infrastructure\repositories\ml_repository.py:731: error: Returning Any from function declared to return "Prediction | None"  [no-any-return]
infrastructure\repositories\ml_repository.py:747: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:762: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:774: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:813: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\ml_repository.py:819: error: Redundant cast to "bool"  [redundant-cast]
infrastructure\repositories\ml_repository.py:836: error: Redundant cast to "int"  [redundant-cast]
domain\services\pattern_discovery.py:241: error: Statement is unreachable  [unreachable]
domain\protocols\integration.py:738: error: Argument 1 of "find_by" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "list[QueryFilter]"  [override]
domain\protocols\integration.py:738: note: This violates the Liskov substitution principle
domain\protocols\integration.py:738: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:738: error: Argument 2 of "find_by" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "QueryOptions | None"  [override]
domain\protocols\integration.py:741: error: Argument 1 of "count" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
domain\protocols\integration.py:741: note: This violates the Liskov substitution principle
domain\protocols\integration.py:741: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:744: error: Argument 1 of "find_one_by" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "list[QueryFilter]"  [override]
domain\protocols\integration.py:744: note: This violates the Liskov substitution principle
domain\protocols\integration.py:744: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:747: error: Argument 1 of "get_all" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "QueryOptions | None"  [override]
domain\protocols\integration.py:747: note: This violates the Liskov substitution principle
domain\protocols\integration.py:747: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:750: error: Argument 1 of "stream" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "QueryOptions | None"  [override]
domain\protocols\integration.py:750: note: This violates the Liskov substitution principle
domain\protocols\integration.py:750: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:753: error: Statement is unreachable  [unreachable]
infrastructure\repositories\order_repository.py:1225: error: Statement is unreachable  [unreachable]
Found 108 errors in 30 files (checked 202 source files)
