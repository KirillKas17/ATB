#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ ATB Trading Dashboard
–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–ª–µ–π
"""

import sys
import os
from pathlib import Path

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        return False
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = {
        'tkinter': 'tkinter (–≤—Å—Ç—Ä–æ–µ–Ω –≤ Python)',
        'numpy': 'numpy',
        'pandas': 'pandas', 
        'matplotlib': 'matplotlib',
        'decimal': 'decimal (–≤—Å—Ç—Ä–æ–µ–Ω –≤ Python)'
    }
    
    missing_packages = []
    
    for package, install_name in required_packages.items():
        try:
            if package == 'tkinter':
                import tkinter
            elif package == 'numpy':
                import numpy
            elif package == 'pandas':
                import pandas
            elif package == 'matplotlib':
                import matplotlib
            elif package == 'decimal':
                import decimal
                
            print(f"‚úÖ {package} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except ImportError:
            print(f"‚ùå {package} - –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing_packages.append(install_name)
    
    if missing_packages:
        print(f"\nüîß –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print(f"pip install {' '.join(missing_packages)}")
        return False
    
    return True

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
    project_root = Path(__file__).parent
    if str(project_root) not in sys.path:
        sys.path.insert(0, str(project_root))
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['PYTHONPATH'] = str(project_root)
    
    return True

def run_dashboard():
    """–ó–∞–ø—É—Å–∫ –¥–∞—à–±–æ—Ä–¥–∞"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ ATB Trading Dashboard...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫—É—é –≤–µ—Ä—Å–∏—é –∑–∞–ø—É—Å–∫–∞—Ç—å
        dashboard_type = "integrated"  # integrated, basic, –∏–ª–∏ simple
        
        if dashboard_type == "integrated":
            # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞
            try:
                from interfaces.desktop.integrated_dashboard import IntegratedTradingDashboard
                print("üéØ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞...")
                dashboard = IntegratedTradingDashboard()
                dashboard.run()
                
            except ImportError as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥: {e}")
                print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é...")
                dashboard_type = "basic"
        
        if dashboard_type == "basic":
            # –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞
            try:
                from interfaces.desktop.trading_dashboard import ModernTradingDashboard
                print("üìä –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞...")
                dashboard = ModernTradingDashboard()
                dashboard.run()
                
            except ImportError as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑–æ–≤—ã–π –¥–∞—à–±–æ—Ä–¥: {e}")
                print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é...")
                dashboard_type = "simple"
        
        if dashboard_type == "simple":
            # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–π –≤–µ—Ä—Å–∏–∏
            run_simple_dashboard()
    
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –î–∞—à–±–æ—Ä–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞: {e}")
        import traceback
        traceback.print_exc()

def run_simple_dashboard():
    """–ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞"""
    import tkinter as tk
    from tkinter import ttk, messagebox
    
    class SimpleDashboard:
        def __init__(self):
            self.root = tk.Tk()
            self.root.title("ATB Trading Dashboard - –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è")
            self.root.geometry("800x600")
            self.root.configure(bg='#2d2d2d')
            
            self.create_ui()
        
        def create_ui(self):
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            title_label = tk.Label(self.root, text="‚ö° ATB Trading Dashboard",
                                 font=('Arial', 20, 'bold'),
                                 fg='#3742fa', bg='#2d2d2d')
            title_label.pack(pady=20)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            info_text = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ATB Trading Dashboard!

–≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–∞—à–±–æ—Ä–¥–∞.
–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.

–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
‚Ä¢ –ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞  
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
‚Ä¢ –°–∏–º—É–ª—è—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
–≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞.
            """
            
            info_label = tk.Label(self.root, text=info_text.strip(),
                                font=('Arial', 11), fg='white', bg='#2d2d2d',
                                justify='left')
            info_label.pack(pady=20, padx=20)
            
            # –ö–Ω–æ–ø–∫–∏
            button_frame = tk.Frame(self.root, bg='#2d2d2d')
            button_frame.pack(pady=20)
            
            tk.Button(button_frame, text="üìä –¢–µ—Å—Ç–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
                     bg='#3742fa', fg='white', font=('Arial', 12),
                     command=self.show_analytics).pack(side='left', padx=10)
            
            tk.Button(button_frame, text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", 
                     bg='#2d2d2d', fg='white', font=('Arial', 12),
                     command=self.show_settings).pack(side='left', padx=10)
            
            tk.Button(button_frame, text="‚ùì –°–ø—Ä–∞–≤–∫–∞",
                     bg='#2d2d2d', fg='white', font=('Arial', 12), 
                     command=self.show_help).pack(side='left', padx=10)
            
            # –°—Ç–∞—Ç—É—Å
            status_label = tk.Label(self.root, text="–°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
                                  font=('Arial', 10), fg='#00ff88', bg='#2d2d2d')
            status_label.pack(side='bottom', pady=10)
        
        def show_analytics(self):
            messagebox.showinfo("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", 
                              "–§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏.\n"
                              "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.")
        
        def show_settings(self):
            messagebox.showinfo("–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                              "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏.\n"
                              "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –±–∞–∑–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.")
        
        def show_help(self):
            help_text = """
ATB Trading Dashboard - –°–ø—Ä–∞–≤–∫–∞

–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:
F1 - –°–ø—Ä–∞–≤–∫–∞
F5 - –û–±–Ω–æ–≤–∏—Ç—å
Ctrl+Q - –í—ã—Ö–æ–¥

–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:
pip install numpy pandas matplotlib

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: support@atb-trading.com
            """
            messagebox.showinfo("–°–ø—Ä–∞–≤–∫–∞", help_text.strip())
        
        def run(self):
            self.root.mainloop()
    
    print("üì± –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞...")
    dashboard = SimpleDashboard()
    dashboard.run()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üéØ ATB Trading Dashboard - –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—Å–∫–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if not check_python_version():
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    dependencies_ok = check_dependencies()
    
    print("\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    if not setup_environment():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    if dependencies_ok:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        print("–ë—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è")
    
    print("\n" + "=" * 60)
    
    # –ó–∞–ø—É—Å–∫ –¥–∞—à–±–æ—Ä–¥–∞
    run_dashboard()

if __name__ == "__main__":
    main()