#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö RSI —Ä–∞—Å—á–µ—Ç–æ–≤
"""

import pandas as pd
import numpy as np
from infrastructure.core.technical import rsi

def test_rsi_with_zero_losses():
    """–¢–µ—Å—Ç RSI —Å –Ω—É–ª–µ–≤—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏ (–±—ã–ª–æ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å)"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π RSI...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–¥–µ –≤—Å–µ —Ü–µ–Ω—ã —Ä–∞—Å—Ç—É—Ç (–Ω–µ—Ç –ø–æ—Ç–µ—Ä—å)
    prices = [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115]
    
    try:
        result = rsi(prices, period=14)
        print(f"‚úÖ RSI —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω: {result.iloc[-1]:.2f}")
        print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ RSI: {result.iloc[-1]:.2f} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~100)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç NaN
        if not result.isna().any():
            print("‚úÖ –ù–µ—Ç NaN –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
        else:
            print("‚ùå –ù–∞–π–¥–µ–Ω—ã NaN –∑–Ω–∞—á–µ–Ω–∏—è")
            
        return True
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

def test_rsi_with_zero_gains():
    """–¢–µ—Å—Ç RSI —Å –Ω—É–ª–µ–≤—ã–º–∏ –ø—Ä–∏—Ä–æ—Å—Ç–∞–º–∏ (–≤—Å–µ —Ü–µ–Ω—ã –ø–∞–¥–∞—é—Ç)"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RSI —Å –ø–∞–¥–∞—é—â–∏–º–∏ —Ü–µ–Ω–∞–º–∏...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≥–¥–µ –≤—Å–µ —Ü–µ–Ω—ã –ø–∞–¥–∞—é—Ç (–Ω–µ—Ç –ø—Ä–∏—Ä–æ—Å—Ç–æ–≤)
    prices = [115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100]
    
    try:
        result = rsi(prices, period=14)
        print(f"‚úÖ RSI —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω: {result.iloc[-1]:.2f}")
        print(f"‚úÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ RSI: {result.iloc[-1]:.2f} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~0)")
        return True
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

def test_empty_data():
    """–¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RSI —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    try:
        result = rsi([], period=14)
        print(f"‚úÖ RSI —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: –¥–ª–∏–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ = {len(result)}")
        return True
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô RSI")
    print("=" * 50)
    
    success_count = 0
    total_tests = 3
    
    if test_rsi_with_zero_losses():
        success_count += 1
    
    if test_rsi_with_zero_gains():
        success_count += 1
        
    if test_empty_data():
        success_count += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if success_count == total_tests:
        print("üéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø RSI –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")