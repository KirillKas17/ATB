









domain\services\pattern_discovery.py:155: error: Returning Any from function declared to return "float"  [no-any-return]
domain\services\pattern_discovery.py:189: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
domain\services\pattern_discovery.py:190: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\services\pattern_discovery.py:241: error: Statement is unreachable  [unreachable]
domain\services\pattern_discovery.py:285: error: Returning Any from function declared to return "bool"  [no-any-return]
domain\services\pattern_discovery.py:294: error: Returning Any from function declared to return "bool"  [no-any-return]
domain\services\pattern_discovery.py:307: error: Returning Any from function declared to return "bool"  [no-any-return]
domain\services\pattern_discovery.py:519: error: Argument 1 to "len" has incompatible type "Pattern"; expected "Sized"  [arg-type]
domain\services\pattern_discovery.py:520: error: Argument 1 to "_create_combined_pattern" of "PatternDiscovery" has incompatible type "Pattern"; expected "list[Pattern]"  [arg-type]
domain\services\pattern_discovery.py:523: error: Argument 1 to "extend" of "list" has incompatible type "Pattern"; expected "Iterable[Pattern]"  [arg-type]
domain\repositories\portfolio_repository.py:95: error: Invalid index type "UUID" for "dict[PortfolioId, Portfolio]"; expected type "PortfolioId"  [index]
domain\repositories\portfolio_repository.py:106: error: Statement is unreachable  [unreachable]
domain\repositories\portfolio_repository.py:112: error: Invalid index type "UUID" for "dict[PortfolioId, Portfolio]"; expected type "PortfolioId"  [index]
domain\repositories\portfolio_repository.py:123: error: Statement is unreachable  [unreachable]
domain\repositories\market_repository.py:83: error: Statement is unreachable  [unreachable]
domain\repositories\market_repository.py:101: error: Statement is unreachable  [unreachable]
domain\repositories\base_repository_impl.py:61: error: Incompatible types in assignment (expression has type "loguru.Logger", variable has type "logging.Logger")  [assignment]
domain\protocols\integration.py:258: error: Signature of "analyze_market" incompatible with supertype "StrategyProtocol"  [override]
domain\protocols\integration.py:258: note:      Superclass:
domain\protocols\integration.py:258: note:          def analyze_market(self, market_data: DataFrame, strategy_type: StrategyType, analysis_params: dict[str, float] | None = ...) -> Coroutine[Any, Any, MarketAnalysisResult]
domain\protocols\integration.py:258: note:      Subclass:
domain\protocols\integration.py:258: note:          def analyze_market(self, market_data: DataFrame, strategy_type: StrategyType) -> Coroutine[Any, Any, MarketAnalysisResult]
domain\protocols\integration.py:343: error: Cannot instantiate abstract class "IntegrationTestMLProtocol" with abstract attributes "activate_model", "adaptive_learning", ... and "validate_model_integrity" (28 methods suppressed)  [abstract]
domain\protocols\integration.py:344: error: Cannot instantiate abstract class "IntegrationTestStrategyProtocol" with abstract attributes "activate_strategy", "adapt_strategy_to_market", ... and "validate_strategy_integrity" (33 methods suppressed)  [abstract]
domain\protocols\integration.py:345: error: Cannot instantiate abstract class "IntegrationTestRepositoryProtocol" with abstract attributes "bulk_delete", "bulk_save", ... and "transaction" (21 methods suppressed)  [abstract]
domain\protocols\integration.py:379: error: Argument 1 to "analyze_market" of "IntegrationTestStrategyProtocol" has incompatible type "MarketData"; expected "DataFrame"  [arg-type]
domain\protocols\integration.py:470: error: Cannot instantiate abstract class "IntegrationTestMLProtocol" with abstract attributes "activate_model", "adaptive_learning", ... and "validate_model_integrity" (28 methods suppressed)  [abstract]
domain\protocols\integration.py:491: error: Cannot instantiate abstract class "IntegrationTestStrategyProtocol" with abstract attributes "activate_strategy", "adapt_strategy_to_market", ... and "validate_strategy_integrity" (33 methods suppressed)  [abstract]
domain\protocols\integration.py:513: error: Cannot instantiate abstract class "IntegrationTestRepositoryProtocol" with abstract attributes "bulk_delete", "bulk_save", ... and "transaction" (21 methods suppressed)  [abstract]
infrastructure\repositories\trading\trading_repository.py:767: error: Returning Any from function declared to return "Order | None"  [no-any-return]
infrastructure\repositories\trading\trading_repository.py:786: error: Returning Any from function declared to return "Order | None"  [no-any-return]
infrastructure\repositories\trading\trading_repository.py:1020: error: Returning Any from function declared to return "Position | None"  [no-any-return]
infrastructure\repositories\trading\trading_repository.py:1192: error: Missing positional arguments "base_currency", "quote_currency" in call to "TradingPair"  [call-arg]
infrastructure\repositories\trading\trading_repository.py:1192: error: Argument "trading_pair" to "Order" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1192: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Symbol"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1215: error: Missing positional arguments "base_currency", "quote_currency" in call to "TradingPair"  [call-arg]
infrastructure\repositories\trading\trading_repository.py:1215: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Symbol"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1311: error: Missing positional arguments "base_currency", "quote_currency" in call to "TradingPair"  [call-arg]
infrastructure\repositories\trading\trading_repository.py:1311: error: Argument "trading_pair" to "Trade" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1311: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Symbol"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1358: error: Missing positional arguments "base_currency", "quote_currency" in call to "TradingPair"  [call-arg]
infrastructure\repositories\trading\trading_repository.py:1358: error: Argument "trading_pair" to "Trade" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1358: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Symbol"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1393: error: Missing positional arguments "base_currency", "quote_currency" in call to "TradingPair"  [call-arg]
infrastructure\repositories\trading\trading_repository.py:1393: error: Argument "trading_pair" to "Trade" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1393: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Symbol"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1590: error: Statement is unreachable  [unreachable]
infrastructure\repositories\order_repository.py:230: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\order_repository.py:232: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\order_repository.py:234: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\order_repository.py:236: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\order_repository.py:238: error: Returning Any from function declared to return "bool"  [no-any-return]
infrastructure\repositories\order_repository.py:411: error: Return type "Coroutine[Any, Any, None]" of "_evict_cache" incompatible with return type "None" in supertype "BaseRepositoryImpl"  [override]
infrastructure\repositories\order_repository.py:414: error: "Order" object is not iterable  [misc]
infrastructure\repositories\order_repository.py:416: error: Cannot determine type of "timestamp"  [has-type]
infrastructure\repositories\order_repository.py:516: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
infrastructure\repositories\order_repository.py:1083: error: Argument "signal_id" to "Order" has incompatible type "OrderId | None"; expected "SignalId | None"  [arg-type]
infrastructure\repositories\order_repository.py:1129: error: Statement is unreachable  [unreachable]
infrastructure\repositories\order_repository.py:1201: error: Return type "AsyncIterator[Order]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Order]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1201: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\order_repository.py:1201: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\order_repository.py:1215: error: The return type of a generator function should be "Generator" or one of its supertypes  [misc]
infrastructure\repositories\order_repository.py:1215: error: Return type "_AsyncGeneratorContextManager[TransactionProtocol, None]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1218: error: Function is missing a type annotation  [no-untyped-def]
infrastructure\repositories\order_repository.py:1225: error: Function is missing a type annotation  [no-untyped-def]
infrastructure\repositories\order_repository.py:1242: error: "async with" outside async function  [syntax]
infrastructure\repositories\order_repository.py:1242: error: "None" has no attribute "acquire"  [attr-defined]
infrastructure\repositories\order_repository.py:1243: error: "async with" outside async function  [syntax]
infrastructure\repositories\order_repository.py:1246: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]
infrastructure\repositories\order_repository.py:1339: error: Returning Any from function declared to return "Order | None"  [no-any-return]
Found 601 errors in 70 files (checked 201 source files)
