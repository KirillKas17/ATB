examples\strategy_evolution_example.py:94:22: error: Module has no attribute "date_range"  [attr-defined]
examples\strategy_evolution_example.py:95:19: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
examples\strategy_evolution_example.py:95:40: error: Module has no attribute "Timedelta"  [attr-defined]
examples\strategy_evolution_example.py:107:9: error: Unsupported target for indexed assignment ("DataFrame")  [index]
examples\strategy_evolution_example.py:108:16: error: "DataFrame" has no attribute "set_index"  [attr-defined]
examples\mirror_neuron_signal_example.py:92:25: error: Incompatible types in assignment (expression has type "Decimal | Literal[0]", variable has type "Decimal")  [assignment]
examples\mirror_neuron_signal_example.py:178:22: error: Module has no attribute "date_range"  [attr-defined]
examples\mirror_neuron_signal_example.py:179:19: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
examples\mirror_neuron_signal_example.py:179:40: error: Module has no attribute "Timedelta"  [attr-defined]
examples\mirror_neuron_signal_example.py:193:9: error: Unsupported target for indexed assignment ("DataFrame")  [index]
examples\mirror_neuron_signal_example.py:194:16: error: "DataFrame" has no attribute "set_index"  [attr-defined]
examples\mirror_neuron_signal_example.py:217:14: error: "DataFrame" has no attribute "copy"  [attr-defined]
examples\mirror_neuron_signal_example.py:260:23: error: "DataFrame" has no attribute "tail"  [attr-defined]
examples\mirror_neuron_signal_example.py:285:26: error: Unexpected keyword argument "signal_id" for "Signal"  [call-arg]
examples\mirror_neuron_signal_example.py:285:26: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
examples\mirror_neuron_signal_example.py:290:31: error: Argument "timestamp" to "Signal" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\mirror_neuron_signal_example.py:292:25: error: Dict entry 0 has incompatible type "str": "Any | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
examples\mirror_neuron_signal_example.py:293:25: error: Dict entry 1 has incompatible type "str": "Any | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
examples\mirror_neuron_signal_example.py:294:25: error: Dict entry 2 has incompatible type "str": "Any | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
examples\mirror_neuron_signal_example.py:295:25: error: Dict entry 3 has incompatible type "str": "Any | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
examples\mirror_neuron_signal_example.py:314:20: error: "type[SignalType]" has no attribute "REVERSAL"  [attr-defined]
examples\mirror_neuron_signal_example.py:342:37: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
examples\mirror_neuron_signal_example.py:347:37: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
examples\mirror_neuron_signal_example.py:350:40: error: "type[SignalType]" has no attribute "REVERSAL"  [attr-defined]
examples\mirror_neuron_signal_example.py:352:36: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
examples\mirror_neuron_signal_example.py:360:34: error: "Signal" has no attribute "signal_id"  [attr-defined]
examples\liquidity_gravity_example.py:22:1: error: Module "application.risk.liquidity_gravity_monitor" has no attribute "LiquidityGravityFilter"; maybe "LiquidityGravityMonitor", "LiquidityGravityResult", or "LiquidityGravityModel"?  [attr-defined]
examples\liquidity_gravity_example.py:22:1: error: Module "application.risk.liquidity_gravity_monitor" has no attribute "LiquidityRiskAssessor"  [attr-defined]
examples\liquidity_gravity_example.py:22:1: error: Module "application.risk.liquidity_gravity_monitor" has no attribute "RiskThresholds"  [attr-defined]
examples\liquidity_gravity_example.py:92:23: error: Argument "timestamp" to "LiquidityGravitySignal" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
examples\liquidity_gravity_example.py:211:23: error: Argument "timestamp" to "OrderBookSnapshot" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\liquidity_gravity_example.py:235:23: error: Argument "timestamp" to "OrderBookSnapshot" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\liquidity_gravity_example.py:260:23: error: Argument "timestamp" to "OrderBookSnapshot" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\liquidity_gravity_example.py:327:29: error: Incompatible types in assignment (expression has type "Decimal | Literal[0]", variable has type "Decimal")  [assignment]
examples\liquidity_gravity_example.py:541:19: error: Argument "timestamp" to "OrderBookSnapshot" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\liquidity_gravity_example.py:555:19: error: Argument "timestamp" to "OrderBookSnapshot" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
examples\liquidity_gravity_example.py:581:14: error: Name "ExampleMode" is not defined  [name-defined]
examples\liquidity_gravity_example.py:598:5: error: Name "asyncio" is not defined  [name-defined]
domain\sessions\session_manager.py:193:16: error: Incompatible return value type (got "dict[str, object]", expected "dict[str, str | float | int]")  [return-value]
domain\sessions\session_manager.py:227:17: error: "SessionConfigurationRepository" has no attribute "update_session_profile"; maybe "delete_session_profile", "save_session_profile", or "get_session_profile"?  [attr-defined]
domain\sessions\session_manager.py:247:24: error: Incompatible return value type (got "dict[str, float]", expected "dict[str, str | float | int]")  [return-value]
domain\sessions\session_manager.py:247:24: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\sessions\session_manager.py:247:24: note: Consider using "Mapping" instead, which is covariant in the value type
domain\sessions\session_manager.py:265:21: error: Dict entry 2 has incompatible type "str": "dict[str, str | float | int | bool | None]"; expected "str": "str | float | int | None"  [dict-item]
domain\sessions\session_manager.py:268:20: error: Incompatible return value type (got "dict[str, str | float | int | bool | None]", expected "dict[str, str | float | int | bool | dict[str, str | float | int | bool | None] | None]")  [return-value]
domain\sessions\session_manager.py:268:20: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\sessions\session_manager.py:268:20: note: Consider using "Mapping" instead, which is covariant in the value type
domain\sessions\session_manager.py:268:20: note: Perhaps you need a type annotation for "stats"? Suggestion: "dict[str, str | float | int | bool | dict[str, str | float | int | bool | None] | None]"
domain\sessions\session_influence_analyzer.py:443:25: error: "Series" has no attribute "tail"  [attr-defined]
domain\sessions\session_influence_analyzer.py:444:29: error: "Series" has no attribute "head"  [attr-defined]
domain\sessions\session_influence_analyzer.py:463:29: error: "Series" has no attribute "tail"  [attr-defined]
domain\sessions\session_influence_analyzer.py:464:33: error: "Series" has no attribute "head"  [attr-defined]
domain\sessions\session_influence_analyzer.py:482:25: error: "Series" has no attribute "tail"  [attr-defined]
domain\sessions\session_influence_analyzer.py:510:17: error: "Series" has no attribute "diff"  [attr-defined]
domain\sessions\session_influence_analyzer.py:517:12: error: Module has no attribute "isna"  [attr-defined]
application\services\notification_service.py:149:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\entanglement\stream_manager.py:302:43: error: Argument 1 to "len" has incompatible type "Callable[[str, Any], None]"; expected "Sized"  [arg-type]
tests\unit\test_risk_manager.py:23:13: error: Signature of "publish" incompatible with supertype "EventBus"  [override]
tests\unit\test_risk_manager.py:23:13: note:      Superclass:
tests\unit\test_risk_manager.py:23:13: note:          def publish(self, event: Event) -> Coroutine[Any, Any, bool]
tests\unit\test_risk_manager.py:23:13: note:      Subclass:
tests\unit\test_risk_manager.py:23:13: note:          def publish(self, event: str, data: dict[str, Any]) -> Coroutine[Any, Any, None]
tests\unit\test_risk_manager.py:23:13: error: Signature of "publish" incompatible with supertype "EventBusProtocol"  [override]
tests\unit\test_risk_manager.py:23:13: note:      Superclass:
tests\unit\test_risk_manager.py:23:13: note:          def publish(self, event: Event) -> Coroutine[Any, Any, bool]
tests\unit\test_risk_manager.py:23:13: note:      Subclass:
tests\unit\test_risk_manager.py:23:13: note:          def publish(self, event: str, data: dict[str, Any]) -> Coroutine[Any, Any, None]
shared\visualization.py:15:13: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:15:32: error: Argument 2 to "plot" of "Axes" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
shared\visualization.py:31:14: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:38:18: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:53:14: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:59:14: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:74:13: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:74:27: error: Argument 2 to "plot" of "Axes" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
shared\visualization.py:163:13: error: Argument 1 to "hist" of "Axes" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | Sequence[_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]]"  [arg-type]
shared\visualization.py:174:13: error: "Series" has no attribute "index"  [attr-defined]
shared\visualization.py:174:25: error: Argument 2 to "plot" of "Axes" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
infrastructure\strategies\visualization.py:142:27: error: "Series" has no attribute "expanding"  [attr-defined]
infrastructure\strategies\visualization.py:169:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\strategies\visualization.py:170:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\strategies\visualization.py:172:31: error: "DataFrame" has no attribute "groupby"  [attr-defined]
infrastructure\strategies\visualization.py:225:21: error: Argument 1 to "bar" has incompatible type "dict_keys[str, Any]"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
infrastructure\strategies\visualization.py:225:37: error: Argument 2 to "bar" has incompatible type "dict_values[str, Any]"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
infrastructure\strategies\visualization.py:284:13: error: "DataFrame" has no attribute "to_csv"  [attr-defined]
infrastructure\strategies\backtest.py:72:51: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\strategies\backtest.py:223:46: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\strategies\backtest.py:224:32: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\strategies\backtest.py:248:27: error: "Series" has no attribute "expanding"  [attr-defined]
infrastructure\strategies\backtest.py:336:17: error: "DataFrame" has no attribute "to_csv"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:11:1: error: Library stubs not installed for "aiofiles"  [import-untyped]
infrastructure\simulation\backtest_explainer.py:11:1: note: Hint: "python3 -m pip install types-aiofiles"
infrastructure\simulation\backtest_explainer.py:11:1: note: (or run "mypy --install-types" to install all missing stub packages)
infrastructure\simulation\backtest_explainer.py:11:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
infrastructure\simulation\backtest_explainer.py:145:26: error: "DataFrame" has no attribute "loc"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:405:28: error: "DataFrame" has no attribute "groupby"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:413:32: error: "DataFrame" has no attribute "groupby"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:415:34: error: Module has no attribute "crosstab"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:441:20: error: Unsupported right operand type for in ("object")  [operator]
infrastructure\simulation\backtest_explainer.py:442:21: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:443:17: error: Value of type "object" is not indexable  [index]
infrastructure\simulation\backtest_explainer.py:443:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:445:24: error: Unsupported right operand type for in ("object")  [operator]
infrastructure\simulation\backtest_explainer.py:446:25: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:447:21: error: Value of type "object" is not indexable  [index]
infrastructure\simulation\backtest_explainer.py:451:24: error: Unsupported right operand type for in ("object")  [operator]
infrastructure\simulation\backtest_explainer.py:452:25: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:453:21: error: Value of type "object" is not indexable  [index]
infrastructure\simulation\backtest_explainer.py:457:33: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
infrastructure\simulation\backtest_explainer.py:458:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:459:21: error: Value of type "object" is not indexable  [index]
infrastructure\simulation\backtest_explainer.py:461:33: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
infrastructure\simulation\backtest_explainer.py:462:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\simulation\backtest_explainer.py:463:21: error: Value of type "object" is not indexable  [index]
infrastructure\simulation\backtest_explainer.py:554:28: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:629:13: error: "DataFrame" has no attribute "plot"  [attr-defined]
infrastructure\simulation\backtest_explainer.py:634:25: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\sessions\session_repository.py:933:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:942:21: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, float, bool, str | None]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:1010:28: error: Name "ConfidenceScore" is not defined  [name-defined]
infrastructure\sessions\session_repository.py:1011:25: error: Argument "metrics" to "SessionAnalysisResult" has incompatible type "dict[str, float]"; expected "SessionMetrics"  [arg-type]
infrastructure\sessions\session_repository.py:1012:35: error: Argument "market_conditions" to "SessionAnalysisResult" has incompatible type "dict[str, object]"; expected "MarketConditions"  [arg-type]
infrastructure\sessions\session_repository.py:1014:30: error: Argument "risk_factors" to "SessionAnalysisResult" has incompatible type "dict[Never, Never]"; expected "list[str]"  [arg-type]
infrastructure\sessions\session_repository.py:1030:35: error: Argument "influence_metrics" to "SessionInfluenceResult" has incompatible type "dict[Never, Never]"; expected "SessionInfluenceMetrics"  [arg-type]
infrastructure\sessions\session_repository.py:1036:37: error: Argument "historical_patterns" to "SessionInfluenceResult" has incompatible type "dict[Never, Never]"; expected "list[dict[str, str | float | int]]"  [arg-type]
infrastructure\sessions\session_repository.py:1047:20: error: Missing positional arguments "influence_strength", "market_conditions", "predicted_impact" in call to "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1111:24: error: Incompatible return value type (got "dict[Any | str, dict[str, Any | float | int]]", expected "dict[str, str | float | int]")  [return-value]
infrastructure\ml_services\visualization.py:221:23: error: "DataFrame" has no attribute "close"  [attr-defined]
infrastructure\ml_services\visualization.py:221:37: error: "DataFrame" has no attribute "open"  [attr-defined]
infrastructure\ml_services\visualization.py:222:25: error: "DataFrame" has no attribute "close"  [attr-defined]
infrastructure\ml_services\visualization.py:222:38: error: "DataFrame" has no attribute "open"  [attr-defined]
infrastructure\ml_services\visualization.py:334:26: error: Argument 1 to "plot" of "Axes" has incompatible type "Series"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
infrastructure\ml_services\visualization.py:342:26: error: Argument 1 to "plot" of "Axes" has incompatible type "Series"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
infrastructure\ml_services\visualization.py:343:26: error: Argument 1 to "plot" of "Axes" has incompatible type "Series"; expected "float | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes] | str"  [arg-type]
infrastructure\external_services\exchange.py:19:1: error: Module "infrastructure.external_services.order_manager" has no attribute "OrderManager"; maybe "OrderManagerAdapter"?  [attr-defined]
infrastructure\external_services\exchange.py:20:1: error: Module "infrastructure.external_services.technical_analysis_service" has no attribute "AccountMetrics"  [attr-defined]
infrastructure\external_services\exchange.py:61:23: error: Cannot instantiate abstract class "BybitClient" with abstract attributes "create_order", "fetch_balance", ... and "fetch_ticker" (3 methods suppressed)  [abstract]
infrastructure\external_services\exchange.py:65:32: error: Cannot instantiate abstract class "AccountManager" with abstract attributes "create_order", "fetch_balance", ... and "fetch_ticker" (3 methods suppressed)  [abstract]
infrastructure\external_services\exchange.py:156:19: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:168:27: error: "BybitClient" has no attribute "fetch_ohlcv"  [attr-defined]
infrastructure\external_services\exchange.py:173:18: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:176:31: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:187:26: error: "AccountManager" has no attribute "get_metrics"  [attr-defined]
infrastructure\external_services\exchange.py:190:42: error: Incompatible types in assignment (expression has type "str", target has type "float | None")  [assignment]
infrastructure\external_services\exchange.py:191:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchange.py:191:13: note: Left operand is of type "float | None"
infrastructure\external_services\exchange.py:209:38: error: "AccountManager" has no attribute "get_available_margin"  [attr-defined]
infrastructure\external_services\exchange.py:226:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchange.py:226:13: note: Left operand is of type "float | None"
infrastructure\external_services\exchange.py:233:42: error: Incompatible types in assignment (expression has type "str", target has type "float | None")  [assignment]
infrastructure\external_services\exchange.py:234:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchange.py:234:13: note: Left operand is of type "float | None"
infrastructure\external_services\exchange.py:235:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchange.py:235:13: note: Left operand is of type "float | None"
infrastructure\external_services\exchange.py:246:42: error: Incompatible types in assignment (expression has type "str", target has type "float | None")  [assignment]
infrastructure\external_services\exchange.py:247:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchange.py:247:13: note: Left operand is of type "float | None"
infrastructure\external_services\exchange.py:343:10: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:358:24: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:360:21: error: "BybitClient" has no attribute "fetch_ohlcv"  [attr-defined]
infrastructure\external_services\exchange.py:368:24: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:370:18: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:373:31: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:382:20: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:420:54: error: Argument 1 to "create_order" of "ExchangeProtocol" has incompatible type "**dict[str, object]"; expected "Order"  [arg-type]
infrastructure\external_services\exchange.py:457:53: error: Name "pd" is not defined  [name-defined]
infrastructure\external_services\exchange.py:491:26: error: "BybitClient" has no attribute "get_account"; maybe "get_account_info"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:62:20: error: "LockType" has no attribute "__aenter__"; maybe "__enter__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:62:20: error: "LockType" has no attribute "__aexit__"; maybe "__exit__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:76:20: error: "LockType" has no attribute "__aenter__"; maybe "__enter__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:76:20: error: "LockType" has no attribute "__aexit__"; maybe "__exit__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:88:20: error: "LockType" has no attribute "__aenter__"; maybe "__enter__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:88:20: error: "LockType" has no attribute "__aexit__"; maybe "__exit__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:184:24: error: "LockType" has no attribute "__aenter__"; maybe "__enter__"?  [attr-defined]
infrastructure\external_services\ml\model_manager.py:184:24: error: "LockType" has no attribute "__aexit__"; maybe "__exit__"?  [attr-defined]
infrastructure\external_services\exchanges\factory.py:33:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
infrastructure\external_services\exchanges\factory.py:54:21: error: Argument "api_key" to "ExchangeCredentials" has incompatible type "str"; expected "APIKey"  [arg-type]
infrastructure\external_services\exchanges\factory.py:54:41: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\exchanges\factory.py:61:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
infrastructure\external_services\exchanges\factory.py:77:21: error: Argument "api_key" to "ExchangeCredentials" has incompatible type "str"; expected "APIKey"  [arg-type]
infrastructure\external_services\exchanges\factory.py:77:41: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\exchanges\factory.py:84:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
infrastructure\evolution\backup.py:50:13: error: Attribute "storage" already defined on line 47  [no-redef]
infrastructure\evolution\backup.py:53:13: error: Attribute "storage" already defined on line 47  [no-redef]
infrastructure\evolution\backup.py:56:13: error: Attribute "storage" already defined on line 47  [no-redef]
infrastructure\evolution\backup.py:360:25: error: Name "model" already defined on line 355  [no-redef]
infrastructure\evolution\backup.py:365:25: error: Name "model" already defined on line 355  [no-redef]
domain\sessions\session_analyzer_factory.py:22:35: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
domain\sessions\session_analyzer_factory.py:154:28: error: Missing positional argument "registry" in call to "BaseSessionAnalyzer"  [call-arg]
domain\sessions\session_analyzer_factory.py:156:28: error: Missing positional argument "registry" in call to "BaseSessionAnalyzer"  [call-arg]
domain\sessions\session_analyzer_factory.py:159:28: error: Missing positional argument "registry" in call to "BaseSessionAnalyzer"  [call-arg]
domain\sessions\services.py:118:24: error: Incompatible return value type (got "object", expected "SessionContext")  [return-value]
domain\sessions\services.py:133:20: error: Incompatible return value type (got "dict[str, object]", expected "SessionContext")  [return-value]
domain\sessions\services.py:162:24: error: Incompatible return value type (got "object", expected "SessionAnalysisResult | None")  [return-value]
domain\sessions\services.py:196:24: error: Incompatible return value type (got "object", expected "SessionPrediction")  [return-value]
domain\sessions\services.py:230:41: error: "SessionMetrics" has no attribute "volatility_change_percent"  [attr-defined]
domain\sessions\services.py:231:37: error: "SessionMetrics" has no attribute "volume_change_percent"  [attr-defined]
domain\sessions\services.py:232:45: error: "SessionMetrics" has no attribute "price_direction_bias"  [attr-defined]
domain\sessions\services.py:233:39: error: "SessionMetrics" has no attribute "momentum_strength"  [attr-defined]
domain\sessions\services.py:234:41: error: "SessionMetrics" has no attribute "reversal_probability"  [attr-defined]
domain\sessions\services.py:235:45: error: "SessionMetrics" has no attribute "trend_continuation_probability"  [attr-defined]
domain\sessions\services.py:236:47: error: "SessionMetrics" has no attribute "false_breakout_probability"  [attr-defined]
domain\sessions\services.py:256:24: error: Incompatible return value type (got "object", expected "list[str]")  [return-value]
domain\sessions\services.py:278:24: error: Incompatible return value type (got "object", expected "dict[str, Any]")  [return-value]
domain\sessions\services.py:295:33: error: "SessionProfile" has no attribute "last_updated"  [attr-defined]
domain\sessions\services.py:307:65: error: Argument 1 to "is_transition_period" of "BaseSessionTransitionManager" has incompatible type "Timestamp | None"; expected "Timestamp"  [arg-type]
domain\sessions\services.py:317:74: error: Argument 1 to "get_active_transitions" of "BaseSessionTransitionManager" has incompatible type "Timestamp | None"; expected "Timestamp"  [arg-type]
domain\sessions\services.py:319:21: error: "SessionTransition" has no attribute "to_dict"  [attr-defined]
domain\sessions\services.py:394:35: error: Argument 1 to "len" has incompatible type "SessionCache"; expected "Sized"  [arg-type]
application\signal\session_signal_engine.py:279:16: error: "SessionInfluenceResult" has no attribute "score"  [attr-defined]
application\signal\session_signal_engine.py:281:18: error: "SessionInfluenceResult" has no attribute "score"  [attr-defined]
application\signal\session_signal_engine.py:304:20: error: Incompatible return value type (got "None", expected "SessionInfluenceSignal")  [return-value]
application\signal\session_signal_engine.py:352:20: error: Incompatible return value type (got "None", expected "SessionInfluenceResult")  [return-value]
application\analysis\entanglement_monitor.py:361:13: error: Need type annotation for "history" (hint: "history: list[<type>] = ...")  [var-annotated]
tests\test_utils.py:7:1: error: Module "shared.visualization" has no attribute "plot_trades"  [attr-defined]
tests\unit\domain\sessions\test_session_components.py:331:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\unit\domain\sessions\test_session_components.py:340:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\unit\domain\sessions\test_session_components.py:369:26: error: Module has no attribute "date_range"  [attr-defined]
tests\unit\domain\sessions\test_session_components.py:417:26: error: Module has no attribute "date_range"  [attr-defined]
tests\unit\domain\sessions\test_session_components.py:513:26: error: Module has no attribute "date_range"  [attr-defined]
tests\infrastructure\monitoring\test_performance.py:110:21: error: Argument 3 to "record_metric" has incompatible type "dict[str, int]"; expected "MetricType"  [arg-type]
tests\infrastructure\monitoring\test_performance.py:139:21: error: Argument 3 to "create_alert" has incompatible type "str"; expected "AlertSeverity"  [arg-type]
tests\infrastructure\monitoring\test_integration.py:110:71: error: Argument 3 to "record_metric" has incompatible type "dict[str, int]"; expected "MetricType"  [arg-type]
tests\infrastructure\monitoring\test_integration.py:118:21: error: Unexpected keyword argument "source" for "create_alert"  [call-arg]
infrastructure\monitoring\monitoring_alerts.py:252:1: note: "create_alert" defined here
tests\infrastructure\monitoring\test_integration.py:120:34: error: Argument "severity" to "create_alert" has incompatible type "str"; expected "AlertSeverity"  [arg-type]
tests\infrastructure\monitoring\test_integration.py:243:72: error: Argument 3 to "record_metric" has incompatible type "dict[str, int]"; expected "MetricType"  [arg-type]
tests\infrastructure\monitoring\test_integration.py:249:25: error: Argument 3 to "create_alert" has incompatible type "str"; expected "AlertSeverity"  [arg-type]
tests\infrastructure\evolution\test_backup.py:59:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:60:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:61:16: error: "BackupMetadata" has no attribute "suffix"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:63:14: error: No overload variant of "open" matches argument types "BackupMetadata", "str", "str"  [call-overload]
tests\infrastructure\evolution\test_backup.py:63:14: note: Possible overload variants:
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['r+', '+r', 'rt+', 'r+t', '+rt', 'tr+', 't+r', '+tr', 'w+', '+w', 'wt+', 'w+t', '+wt', 'tw+', 't+w', '+tw', 'a+', '+a', 'at+', 'a+t', '+at', 'ta+', 't+a', '+ta', 'x+', '+x', 'xt+', 'x+t', '+xt', 'tx+', 't+x', '+tx'] | Literal['w', 'wt', 'tw', 'a', 'at', 'ta', 'x', 'xt', 'tx'] | Literal['r', 'rt', 'tr', 'U', 'rU', 'Ur', 'rtU', 'rUt', 'Urt', 'trU', 'tUr', 'Utr'] = ..., buffering: int = ..., encoding: str | None = ..., errors: str | None = ..., newline: str | None = ..., closefd: bool = ..., opener: Any | None = ...) -> TextIOWrapper[_WrappedBuffer]
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['rb+', 'r+b', '+rb', 'br+', 'b+r', '+br', 'wb+', 'w+b', '+wb', 'bw+', 'b+w', '+bw', 'ab+', 'a+b', '+ab', 'ba+', 'b+a', '+ba', 'xb+', 'x+b', '+xb', 'bx+', 'b+x', '+bx'] | Literal['rb', 'br', 'rbU', 'rUb', 'Urb', 'brU', 'bUr', 'Ubr'] | Literal['wb', 'bw', 'ab', 'ba', 'xb', 'bx'], buffering: Literal[0], encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: Any | None = ...) -> FileIO
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['rb+', 'r+b', '+rb', 'br+', 'b+r', '+br', 'wb+', 'w+b', '+wb', 'bw+', 'b+w', '+bw', 'ab+', 'a+b', '+ab', 'ba+', 'b+a', '+ba', 'xb+', 'x+b', '+xb', 'bx+', 'b+x', '+bx'], buffering: Literal[-1, 1] = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: Any | None = ...) -> BufferedRandom
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['wb', 'bw', 'ab', 'ba', 'xb', 'bx'], buffering: Literal[-1, 1] = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: Any | None = ...) -> BufferedWriter
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['rb', 'br', 'rbU', 'rUb', 'Urb', 'brU', 'bUr', 'Ubr'], buffering: Literal[-1, 1] = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: Any | None = ...) -> BufferedReader
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: Literal['rb+', 'r+b', '+rb', 'br+', 'b+r', '+br', 'wb+', 'w+b', '+wb', 'bw+', 'b+w', '+bw', 'ab+', 'a+b', '+ab', 'ba+', 'b+a', '+ba', 'xb+', 'x+b', '+xb', 'bx+', 'b+x', '+bx'] | Literal['rb', 'br', 'rbU', 'rUb', 'Urb', 'brU', 'bUr', 'Ubr'] | Literal['wb', 'bw', 'ab', 'ba', 'xb', 'bx'], buffering: int = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: Any | None = ...) -> BinaryIO
tests\infrastructure\evolution\test_backup.py:63:14: note:     def open(file: int | str | bytes | PathLike[str] | PathLike[bytes], mode: str, buffering: int = ..., encoding: str | None = ..., errors: str | None = ..., newline: str | None = ..., closefd: bool = ..., opener: Any | None = ...) -> IO[Any]
tests\infrastructure\evolution\test_backup.py:80:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:81:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:82:16: error: "BackupMetadata" has no attribute "suffix"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:92:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:93:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:94:16: error: "BackupMetadata" has no attribute "suffix"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:110:34: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:127:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:129:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:131:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_backup.py:132:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_backup.py:133:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_backup.py:134:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_backup.py:136:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_backup.py:137:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_backup.py:138:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_backup.py:148:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:150:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:162:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:164:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:171:35: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:181:35: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:189:34: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:192:20: error: "BackupMetadata" has no attribute "suffix"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:212:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:214:16: error: "EvolutionBackup" has no attribute "get_backup_info"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:229:13: error: "EvolutionBackup" has no attribute "get_backup_info"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:236:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:237:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:239:30: error: Argument 1 to "delete_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:240:20: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:246:34: error: Argument 1 to "delete_backup" of "EvolutionBackup" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_backup.py:258:34: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:263:25: error: "EvolutionBackup" has no attribute "cleanup_old_backups"; maybe "_cleanup_old_backups"?  [attr-defined]
tests\infrastructure\evolution\test_backup.py:283:9: error: "EvolutionBackup" has no attribute "_validate_backup_data"; maybe "_load_backup_data"?  [attr-defined]
tests\infrastructure\evolution\test_backup.py:291:13: error: "EvolutionBackup" has no attribute "_validate_backup_data"; maybe "_load_backup_data"?  [attr-defined]
tests\infrastructure\evolution\test_backup.py:297:27: error: "EvolutionBackup" has no attribute "_compress_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:304:27: error: "EvolutionBackup" has no attribute "_compress_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:305:29: error: "EvolutionBackup" has no attribute "_decompress_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:316:26: error: "EvolutionBackup" has no attribute "_encrypt_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:328:26: error: "EvolutionBackup" has no attribute "_encrypt_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:329:26: error: "EvolutionBackup" has no attribute "_decrypt_data"  [attr-defined]
tests\infrastructure\evolution\test_backup.py:341:34: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, str]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_backup.py:346:25: error: "BackupMetadata" has no attribute "stat"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:17:1: error: Module "infrastructure.ml_services.candle_patterns" has no attribute "CandlePatterns"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:77:29: error: "MarketRegimeDetector" has no attribute "detect_regime"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:344:35: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:351:73: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:353:17: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\market_profiles\analysis\pattern_analyzer.py:164:31: error: Argument 1 to "Confidence" has incompatible type "SupportsDunderLT[Any] | SupportsDunderGT[Any]"; expected "float"  [arg-type]
infrastructure\market_profiles\analysis\pattern_analyzer.py:231:25: error: Argument 1 to "_calculate_context_similarity" of "PatternAnalyzer" has incompatible type "PatternContext"; expected "dict[str, Any]"  [arg-type]
infrastructure\market_profiles\analysis\pattern_analyzer.py:231:42: error: Argument 2 to "_calculate_context_similarity" of "PatternAnalyzer" has incompatible type "PatternContext"; expected "dict[str, Any]"  [arg-type]
infrastructure\market_profiles\analysis\pattern_analyzer.py:295:65: error: Argument 1 to "_calculate_weighted_outcome" of "PatternAnalyzer" has incompatible type "list[PatternResultProtocol]"; expected "list[PatternResult]"  [arg-type]
infrastructure\evolution\migration.py:151:26: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:151:26: note: Possible overload variants:
infrastructure\evolution\migration.py:151:26: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:151:26: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:159:20: error: Incompatible return value type (got "list[dict[Any, Any]]", expected "list[MigrationMetadata]")  [return-value]
infrastructure\evolution\migration.py:189:17: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:189:17: note: Possible overload variants:
infrastructure\evolution\migration.py:189:17: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:189:17: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:239:21: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:239:21: note: Possible overload variants:
infrastructure\evolution\migration.py:239:21: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:239:21: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:253:21: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:253:21: note: Possible overload variants:
infrastructure\evolution\migration.py:253:21: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:253:21: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:312:17: error: No overload variant of "exec" of "Session" matches argument types "TextClause", "dict[str, object]"  [call-overload]
infrastructure\evolution\migration.py:312:17: note: Possible overload variants:
infrastructure\evolution\migration.py:312:17: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:312:17: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:344:26: error: No overload variant of "exec" of "Session" matches argument types "TextClause", "dict[str, str]"  [call-overload]
infrastructure\evolution\migration.py:344:26: note: Possible overload variants:
infrastructure\evolution\migration.py:344:26: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:344:26: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:351:28: error: Incompatible return value type (got "dict[Any, Any]", expected "MigrationMetadata | None")  [return-value]
infrastructure\data\price_pattern_extractor.py:22:5: error: Name "DBSCAN" already defined (possibly by an import)  [no-redef]
infrastructure\data\price_pattern_extractor.py:155:19: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:197:27: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:201:31: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:208:31: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:216:34: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:248:27: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:275:31: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:310:27: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:313:30: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:334:26: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:439:44: error: Unsupported operand types for * ("float" and "Decimal")  [operator]
infrastructure\data\price_pattern_extractor.py:442:24: error: Incompatible return value type (got "Decimal | float", expected "float")  [return-value]
infrastructure\data\price_pattern_extractor.py:563:13: error: Need type annotation for "clusters" (hint: "clusters: list[<type>] = ...")  [var-annotated]
infrastructure\data\price_pattern_extractor.py:607:21: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:609:25: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:613:25: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:617:22: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\data\price_pattern_extractor.py:627:21: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\core\market_state.py:190:16: error: Incompatible return value type (got "list[floating[Any]]", expected "list[float]")  [return-value]
examples\extended_entanglement_example.py:34:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\session_service.py:9:1: error: Module "domain.types.session_types" has no attribute "SessionPrediction"; maybe "SessionTransition"?  [attr-defined]
domain\sessions\session_service.py:135:13: error: Dict entry 6 has incompatible type "str": "str | None"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_service.py:138:13: error: Dict entry 7 has incompatible type "str": "str | None"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_service.py:143:13: error: Dict entry 8 has incompatible type "str": "str | None"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_service.py:151:13: error: Dict entry 12 has incompatible type "str": "str | None"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_service.py:305:45: error: Trying to read deleted variable "e"  [misc]
domain\sessions\session_service.py:305:45: error: Name "e" is used before definition  [used-before-def]
domain\sessions\session_service.py:355:45: error: Trying to read deleted variable "e"  [misc]
domain\sessions\session_service.py:355:45: error: Name "e" is used before definition  [used-before-def]
domain\sessions\session_service.py:378:16: error: Incompatible return value type (got "dict[str, object]", expected "dict[str, str | float | int]")  [return-value]
domain\sessions\session_service.py:439:24: error: Incompatible return value type (got "dict[str, float]", expected "dict[str, str | float | int]")  [return-value]
domain\sessions\session_service.py:439:24: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\sessions\session_service.py:439:24: note: Consider using "Mapping" instead, which is covariant in the value type
domain\sessions\session_service.py:453:17: error: Dict entry 0 has incompatible type "str": "dict[str, str | float | int | bool]"; expected "str": "str | float | int | None"  [dict-item]
domain\sessions\session_service.py:454:17: error: Dict entry 1 has incompatible type "str": "dict[str, str | float | int | bool | None]"; expected "str": "str | float | int | None"  [dict-item]
domain\sessions\session_service.py:455:17: error: Dict entry 2 has incompatible type "str": "dict[str, bool]"; expected "str": "str | float | int | None"  [dict-item]
domain\sessions\session_service.py:501:30: error: Cannot instantiate abstract class "BaseSessionAnalyzer" with abstract attributes "analyze_session" and "get_session_context"  [abstract]
domain\sessions\session_service.py:501:30: error: Missing positional argument "registry" in call to "BaseSessionAnalyzer"  [call-arg]
domain\sessions\factories.py:44:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:45:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:46:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:51:30: error: Incompatible types in assignment (expression has type "SessionProfileRegistry", variable has type "SessionRegistry | None")  [assignment]
domain\sessions\factories.py:53:16: error: Incompatible return value type (got "SessionRegistry | None", expected "SessionRegistry")  [return-value]
domain\sessions\factories.py:95:24: error: Incompatible types in assignment (expression has type "SessionProfileRegistry", variable has type "SessionRegistry | None")  [assignment]
domain\sessions\factories.py:96:30: error: Argument 1 to "SessionMarker" has incompatible type "SessionRegistry"; expected "SessionProfileRegistry | None"  [arg-type]
domain\services\pattern_service.py:266:40: error: Incompatible types in assignment (expression has type "float", target has type "dict[str, float]")  [assignment]
domain\services\pattern_service.py:267:16: error: Incompatible return value type (got "dict[str, dict[str, float]]", expected "dict[str, float | dict[str, float]]")  [return-value]
domain\services\pattern_service.py:267:16: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\services\pattern_service.py:267:16: note: Consider using "Mapping" instead, which is covariant in the value type
domain\services\pattern_service.py:267:16: note: Perhaps you need a type annotation for "characteristics"? Suggestion: "dict[str, float | dict[str, float]]"
domain\services\pattern_discovery.py:118:24: error: "DataFrame" has no attribute "iloc"  [attr-defined]
domain\services\pattern_discovery.py:126:23: error: "DataFrame" has no attribute "iloc"  [attr-defined]
domain\services\pattern_discovery.py:187:18: error: "Series" has no attribute "rolling"  [attr-defined]
domain\services\pattern_discovery.py:188:15: error: "Series" has no attribute "rolling"  [attr-defined]
domain\services\pattern_discovery.py:358:24: error: "DataFrame" has no attribute "iloc"  [attr-defined]
tests\unit\domain\sessions\test_integration.py:8:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\performance\test_sessions_performance.py:317:34: error: Module has no attribute "date_range"  [attr-defined]
tests\integration\test_sessions_integration.py:282:34: error: Module has no attribute "date_range"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:14:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:15:16: error: "EvolutionMigration" has no attribute "migrations_dir"; maybe "migration_dir"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:16:16: error: "EvolutionMigration" has no attribute "auto_migrate"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:17:16: error: "EvolutionMigration" has no attribute "backup_before_migrate"; maybe "_create_backup_before_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:18:16: error: "EvolutionMigration" has no attribute "rollback_supported"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:27:40: error: Argument 1 to "EvolutionMigration" has incompatible type "dict[str, object]"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:28:16: error: "EvolutionMigration" has no attribute "migrations_dir"; maybe "migration_dir"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:29:16: error: "EvolutionMigration" has no attribute "auto_migrate"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:30:16: error: "EvolutionMigration" has no attribute "backup_before_migrate"; maybe "_create_backup_before_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:31:16: error: "EvolutionMigration" has no attribute "rollback_supported"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:43:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:57:26: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:71:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:79:13: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:86:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:93:13: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:97:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:103:23: error: "EvolutionMigration" has no attribute "load_migration"; maybe "apply_migration" or "list_migrations"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:109:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:112:13: error: "EvolutionMigration" has no attribute "load_migration"; maybe "apply_migration" or "list_migrations"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:116:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:122:13: error: "EvolutionMigration" has no attribute "load_migration"; maybe "apply_migration" or "list_migrations"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:126:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:139:20: error: "MigrationMetadata" has no attribute "suffix"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:141:21: error: "MigrationMetadata" has no attribute "stem"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:145:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:150:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:156:16: error: "EvolutionMigration" has no attribute "get_migration_info"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:168:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:171:13: error: "EvolutionMigration" has no attribute "get_migration_info"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:175:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:180:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:190:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:200:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:211:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:222:9: error: Too many arguments for "_check_dependencies" of "EvolutionMigration"  [call-arg]
tests\infrastructure\evolution\test_migration.py:222:39: error: Argument 1 to "_check_dependencies" of "EvolutionMigration" has incompatible type "str"; expected "list[str]"  [arg-type]
tests\infrastructure\evolution\test_migration.py:225:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:237:13: error: Too many arguments for "_check_dependencies" of "EvolutionMigration"  [call-arg]
tests\infrastructure\evolution\test_migration.py:237:43: error: Argument 1 to "_check_dependencies" of "EvolutionMigration" has incompatible type "str"; expected "list[str]"  [arg-type]
tests\infrastructure\evolution\test_migration.py:241:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:252:13: error: Too many arguments for "_check_dependencies" of "EvolutionMigration"  [call-arg]
tests\infrastructure\evolution\test_migration.py:252:43: error: Argument 1 to "_check_dependencies" of "EvolutionMigration" has incompatible type "str"; expected "list[str]"  [arg-type]
tests\infrastructure\evolution\test_migration.py:256:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:268:29: error: "EvolutionMigration" has no attribute "_sort_migrations_by_dependencies"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:274:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:280:18: error: "EvolutionMigration" has no attribute "execute_migration"; maybe "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:287:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:301:13: error: "EvolutionMigration" has no attribute "execute_migration"; maybe "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:305:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:311:47: error: Argument 1 to "rollback_migration" of "EvolutionMigration" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_migration.py:312:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_migration.py:313:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_migration.py:314:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_migration.py:315:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_migration.py:318:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:332:42: error: Argument 1 to "rollback_migration" of "EvolutionMigration" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_migration.py:336:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:347:18: error: "EvolutionMigration" has no attribute "get_migration_status"  [attr-defined]
tests\infrastructure\evolution\test_migration.py:355:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_migration.py:361:9: error: "EvolutionMigration" has no attribute "_validate_migration_file"; maybe "_validate_migration"?  [attr-defined]
tests\infrastructure\evolution\test_migration.py:367:13: error: "EvolutionMigration" has no attribute "_validate_migration_file"; maybe "_validate_migration"?  [attr-defined]
tests\infrastructure\evolution\test_integration.py:83:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_integration.py:85:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_integration.py:87:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_integration.py:89:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:90:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:91:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:92:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:93:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:94:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:123:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_integration.py:125:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_integration.py:127:53: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_integration.py:129:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:130:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:131:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:132:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_integration.py:137:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_integration.py:164:26: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_integration.py:168:18: error: "EvolutionMigration" has no attribute "execute_migration"; maybe "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_integration.py:185:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_integration.py:199:26: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_integration.py:200:28: error: "EvolutionMigration" has no attribute "execute_migration"; maybe "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_integration.py:222:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_integration.py:223:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_integration.py:234:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_integration.py:238:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:267:39: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_integration.py:341:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_integration.py:348:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_integration.py:424:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_integration.py:428:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_integration.py:429:16: error: Item "None" of "StrategyCandidate | None" has no attribute "name"  [union-attr]
tests\infrastructure\evolution\test_integration.py:430:16: error: Item "None" of "Any | None" has no attribute "name"  [union-attr]
tests\infrastructure\evolution\test_integration.py:431:16: error: Item "None" of "StrategyCandidate | None" has no attribute "name"  [union-attr]
tests\infrastructure\evolution\test_integration.py:431:31: error: Item "None" of "Any | None" has no attribute "name"  [union-attr]
tests\infrastructure\evolution\test_integration.py:432:16: error: Item "None" of "StrategyCandidate | None" has no attribute "description"  [union-attr]
tests\infrastructure\evolution\test_integration.py:433:16: error: Item "None" of "Any | None" has no attribute "description"  [union-attr]
tests\infrastructure\evolution\test_integration.py:434:16: error: Item "None" of "StrategyCandidate | None" has no attribute "description"  [union-attr]
tests\infrastructure\evolution\test_integration.py:434:38: error: Item "None" of "Any | None" has no attribute "description"  [union-attr]
tests\infrastructure\evolution\test_integration.py:436:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:437:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_integration.py:438:16: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_e2e.py:30:40: error: Argument 1 to "EvolutionMigration" has incompatible type "str"; expected "StrategyStorage"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:145:30: error: "EvolutionMigration" has no attribute "create_migration"; maybe "_create_migrations_table" or "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_e2e.py:146:22: error: "EvolutionMigration" has no attribute "execute_migration"; maybe "_execute_migration"?  [attr-defined]
tests\infrastructure\evolution\test_e2e.py:171:86: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:171:86: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:210:25: error: Missing keys ("direction", "operator", "value") for TypedDict "EntryCondition"  [typeddict-item]
tests\infrastructure\evolution\test_e2e.py:228:25: error: Missing keys ("operator", "value") for TypedDict "ExitCondition"  [typeddict-item]
tests\infrastructure\evolution\test_e2e.py:267:48: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:267:48: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:331:65: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:331:65: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:355:52: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:355:52: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:364:59: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:364:59: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:365:74: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:365:74: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:395:29: error: Missing keys ("direction", "operator", "value") for TypedDict "EntryCondition"  [typeddict-item]
tests\infrastructure\evolution\test_e2e.py:412:29: error: Missing keys ("operator", "value") for TypedDict "ExitCondition"  [typeddict-item]
tests\infrastructure\evolution\test_e2e.py:441:45: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:441:45: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:458:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, object]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:459:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_e2e.py:460:48: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:460:48: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:466:73: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:466:73: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:467:41: error: Name "List" is not defined  [name-defined]
tests\infrastructure\evolution\test_e2e.py:467:41: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\infrastructure\evolution\test_e2e.py:491:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Any]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:492:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_e2e.py:493:16: error: Incompatible return value type (got "BackupMetadata", expected "Path")  [return-value]
tests\infrastructure\evolution\test_e2e.py:508:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "Path"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:509:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_e2e.py:510:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_e2e.py:511:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_e2e.py:512:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_e2e.py:513:16: error: Unsupported right operand type for in ("bool")  [operator]
tests\infrastructure\evolution\test_e2e.py:515:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_e2e.py:516:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_e2e.py:574:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:578:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:580:31: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_e2e.py:647:44: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, Collection[Collection[str]]]"; expected "str | Path | None"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:653:16: error: "BackupMetadata" has no attribute "exists"  [attr-defined]
tests\infrastructure\evolution\test_e2e.py:659:47: error: Argument 1 to "restore_backup" of "EvolutionBackup" has incompatible type "BackupMetadata"; expected "str"  [arg-type]
tests\infrastructure\evolution\test_e2e.py:662:20: error: Value of type "bool" is not indexable  [index]
tests\infrastructure\evolution\test_e2e.py:663:20: error: Value of type "bool" is not indexable  [index]
tests\e2e\test_sessions_e2e.py:311:39: error: Module has no attribute "date_range"  [attr-defined]
tests\e2e\test_sessions_e2e.py:339:44: error: Argument 1 has incompatible type "list[MarketRegime]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
tests\e2e\test_sessions_e2e.py:340:48: error: Argument 1 has incompatible type "list[SessionIntensity]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
tests\domain\services\test_pattern_discovery.py:378:20: error: Cannot use isinstance() with TypedDict type  [misc]
infrastructure\market_profiles\storage\pattern_memory_repository.py:498:25: error: Expected keyword arguments, {...}, or dict(...) in TypedDict constructor  [misc]
infrastructure\market_profiles\storage\pattern_memory_repository.py:526:42: error: Argument 1 to "from_dict" of "PatternFeatures" has incompatible type "dict[str, Any]"; expected "PatternFeaturesDict"  [arg-type]
infrastructure\market_profiles\storage\pattern_memory_repository.py:809:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_storage_statistics" incompatible with return type "Coroutine[Any, Any, StorageStatistics]" in supertype "IPatternStorage"  [override]
infrastructure\market_profiles\storage\market_maker_storage.py:275:28: error: Argument 2 to "run_in_executor" of "AbstractEventLoop" has incompatible type "Callable[[dict[str, Any]], bytes]"; expected "Callable[[PatternFeaturesDict], bytes]"  [arg-type]
infrastructure\market_profiles\storage\market_maker_storage.py:524:25: error: Expected keyword arguments, {...}, or dict(...) in TypedDict constructor  [misc]
infrastructure\market_profiles\storage\market_maker_storage.py:552:42: error: Argument 1 to "from_dict" of "PatternFeatures" has incompatible type "dict[str, Any]"; expected "PatternFeaturesDict"  [arg-type]
infrastructure\market_profiles\storage\market_maker_storage.py:831:47: error: Item "None" of "datetime | None" has no attribute "isoformat"  [union-attr]
examples\ai_trading_example.py:44:17: error: Module has no attribute "date_range"  [attr-defined]
domain\prediction\reversal_predictor.py:91:60: error: Argument 1 to "_analyze_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:153:60: error: Argument 1 to "_detect_rsi_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:155:62: error: Argument 1 to "_detect_macd_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:177:25: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:188:39: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:199:25: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:210:51: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:239:25: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:250:39: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:262:25: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:274:39: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:291:22: error: "DataFrame" has no attribute "iloc"  [attr-defined]
domain\prediction\reversal_predictor.py:292:27: error: "DataFrame" has no attribute "iloc"  [attr-defined]
domain\prediction\reversal_predictor.py:413:29: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\prediction\reversal_predictor.py:438:22: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\prediction\reversal_predictor.py:454:16: error: Incompatible return value type (got "float", expected "ConfidenceScore")  [return-value]
domain\prediction\reversal_predictor.py:465:13: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_predictor.py:467:13: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_predictor.py:469:13: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_predictor.py:470:16: error: Incompatible return value type (got "float", expected "SignalStrengthScore")  [return-value]
domain\prediction\reversal_predictor.py:476:21: error: "Series" has no attribute "diff"  [attr-defined]
domain\prediction\reversal_predictor.py:491:24: error: "Series" has no attribute "ewm"  [attr-defined]
domain\prediction\reversal_predictor.py:492:24: error: "Series" has no attribute "ewm"  [attr-defined]
domain\memory\pattern_memory.py:62:20: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
domain\memory\pattern_memory.py:778:32: error: Incompatible types in assignment (expression has type "str", variable has type "PatternType | None")  [assignment]
domain\memory\pattern_memory.py:778:32: note: Items in the first union not in the second: "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"
tests\unit\application_tests\test_prediction.py:21:16: error: Incompatible return value type (got "tuple[Mock, Mock, Mock]", expected "Mock")  [return-value]
tests\unit\application_tests\test_prediction.py:45:24: error: "CombinedPredictor" has no attribute "predict_price_movement"  [attr-defined]
tests\unit\application_tests\test_prediction.py:63:20: error: Missing positional arguments "pattern_prediction", "session_signals", "aggregated_session_signal", "timestamp" in call to "_combine_predictions" of "CombinedPredictor"  [call-arg]
tests\unit\application_tests\test_prediction.py:63:51: error: Argument 1 to "_combine_predictions" of "CombinedPredictor" has incompatible type "list[dict[str, object]]"; expected "str"  [arg-type]
tests\unit\application_tests\test_prediction.py:64:16: error: Unsupported right operand type for in ("CombinedPredictionResult")  [operator]
tests\unit\application_tests\test_prediction.py:65:16: error: Unsupported right operand type for in ("CombinedPredictionResult")  [operator]
tests\unit\application_tests\test_prediction.py:66:16: error: Unsupported right operand type for in ("CombinedPredictionResult")  [operator]
tests\unit\application_tests\test_prediction.py:67:27: error: Value of type "CombinedPredictionResult" is not indexable  [index]
tests\unit\application_tests\test_prediction.py:68:27: error: Value of type "CombinedPredictionResult" is not indexable  [index]
tests\unit\application_tests\test_prediction.py:69:27: error: Value of type "CombinedPredictionResult" is not indexable  [index]
tests\unit\application_tests\test_prediction.py:74:24: error: "CombinedPredictor" has no attribute "_calculate_weighted_average"  [attr-defined]
tests\unit\application_tests\test_prediction.py:85:21: error: "CombinedPredictor" has no attribute "_determine_consensus_direction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:93:21: error: "CombinedPredictor" has no attribute "_determine_consensus_direction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:102:28: error: "CombinedPredictor" has no attribute "_get_technical_prediction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:116:28: error: "CombinedPredictor" has no attribute "_get_pattern_prediction"; maybe "pattern_predictor"?  [attr-defined]
tests\unit\application_tests\test_prediction.py:130:28: error: "CombinedPredictor" has no attribute "_get_ml_prediction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:160:24: error: "PatternPredictor" has no attribute "predict_from_patterns"  [attr-defined]
tests\unit\application_tests\test_prediction.py:173:22: error: "PatternPredictor" has no attribute "_analyze_pattern_confidence"  [attr-defined]
tests\unit\application_tests\test_prediction.py:179:18: error: "PatternPredictor" has no attribute "_calculate_pattern_weight"  [attr-defined]
tests\unit\application_tests\test_prediction.py:193:25: error: "PatternPredictor" has no attribute "get_pattern_history"  [attr-defined]
tests\unit\application_tests\test_prediction.py:211:16: error: Incompatible return value type (got "tuple[Mock, Mock]", expected "Mock")  [return-value]
tests\unit\application_tests\test_prediction.py:228:24: error: "ReversalController" has no attribute "detect_reversal_signals"  [attr-defined]
tests\unit\application_tests\test_prediction.py:241:20: error: "ReversalController" has no attribute "_analyze_signal_strength"  [attr-defined]
tests\unit\application_tests\test_prediction.py:250:23: error: "ReversalController" has no attribute "_calculate_reversal_probability"  [attr-defined]
tests\unit\application_tests\test_prediction.py:261:21: error: "ReversalController" has no attribute "_determine_overall_direction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:269:21: error: "ReversalController" has no attribute "_determine_overall_direction"  [attr-defined]
tests\unit\application_tests\test_prediction.py:283:25: error: "ReversalController" has no attribute "get_reversal_history"  [attr-defined]
tests\unit\application_tests\test_prediction.py:295:16: error: "ReversalController" has no attribute "_validate_signal_data"  [attr-defined]
tests\unit\application_tests\test_prediction.py:298:16: error: "ReversalController" has no attribute "_validate_signal_data"  [attr-defined]
tests\unit\application_tests\test_prediction.py:301:16: error: "ReversalController" has no attribute "_validate_signal_data"  [attr-defined]
infrastructure\services\risk_analysis\portfolio_optimization.py:63:30: error: Argument 1 to "LinearConstraint" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | sparray[bool_ | integer[Any] | floating[_32Bit] | floating[_64Bit] | floating[Any] | complexfloating[Any, Any], tuple[int, Unpack[tuple[int, ...]]]] | spmatrix[bool_ | integer[Any] | floating[_32Bit] | floating[_64Bit] | floating[Any] | complexfloating[Any, Any]]"  [arg-type]
infrastructure\services\risk_analysis\portfolio_optimization.py:81:18: error: No overload variant of "dot" matches argument types "ndarray[Any, Any]", "Series"  [call-overload]
infrastructure\services\risk_analysis\portfolio_optimization.py:81:18: note: Possible overload variants:
infrastructure\services\risk_analysis\portfolio_optimization.py:81:18: note:     def dot(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], b: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], out: None = ...) -> Any
infrastructure\services\risk_analysis\portfolio_optimization.py:81:18: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] dot(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], b: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], out: _ArrayType) -> _ArrayType
infrastructure\services\risk_analysis\portfolio_optimization.py:88:43: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\services\risk_analysis\portfolio_optimization.py:118:41: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\services\risk_analysis\portfolio_optimization.py:138:17: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\core\portfolio_manager.py:201:17: error: Unexpected keyword argument "event_type" for "Event"  [call-arg]
infrastructure\core\portfolio_manager.py:297:32: error: "DataFrame" has no attribute "dot"  [attr-defined]
infrastructure\core\portfolio_manager.py:327:26: error: "int" has no attribute "cumprod"  [attr-defined]
infrastructure\core\portfolio_manager.py:327:31: error: Unsupported operand types for + ("int" and "Series")  [operator]
infrastructure\core\portfolio_manager.py:345:16: error: Incompatible return value type (got "dict[str, dict[str, float]]", expected "dict[str, float]")  [return-value]
infrastructure\core\portfolio_manager.py:363:34: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\core\portfolio_manager.py:400:18: error: Incompatible types in assignment (expression has type "object", variable has type "str | None")  [assignment]
infrastructure\core\portfolio_manager.py:452:32: error: "DataFrame" has no attribute "mean"  [attr-defined]
infrastructure\core\portfolio_manager.py:485:22: error: No overload variant of "minimize" matches argument types "Callable[[Any], Any]", "ndarray[Any, dtype[Any]]", "str", "list[tuple[object, object]]", "dict[str, object]", "dict[str, object]"  [call-overload]
infrastructure\core\portfolio_manager.py:485:22: note: Possible overload variants:
infrastructure\core\portfolio_manager.py:485:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:485:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:485:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:509:36: error: No overload variant of "dot" matches argument types "DataFrame", "Any"  [call-overload]
infrastructure\core\portfolio_manager.py:509:36: note: Possible overload variants:
infrastructure\core\portfolio_manager.py:509:36: note:     def dot(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], b: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], out: None = ...) -> Any
infrastructure\core\portfolio_manager.py:509:36: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] dot(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], b: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], out: _ArrayType) -> _ArrayType
infrastructure\core\portfolio_manager.py:557:32: error: "DataFrame" has no attribute "mean"  [attr-defined]
infrastructure\core\portfolio_manager.py:558:26: error: "DataFrame" has no attribute "cov"  [attr-defined]
infrastructure\core\portfolio_manager.py:604:22: error: No overload variant of "minimize" matches argument types "Callable[[Any], Any]", "ndarray[Any, dtype[Any]]", "str", "list[tuple[object, object]]", "dict[str, object]"  [call-overload]
infrastructure\core\portfolio_manager.py:604:22: note: Possible overload variants:
infrastructure\core\portfolio_manager.py:604:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:604:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:604:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:663:26: error: "DataFrame" has no attribute "cov"  [attr-defined]
infrastructure\core\portfolio_manager.py:685:22: error: No overload variant of "minimize" matches argument types "Callable[[Any], Any]", "ndarray[Any, dtype[Any]]", "str", "list[tuple[object, object]]", "dict[str, object]"  [call-overload]
infrastructure\core\portfolio_manager.py:685:22: note: Possible overload variants:
infrastructure\core\portfolio_manager.py:685:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:685:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:685:22: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:706:32: error: "DataFrame" has no attribute "mean"  [attr-defined]
infrastructure\core\portfolio_manager.py:767:26: error: No overload variant of "minimize" matches argument types "Callable[[Any], Any]", "ndarray[Any, dtype[Any]]", "str", "list[tuple[int, int]]", "list[dict[str, object]]"  [call-overload]
infrastructure\core\portfolio_manager.py:767:26: note: Possible overload variants:
infrastructure\core\portfolio_manager.py:767:26: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:767:26: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:767:26: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
infrastructure\core\portfolio_manager.py:874:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\core\portfolio_manager.py:874:13: note: Left operand is of type "float | None"
infrastructure\core\portfolio_manager.py:875:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\core\portfolio_manager.py:875:13: note: Left operand is of type "float | None"
infrastructure\core\portfolio_manager.py:876:13: error: Unsupported operand types for + ("None" and "float")  [operator]
infrastructure\core\portfolio_manager.py:876:13: note: Left operand is of type "float | None"
infrastructure\core\portfolio_manager.py:882:17: error: Unexpected keyword argument "event_type" for "Event"  [call-arg]
domain\services\risk_analysis.py:315:32: error: "DataFrame" has no attribute "dropna"  [attr-defined]
domain\services\risk_analysis.py:319:47: error: "DataFrame" has no attribute "iloc"  [attr-defined]
domain\services\risk_analysis.py:321:47: error: "DataFrame" has no attribute "mean"  [attr-defined]
domain\services\risk_analysis.py:335:22: error: "DataFrame" has no attribute "cov"  [attr-defined]
domain\services\risk_analysis.py:336:24: error: "DataFrame" has no attribute "mean"  [attr-defined]
domain\services\risk_analysis.py:365:33: error: "DataFrame" has no attribute "dot"  [attr-defined]
domain\services\risk_analysis.py:379:28: error: No overload variant of "percentile" matches argument types "Series", "float"  [call-overload]
domain\services\risk_analysis.py:379:28: note: Possible overload variants:
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> floating[Any]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> complexfloating[Any, Any]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> timedelta64
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> datetime64
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> Any
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[floating[Any]]]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[timedelta64]]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[datetime64]]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[object_]]
domain\services\risk_analysis.py:379:28: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> Any
domain\services\risk_analysis.py:379:28: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: _ArrayType = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> _ArrayType
domain\services\risk_analysis.py:383:15: error: No overload variant of "percentile" matches argument types "Series", "float"  [call-overload]
domain\services\risk_analysis.py:383:15: note: Possible overload variants:
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> floating[Any]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> complexfloating[Any, Any]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> timedelta64
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> datetime64
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> Any
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[floating[Any]]]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[timedelta64]]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[datetime64]]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[object_]]
domain\services\risk_analysis.py:383:15: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> Any
domain\services\risk_analysis.py:383:15: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: _ArrayType = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> _ArrayType
domain\services\risk_analysis.py:388:22: error: "int" has no attribute "cumprod"  [attr-defined]
domain\services\risk_analysis.py:388:27: error: Unsupported operand types for + ("int" and "Series")  [operator]
domain\services\risk_analysis.py:395:26: error: Unsupported operand types for - ("Series" and "float")  [operator]
domain\services\risk_analysis.py:396:28: error: "float" has no attribute "mean"  [attr-defined]
domain\services\risk_analysis.py:400:26: error: Unsupported operand types for - ("Series" and "float")  [operator]
domain\services\risk_analysis.py:401:36: error: Unsupported operand types for > ("int" and "Series")  [operator]
domain\services\risk_analysis.py:404:17: error: "float" has no attribute "mean"  [attr-defined]
domain\services\risk_analysis.py:428:56: error: "Series" has no attribute "index"  [attr-defined]
domain\services\risk_analysis.py:430:22: error: "Series" has no attribute "cov"  [attr-defined]
domain\services\risk_analysis.py:431:27: error: "Series" has no attribute "var"  [attr-defined]
domain\services\risk_analysis.py:453:25: error: Unsupported operand types for - ("Series" and "float")  [operator]
domain\services\risk_analysis.py:454:26: error: "float" has no attribute "std"  [attr-defined]
domain\services\risk_analysis.py:456:17: error: "float" has no attribute "mean"  [attr-defined]
domain\services\risk_analysis.py:473:28: error: "Series" has no attribute "corr"  [attr-defined]
domain\services\risk_analysis.py:496:20: error: "Series" has no attribute "kurtosis"  [attr-defined]
domain\services\risk_analysis.py:550:36: error: Unsupported operand types for * ("Series" and "float")  [operator]
domain\services\risk_analysis.py:552:36: error: Unsupported operand types for * ("Series" and "float")  [operator]
domain\services\risk_analysis.py:554:36: error: Incompatible types in assignment (expression has type "Series", variable has type "float")  [assignment]
domain\services\risk_analysis.py:555:39: error: Argument 1 to "_calculate_var" of "DefaultRiskAnalysisService" has incompatible type "float"; expected "Series"  [arg-type]
domain\services\risk_analysis.py:575:25: error: "DataFrame" has no attribute "copy"  [attr-defined]
domain\evolution\strategy_optimizer.py:298:40: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "IndicatorParameters")  [assignment]
domain\evolution\strategy_optimizer.py:298:64: error: Argument 1 to "_mutate_parameters" of "StrategyOptimizer" has incompatible type "IndicatorParameters"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_optimizer.py:302:44: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "FilterParameters")  [assignment]
domain\evolution\strategy_optimizer.py:302:68: error: Argument 1 to "_mutate_parameters" of "StrategyOptimizer" has incompatible type "FilterParameters"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_optimizer.py:306:35: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "list[EntryCondition]")  [assignment]
domain\evolution\strategy_optimizer.py:306:59: error: Argument 1 to "_mutate_parameters" of "StrategyOptimizer" has incompatible type "list[EntryCondition]"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_optimizer.py:307:9: error: Incompatible types in assignment (expression has type "ExitRule", variable has type "EntryRule")  [assignment]
domain\evolution\strategy_optimizer.py:309:17: error: "EntryRule" has no attribute "parameters"  [attr-defined]
domain\evolution\strategy_optimizer.py:373:42: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:379:46: error: TypedDict key must be a string literal; expected one of ("min_atr", "max_atr", "min_width", "max_width", "min_volume", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:421:52: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:422:42: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:427:56: error: TypedDict key must be a string literal; expected one of ("min_atr", "max_atr", "min_width", "max_width", "min_volume", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:428:46: error: TypedDict key must be a string literal; expected one of ("min_atr", "max_atr", "min_width", "max_width", "min_volume", ...)  [literal-required]
tests\unit\test_portfolio_manager.py:75:17: error: Module has no attribute "date_range"  [attr-defined]
tests\unit\test_portfolio_manager.py:95:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:95:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:96:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:97:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:117:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:117:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:117:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:117:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:118:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:118:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:118:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:118:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:119:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:119:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:119:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:119:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:120:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:120:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:120:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:120:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:123:19: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:123:19: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:123:19: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:123:19: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:137:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:137:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:138:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:139:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:143:37: error: Unexpected keyword argument "symbols" for "optimize_portfolio" of "PortfolioManager"  [call-arg]
infrastructure\core\portfolio_manager.py:378:5: note: "optimize_portfolio" of "PortfolioManager" defined here
tests\unit\test_portfolio_manager.py:143:37: error: Unexpected keyword argument "historical_data" for "optimize_portfolio" of "PortfolioManager"  [call-arg]
infrastructure\core\portfolio_manager.py:378:5: note: "optimize_portfolio" of "PortfolioManager" defined here
tests\unit\test_portfolio_manager.py:150:16: error: Unsupported right operand type for in ("PortfolioOptimizationResult")  [operator]
tests\unit\test_portfolio_manager.py:151:16: error: Unsupported right operand type for in ("PortfolioOptimizationResult")  [operator]
tests\unit\test_portfolio_manager.py:152:16: error: Unsupported right operand type for in ("PortfolioOptimizationResult")  [operator]
tests\unit\test_portfolio_manager.py:153:16: error: Unsupported right operand type for in ("PortfolioOptimizationResult")  [operator]
tests\unit\test_portfolio_manager.py:154:16: error: Unsupported right operand type for in ("PortfolioOptimizationResult")  [operator]
tests\unit\test_portfolio_manager.py:157:27: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:158:27: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:159:27: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:160:27: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:161:27: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:164:19: error: Value of type "PortfolioOptimizationResult" is not indexable  [index]
tests\unit\test_portfolio_manager.py:171:30: error: "dict[str, dict[str, float]]" not callable  [operator]
tests\unit\test_portfolio_manager.py:176:16: error: "DataFrame" has no attribute "shape"  [attr-defined]
tests\unit\test_portfolio_manager.py:177:16: error: "DataFrame" has no attribute "shape"  [attr-defined]
tests\unit\test_portfolio_manager.py:181:20: error: "DataFrame" has no attribute "iloc"  [attr-defined]
tests\unit\test_portfolio_manager.py:187:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:187:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:188:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:189:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:218:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:218:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:219:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:220:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:236:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:236:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:236:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:236:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:237:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:237:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:237:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:237:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:238:27: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:238:27: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:238:27: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:238:27: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:243:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:243:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:244:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:245:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:253:16: error: Unsupported right operand type for in ("Coroutine[Any, Any, dict[str, Any]]")  [operator]
tests\unit\test_portfolio_manager.py:253:16: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:254:16: error: Unsupported right operand type for in ("Coroutine[Any, Any, dict[str, Any]]")  [operator]
tests\unit\test_portfolio_manager.py:254:16: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:255:16: error: Unsupported right operand type for in ("Coroutine[Any, Any, dict[str, Any]]")  [operator]
tests\unit\test_portfolio_manager.py:255:16: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:256:16: error: Unsupported right operand type for in ("Coroutine[Any, Any, dict[str, Any]]")  [operator]
tests\unit\test_portfolio_manager.py:256:16: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:259:27: error: Value of type "Coroutine[Any, Any, dict[str, Any]]" is not indexable  [index]
tests\unit\test_portfolio_manager.py:259:27: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:260:27: error: Value of type "Coroutine[Any, Any, dict[str, Any]]" is not indexable  [index]
tests\unit\test_portfolio_manager.py:260:27: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:261:27: error: Value of type "Coroutine[Any, Any, dict[str, Any]]" is not indexable  [index]
tests\unit\test_portfolio_manager.py:261:27: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:262:27: error: Value of type "Coroutine[Any, Any, dict[str, Any]]" is not indexable  [index]
tests\unit\test_portfolio_manager.py:262:27: note: Maybe you forgot to use "await"?
tests\unit\test_portfolio_manager.py:273:19: error: Too many arguments for "optimize_portfolio" of "PortfolioManager"  [call-arg]
tests\unit\test_portfolio_manager.py:273:56: error: Argument 1 to "optimize_portfolio" of "PortfolioManager" has incompatible type "list[Never]"; expected "str | None"  [arg-type]
tests\unit\test_portfolio_manager.py:279:9: error: Value of type "Coroutine[Any, Any, list[RebalancingAction]]" must be used  [unused-coroutine]
tests\unit\test_portfolio_manager.py:279:9: note: Are you missing an await?
tests\unit\test_portfolio_manager.py:280:13: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:281:13: error: Dict entry 1 has incompatible type "str": "Decimal"; expected "str": "float"  [dict-item]
tests\unit\test_portfolio_manager.py:287:16: error: No overload variant of "__getitem__" of "list" matches argument type "str"  [call-overload]
tests\unit\test_portfolio_manager.py:287:16: note: Possible overload variants:
tests\unit\test_portfolio_manager.py:287:16: note:     def __getitem__(self, SupportsIndex, /) -> RebalancingAction
tests\unit\test_portfolio_manager.py:287:16: note:     def __getitem__(self, slice[Any, Any, Any], /) -> list[RebalancingAction]
tests\unit\test_portfolio_manager.py:294:28: error: Unexpected keyword argument "symbols" for "optimize_portfolio" of "PortfolioManager"  [call-arg]
infrastructure\core\portfolio_manager.py:378:5: note: "optimize_portfolio" of "PortfolioManager" defined here
tests\unit\test_portfolio_manager.py:294:28: error: Unexpected keyword argument "historical_data" for "optimize_portfolio" of "PortfolioManager"  [call-arg]
infrastructure\core\portfolio_manager.py:378:5: note: "optimize_portfolio" of "PortfolioManager" defined here
tests\unit\test_portfolio_manager.py:304:13: error: "PortfolioManager" has no attribute "cleanup"  [attr-defined]
tests\unit\test_portfolio_manager.py:310:16: error: "PortfolioManager" has no attribute "risk_analyzers"  [attr-defined]
tests\unit\test_portfolio_manager.py:311:16: error: "PortfolioManager" has no attribute "optimizers"  [attr-defined]
shared\wavelet_tools.py:157:9: error: Dict entry 4 has incompatible type "str": "signedinteger[Any]"; expected "str": "ndarray[Any, Any]"  [dict-item]
shared\wavelet_tools.py:238:23: error: Module has no attribute "cwt"  [attr-defined]
shared\wavelet_tools.py:238:59: error: Name "morlet2" is not defined  [name-defined]
shared\metrics_analyzer.py:114:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
shared\metrics_analyzer.py:115:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
shared\metrics_analyzer.py:430:17: error: Unsupported target for indexed assignment ("object")  [index]
shared\metrics_analyzer.py:434:21: error: Value of type "object" is not indexable  [index]
shared\metrics_analyzer.py:442:21: error: Value of type "object" is not indexable  [index]
shared\metrics_analyzer.py:445:21: error: Value of type "object" is not indexable  [index]
shared\metrics_analyzer.py:445:21: error: Unsupported target for indexed assignment ("object")  [index]
shared\metrics_analyzer.py:448:17: error: Unsupported target for indexed assignment ("object")  [index]
shared\metrics_analyzer.py:449:9: error: Unsupported target for indexed assignment ("object")  [index]
shared\metrics_analyzer.py:484:20: error: "DataFrame" has no attribute "to_csv"  [attr-defined]
shared\metrics_analyzer.py:488:20: error: Incompatible types in assignment (expression has type "dict[str, dict[str, list[dict[str, object]]]]", variable has type "list[MetricPoint]")  [assignment]
infrastructure\simulation\market_simulator.py:209:13: error: "object" has no attribute "mkdir"  [attr-defined]
infrastructure\simulation\market_simulator.py:271:21: error: Unsupported operand types for * ("object" and "float")  [operator]
infrastructure\simulation\market_simulator.py:272:24: error: Unsupported operand types for * ("object" and "float")  [operator]
infrastructure\simulation\market_simulator.py:273:45: error: Unsupported operand types for - ("float" and "object")  [operator]
infrastructure\simulation\market_simulator.py:275:21: error: Unsupported operand types for * ("object" and "float")  [operator]
infrastructure\simulation\market_simulator.py:288:25: error: Unsupported operand types for * ("float" and "object")  [operator]
infrastructure\simulation\market_simulator.py:302:23: error: Unsupported operand types for * ("float" and "object")  [operator]
infrastructure\simulation\market_simulator.py:304:13: error: Unsupported operand types for * ("float" and "int")  [operator]
infrastructure\simulation\market_simulator.py:304:27: error: Unsupported operand types for - ("int" and "object")  [operator]
infrastructure\simulation\market_simulator.py:342:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:343:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:344:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:345:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:346:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:349:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:352:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:356:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:357:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:361:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:362:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:364:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:367:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:377:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:378:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:381:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:392:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:402:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:403:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:405:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:407:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:411:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:417:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:429:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:437:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:439:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:441:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:453:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:460:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:467:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:473:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:485:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:487:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:491:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:493:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:500:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:502:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:512:17: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\simulation\market_simulator.py:541:13: error: "None" has no attribute "fit"  [attr-defined]
infrastructure\simulation\market_simulator.py:654:9: error: "DataFrame" has no attribute "to_csv"  [attr-defined]
infrastructure\simulation\market_simulator.py:677:32: error: Incompatible types in assignment (expression has type "datetime", variable has type "None")  [assignment]
infrastructure\simulation\market_simulator.py:715:27: error: "_save_backup" of "MarketSimulator" does not return a value (it only ever returns None)  [func-returns-value]
infrastructure\simulation\market_simulator.py:715:65: error: Argument 2 to "_save_backup" of "MarketSimulator" has incompatible type "int"; expected "Path"  [arg-type]
infrastructure\simulation\market_simulator.py:718:13: error: "DataFrame" has no attribute "set_index"  [attr-defined]
infrastructure\simulation\market_simulator.py:732:19: error: "_save_results" of "MarketSimulator" does not return a value (it only ever returns None)  [func-returns-value]
infrastructure\services\risk_analysis\risk_metrics.py:48:32: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:60:26: error: "int" has no attribute "cumprod"  [attr-defined]
infrastructure\services\risk_analysis\risk_metrics.py:60:31: error: Unsupported operand types for + ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:78:20: error: "Series" has no attribute "index"  [attr-defined]
infrastructure\services\risk_analysis\risk_metrics.py:81:21: error: "Series" has no attribute "loc"; maybe "iloc"?  [attr-defined]
infrastructure\services\risk_analysis\risk_metrics.py:82:22: error: "Series" has no attribute "loc"; maybe "iloc"?  [attr-defined]
infrastructure\services\risk_analysis\risk_metrics.py:110:32: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:118:34: error: Unsupported operand types for < ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:125:21: error: Unsupported operand types for < ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:126:22: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:133:21: error: Unsupported operand types for < ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:134:22: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\services\risk_analysis\risk_metrics.py:142:24: error: "Series" has no attribute "sum"  [attr-defined]
infrastructure\services\risk_analysis\risk_metrics.py:166:28: error: Unsupported operand types for >= ("float" and "Series")  [operator]
infrastructure\ml_services\pattern_discovery.py:122:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:123:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:124:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:126:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:127:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:128:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:131:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:132:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:134:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:135:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:136:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:138:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:139:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:141:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:142:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:144:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:145:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:149:38: error: "DataFrame" has no attribute "fillna"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:168:22: error: Incompatible types in assignment (expression has type "float", variable has type "Series")  [assignment]
infrastructure\ml_services\pattern_discovery.py:168:23: error: Unsupported operand types for - ("Series" and "float")  [operator]
infrastructure\ml_services\pattern_discovery.py:171:17: error: Argument 1 to "find_peaks" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "CanArrayND[generic, tuple[int, ...]] | Sequence[complex | bytes | str | generic | CanArray0D[generic]]"  [arg-type]
infrastructure\ml_services\pattern_discovery.py:176:17: error: Unsupported operand type for unary - ("Callable[[], ndarray[Any, Any]]")  [operator]
infrastructure\ml_services\pattern_discovery.py:258:35: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:280:41: error: Incompatible types in assignment (expression has type "dict[str, dict[str, Any]]", target has type "list[Pattern]")  [assignment]
infrastructure\ml_services\pattern_discovery.py:282:40: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "PatternMetrics")  [assignment]
infrastructure\ml_services\pattern_discovery.py:328:49: error: "list[Pattern]" has no attribute "items"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:366:20: error: Incompatible return value type (got "PatternMetrics | dict[str, Any]", expected "dict[str, Any]")  [return-value]
infrastructure\ml_services\pattern_discovery.py:429:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:430:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:431:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:434:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:436:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:437:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:440:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:441:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:443:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:444:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:446:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:448:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:523:28: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:760:69: error: Argument 2 to "spearmanr" has incompatible type "Series"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]] | None"  [arg-type]
infrastructure\ml_services\pattern_discovery.py:779:45: error: Incompatible types in assignment (expression has type "dict[str, dict[Any, object]]", target has type "dict[str, float]")  [assignment]
infrastructure\ml_services\pattern_discovery.py:780:20: error: Incompatible return value type (got "dict[str, dict[Any, object]]", expected "dict[str, float]")  [return-value]
infrastructure\ml_services\pattern_discovery.py:817:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:818:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:819:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:820:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:825:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:826:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:827:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:829:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:830:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:832:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:833:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:834:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:835:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\pattern_discovery.py:856:24: error: "DataFrame" has no attribute "copy"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:861:33: error: "DataFrame" has no attribute "resample"  [attr-defined]
infrastructure\entity_system\experiments\statistics.py:120:23: error: Incompatible types in assignment (expression has type "float | floating[_64Bit]", variable has type "float")  [assignment]
infrastructure\entity_system\experiments\runner.py:127:24: error: Need type annotation for "first_result"  [var-annotated]
infrastructure\entity_system\experiments\runner.py:206:9: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\core\wavelet_tools.py:34:46: error: Incompatible default for argument "scales" (default has type "None", argument has type "ndarray[Any, Any] | list[float]")  [assignment]
infrastructure\core\wavelet_tools.py:34:46: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\core\wavelet_tools.py:34:46: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\core\efficiency_validator.py:145:46: error: Incompatible types in assignment (expression has type "floating[Any]", variable has type "float")  [assignment]
infrastructure\core\efficiency_validator.py:269:39: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\core\efficiency_validator.py:270:24: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\core\efficiency_validator.py:304:20: error: Incompatible return value type (got "tuple[float, float | floating[_64Bit | Any] | ndarray[Any, dtype[floating[Any]]]]", expected "tuple[float, float]")  [return-value]
infrastructure\core\efficiency_validator.py:329:20: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\core\correlation_chain.py:74:26: error: "Series" has no attribute "corr"  [attr-defined]
infrastructure\core\correlation_chain.py:76:41: error: Argument 1 to "pearsonr" has incompatible type "Series"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
infrastructure\core\correlation_chain.py:76:41: note: "Series" is missing following "CanArrayND" protocol member:
infrastructure\core\correlation_chain.py:76:41: note:     __array__
infrastructure\core\correlation_chain.py:76:41: note: "Series" is missing following "SequenceND" protocol member:
infrastructure\core\correlation_chain.py:76:41: note:     index
infrastructure\core\correlation_chain.py:76:41: note: Following member(s) of "Series" have conflicts:
infrastructure\core\correlation_chain.py:76:41: note:     Expected:
infrastructure\core\correlation_chain.py:76:41: note:         def __contains__(self, object, /) -> bool
infrastructure\core\correlation_chain.py:76:41: note:     Got:
infrastructure\core\correlation_chain.py:76:41: note:         def __contains__(self, str, /) -> bool
infrastructure\core\correlation_chain.py:76:41: note:     Expected:
infrastructure\core\correlation_chain.py:76:41: note:         def __contains__(self, object, /) -> bool
infrastructure\core\correlation_chain.py:76:41: note:     Got:
infrastructure\core\correlation_chain.py:76:41: note:         def __contains__(self, str, /) -> bool
infrastructure\core\correlation_chain.py:76:59: error: Argument 2 to "pearsonr" has incompatible type "Series"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
infrastructure\core\correlation_chain.py:76:59: note:     Expected:
infrastructure\core\correlation_chain.py:76:59: note:         def __contains__(self, object, /) -> bool
infrastructure\core\correlation_chain.py:76:59: note:     Got:
infrastructure\core\correlation_chain.py:76:59: note:         def __contains__(self, str, /) -> bool
infrastructure\core\correlation_chain.py:76:59: note:     Expected:
infrastructure\core\correlation_chain.py:76:59: note:         def __contains__(self, object, /) -> bool
infrastructure\core\correlation_chain.py:76:59: note:     Got:
infrastructure\core\correlation_chain.py:76:59: note:         def __contains__(self, str, /) -> bool
infrastructure\core\correlation_chain.py:138:25: error: "DataFrame" has no attribute "loc"  [attr-defined]
infrastructure\core\correlation_chain.py:140:25: error: "DataFrame" has no attribute "loc"  [attr-defined]
infrastructure\core\correlation_chain.py:160:20: error: Module has no attribute "concat"  [attr-defined]
infrastructure\core\correlation_chain.py:178:24: error: "Series" has no attribute "name"  [attr-defined]
infrastructure\core\correlation_chain.py:180:24: error: "Series" has no attribute "name"  [attr-defined]
infrastructure\core\correlation_chain.py:197:20: error: Incompatible return value type (got "signedinteger[Any]", expected "int")  [return-value]
infrastructure\core\correlation_chain.py:212:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:213:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:250:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:251:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:254:28: error: Module has no attribute "isna"  [attr-defined]
infrastructure\core\correlation_chain.py:274:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:275:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\core\correlation_chain.py:278:28: error: Module has no attribute "isna"  [attr-defined]
infrastructure\core\autonomous_controller.py:41:41: error: Argument 1 to "MetricsCollector" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\core\autonomous_controller.py:42:45: error: Argument 1 to "HealthChecker" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\core\autonomous_controller.py:45:41: error: Argument 1 to "RiskManager" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\core\autonomous_controller.py:47:13: error: Argument 1 to "PortfolioManager" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\core\autonomous_controller.py:52:49: error: Argument 1 to "RegimeDiscovery" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\core\autonomous_controller.py:126:13: error: Argument 1 to "publish" of "EventBus" has incompatible type "domain.types.messaging_types.Event"; expected "infrastructure.messaging.optimized_event_bus.Event"  [arg-type]
infrastructure\core\autonomous_controller.py:127:22: error: Argument "type" to "Event" has incompatible type "str"; expected "EventType"  [arg-type]
infrastructure\core\autonomous_controller.py:128:22: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\autonomous_controller.py:130:26: error: Argument "priority" to "Event" has incompatible type "infrastructure.messaging.optimized_event_bus.EventPriority"; expected "domain.types.messaging_types.EventPriority"  [arg-type]
infrastructure\core\autonomous_controller.py:396:16: error: Unsupported right operand type for in ("object")  [operator]
infrastructure\core\autonomous_controller.py:397:17: error: "object" has no attribute "remove"  [attr-defined]
infrastructure\core\autonomous_controller.py:526:17: error: Argument 1 to "publish" of "EventBus" has incompatible type "domain.types.messaging_types.Event"; expected "infrastructure.messaging.optimized_event_bus.Event"  [arg-type]
infrastructure\core\autonomous_controller.py:527:26: error: Argument "type" to "Event" has incompatible type "str"; expected "EventType"  [arg-type]
infrastructure\core\autonomous_controller.py:528:26: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\autonomous_controller.py:530:30: error: Argument "priority" to "Event" has incompatible type "infrastructure.messaging.optimized_event_bus.EventPriority"; expected "domain.types.messaging_types.EventPriority"  [arg-type]
infrastructure\agents\risk\calculators.py:19:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\agents\risk\calculators.py:20:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\agents\risk\calculators.py:108:29: error: No overload variant of "max" matches argument types "float", "object"  [call-overload]
infrastructure\agents\risk\calculators.py:108:29: note: Possible overload variants:
infrastructure\agents\risk\calculators.py:108:29: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any]] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT
infrastructure\agents\risk\calculators.py:108:29: note:     def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
infrastructure\agents\risk\calculators.py:108:29: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any]] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT
infrastructure\agents\risk\calculators.py:108:29: note:     def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
infrastructure\agents\risk\calculators.py:108:29: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any], _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T
infrastructure\agents\risk\calculators.py:108:29: note:     def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2
infrastructure\agents\risk\calculators.py:125:34: error: "int" has no attribute "cumprod"  [attr-defined]
infrastructure\agents\risk\calculators.py:125:39: error: Unsupported operand types for + ("int" and "Series")  [operator]
infrastructure\agents\risk\calculators.py:148:40: error: Unsupported operand types for < ("int" and "Series")  [operator]
infrastructure\agents\risk\calculators.py:149:40: error: Unsupported operand types for > ("int" and "Series")  [operator]
infrastructure\agents\risk\calculators.py:180:26: error: "Series" has no attribute "rolling"  [attr-defined]
infrastructure\agents\risk\calculators.py:193:30: error: Unsupported operand types for - ("Series" and "float")  [operator]
infrastructure\agents\risk\calculators.py:194:16: error: "float" has no attribute "std"  [attr-defined]
infrastructure\agents\risk\calculators.py:196:22: error: "float" has no attribute "mean"  [attr-defined]
infrastructure\agents\risk\calculators.py:196:46: error: "float" has no attribute "std"  [attr-defined]
infrastructure\agents\risk\calculators.py:209:30: error: Unsupported operand types for - ("Series" and "float")  [operator]
infrastructure\agents\risk\calculators.py:210:32: error: Value of type "float" is not indexable  [index]
infrastructure\agents\risk\calculators.py:213:23: error: "float" has no attribute "mean"  [attr-defined]
infrastructure\agents\risk\calculators.py:388:19: error: No overload variant of "percentile" matches argument types "Series", "float"  [call-overload]
infrastructure\agents\risk\calculators.py:388:19: note: Possible overload variants:
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> floating[Any]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> complexfloating[Any, Any]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> timedelta64
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> datetime64
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> Any
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[floating[Any]]]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[timedelta64]]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[datetime64]]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[object_]]
infrastructure\agents\risk\calculators.py:388:19: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> Any
infrastructure\agents\risk\calculators.py:388:19: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: _ArrayType = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> _ArrayType
infrastructure\agents\risk\calculators.py:408:32: error: "Series" has no attribute "quantile"  [attr-defined]
infrastructure\agents\risk\calculators.py:409:32: error: "Series" has no attribute "quantile"  [attr-defined]
infrastructure\agents\portfolio\agent_portfolio.py:30:49: error: Argument 2 to "__init__" of "BaseAgent" has incompatible type "PortfolioConfig | None"; expected "Literal['market_maker', 'whale_analyzer', 'risk_manager', 'portfolio_optimizer', 'order_executor', 'news_analyzer', 'market_regime', 'strategy_agent', 'meta_controller', 'evolutionary_agent', 'social_media', 'entanglement_detector']"  [arg-type]
infrastructure\agents\portfolio\agent_portfolio.py:33:61: error: Argument "event_bus" to "PortfolioManager" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\agents\portfolio\agent_portfolio.py:35:51: error: Argument "event_bus" to "RiskManager" has incompatible type "infrastructure.messaging.optimized_event_bus.EventBus"; expected "infrastructure.messaging.event_bus.EventBus"  [arg-type]
infrastructure\agents\portfolio\agent_portfolio.py:58:13: error: Property "status" defined in "AgentState" is read-only  [misc]
infrastructure\agents\portfolio\agent_portfolio.py:69:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "process" incompatible with return type "Coroutine[Any, Any, ProcessingResult]" in supertype "BaseAgent"  [override]
domain\symbols\market_phase_classifier.py:170:18: error: Module has no attribute "concat"  [attr-defined]
domain\symbols\market_phase_classifier.py:431:35: error: Unsupported operand type for unary - ("Callable[[], ndarray[Any, Any]]")  [operator]
domain\symbols\market_phase_classifier.py:437:30: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:438:26: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:449:35: error: Argument 1 to "find_peaks" has incompatible type "Callable[[], ndarray[Any, Any]]"; expected "CanArrayND[generic, tuple[int, ...]] | Sequence[complex | bytes | str | generic | CanArray0D[generic]]"  [arg-type]
domain\symbols\market_phase_classifier.py:455:30: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:456:26: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:468:39: error: No overload variant of "linregress" matches argument types "ndarray[Any, dtype[signedinteger[Any]]]", "Callable[[], ndarray[Any, Any]]"  [call-overload]
domain\symbols\market_phase_classifier.py:468:39: note: Possible overload variants:
domain\symbols\market_phase_classifier.py:468:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:468:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: None = ..., alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:483:39: error: No overload variant of "linregress" matches argument types "ndarray[Any, dtype[signedinteger[Any]]]", "Callable[[], ndarray[Any, Any]]"  [call-overload]
domain\symbols\market_phase_classifier.py:483:39: note: Possible overload variants:
domain\symbols\market_phase_classifier.py:483:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:483:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: None = ..., alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:511:27: error: "Series" has no attribute "rolling"  [attr-defined]
domain\symbols\market_phase_classifier.py:512:26: error: "Series" has no attribute "rolling"  [attr-defined]
domain\symbols\market_phase_classifier.py:515:30: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:531:39: error: No overload variant of "linregress" matches argument types "ndarray[Any, dtype[signedinteger[Any]]]", "Callable[[], ndarray[Any, Any]]"  [call-overload]
domain\symbols\market_phase_classifier.py:531:39: note: Possible overload variants:
domain\symbols\market_phase_classifier.py:531:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:531:39: note:     def linregress(x: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], y: None = ..., alternative: Literal['two-sided', 'less', 'greater'] = ...) -> LinregressResult
domain\symbols\market_phase_classifier.py:545:27: error: Value of type "Callable[[], Any]" is not indexable  [index]
domain\symbols\market_phase_classifier.py:546:30: error: "Series" has no attribute "rolling"  [attr-defined]
domain\services\correlation_chain.py:245:21: error: "DataFrame" has no attribute "loc"  [attr-defined]
domain\services\correlation_chain.py:250:21: error: "DataFrame" has no attribute "loc"  [attr-defined]
domain\services\correlation_chain.py:265:30: error: "DataFrame" has no attribute "loc"  [attr-defined]
domain\services\correlation_chain.py:303:20: error: "DataFrame" has no attribute "mean"  [attr-defined]
domain\services\correlation_chain.py:318:35: error: Argument 1 to "abs" has incompatible type "DataFrame"; expected "SupportsAbs[Never]"  [arg-type]
domain\services\correlation_chain.py:336:30: error: "DataFrame" has no attribute "loc"  [attr-defined]
domain\services\correlation_chain.py:360:18: error: "DataFrame" has no attribute "values"  [attr-defined]
domain\services\correlation_chain.py:374:26: error: "DataFrame" has no attribute "values"  [attr-defined]
domain\services\correlation_chain.py:410:49: error: Unsupported operand types for > ("float" and "Series")  [operator]
domain\intelligence\mirror_detector.py:70:30: error: Incompatible types in assignment (expression has type "float", variable has type "Series")  [assignment]
domain\intelligence\mirror_detector.py:70:31: error: Unsupported operand types for - ("Series" and "float")  [operator]
domain\intelligence\mirror_detector.py:104:30: error: Value of type "Callable[[], ndarray[Any, Any]]" is not indexable  [index]
domain\intelligence\mirror_detector.py:109:30: error: Value of type "Callable[[], ndarray[Any, Any]]" is not indexable  [index]
tests\test_mirror_detector_integration.py:9:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_mirror_detector_integration.py:9:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "TradingOrchestrator"  [attr-defined]
tests\test_entanglement_detector_integration.py:11:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\unit\test_efficiency_validator.py:220:9: error: "EfficiencyValidator" has no attribute "cleanup"  [attr-defined]
tests\unit\test_efficiency_validator.py:221:9: error: "EfficiencyValidator" has no attribute "cleanup"  [attr-defined]
tests\unit\test_autonomous_controller.py:111:9: error: "AutonomousController" has no attribute "make_autonomous_decision"  [attr-defined]
tests\unit\test_autonomous_controller.py:114:26: error: "AutonomousController" has no attribute "make_autonomous_decision"  [attr-defined]
tests\unit\test_autonomous_controller.py:145:9: error: "AutonomousController" has no attribute "assess_risk"  [attr-defined]
tests\unit\test_autonomous_controller.py:148:33: error: "AutonomousController" has no attribute "assess_risk"  [attr-defined]
tests\unit\test_autonomous_controller.py:186:9: error: "AutonomousController" has no attribute "select_strategy"  [attr-defined]
tests\unit\test_autonomous_controller.py:189:35: error: "AutonomousController" has no attribute "select_strategy"  [attr-defined]
tests\unit\test_autonomous_controller.py:218:9: error: "AutonomousController" has no attribute "detect_market_regime"; maybe "_detect_market_regime"?  [attr-defined]
tests\unit\test_autonomous_controller.py:221:24: error: "AutonomousController" has no attribute "detect_market_regime"; maybe "_detect_market_regime"?  [attr-defined]
tests\unit\test_autonomous_controller.py:248:9: error: "AutonomousController" has no attribute "update_performance_metrics"  [attr-defined]
tests\unit\test_autonomous_controller.py:251:15: error: "AutonomousController" has no attribute "update_performance_metrics"  [attr-defined]
tests\unit\test_autonomous_controller.py:279:18: error: "type[EventType]" has no attribute "MARKET_DATA"  [attr-defined]
tests\unit\test_autonomous_controller.py:280:18: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
tests\unit\test_autonomous_controller.py:289:9: error: "AutonomousController" has no attribute "handle_event"  [attr-defined]
tests\unit\test_autonomous_controller.py:292:24: error: "AutonomousController" has no attribute "handle_event"  [attr-defined]
tests\unit\test_autonomous_controller.py:295:40: error: "type[EventType]" has no attribute "MARKET_DATA"  [attr-defined]
tests\unit\test_autonomous_controller.py:313:9: error: Cannot assign to a method  [method-assign]
tests\unit\test_autonomous_controller.py:321:9: error: "AutonomousController" has no attribute "_validate_config"  [attr-defined]
tests\unit\test_autonomous_controller.py:324:20: error: "AutonomousController" has no attribute "_validate_config"  [attr-defined]
tests\unit\test_autonomous_controller.py:333:9: error: "AutonomousController" has no attribute "optimize_performance"  [attr-defined]
tests\unit\test_autonomous_controller.py:336:24: error: "AutonomousController" has no attribute "optimize_performance"  [attr-defined]
tests\unit\test_autonomous_controller.py:348:9: error: "AutonomousController" has no attribute "adaptive_learning"  [attr-defined]
tests\unit\test_autonomous_controller.py:351:24: error: "AutonomousController" has no attribute "adaptive_learning"  [attr-defined]
tests\unit\test_autonomous_controller.py:359:9: error: "AutonomousController" has no attribute "cleanup"  [attr-defined]
tests\unit\test_autonomous_controller.py:362:9: error: "AutonomousController" has no attribute "cleanup"  [attr-defined]
shared\monitoring_dashboard.py:27:5: error: Name "performance_monitor" already defined (possibly by an import)  [no-redef]
shared\monitoring_dashboard.py:28:5: error: Name "MetricsAnalyzer" already defined (possibly by an import)  [no-redef]
shared\monitoring_dashboard.py:29:5: error: Name "config_validator" already defined (possibly by an import)  [no-redef]
shared\monitoring_dashboard.py:72:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
shared\monitoring_dashboard.py:73:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
scripts\train_window_model.py:72:9: error: Need type annotation for "metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
scripts\train_window_model.py:93:18: error: Module has no attribute "read_csv"  [attr-defined]
scripts\train_window_model.py:116:22: error: "DataFrame" has no attribute "sample"  [attr-defined]
scripts\train_window_model.py:133:27: error: "DataFrame" has no attribute "select_dtypes"  [attr-defined]
scripts\train_window_model.py:134:9: error: Unsupported target for indexed assignment ("DataFrame")  [index]
scripts\train_window_model.py:137:31: error: "DataFrame" has no attribute "select_dtypes"  [attr-defined]
scripts\train_window_model.py:138:9: error: Unsupported target for indexed assignment ("DataFrame")  [index]
interfaces\presentation\dashboard\monitoring_dashboard.py:29:1: error: Module "infrastructure.core.logging" has no attribute "get_logger"  [attr-defined]
interfaces\presentation\dashboard\monitoring_dashboard.py:32:1: error: Module "infrastructure.core.visualization" has no attribute "ChartBuilder"  [attr-defined]
interfaces\presentation\dashboard\monitoring_dashboard.py:33:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletAnalyzer"  [attr-defined]
interfaces\presentation\dashboard\monitoring_dashboard.py:35:1: error: Module "shared.market_regime" has no attribute "MarketRegimeDetector"  [attr-defined]
interfaces\presentation\dashboard\monitoring_dashboard.py:36:1: error: Module "shared.timeframes" has no attribute "TimeframeUtils"  [attr-defined]
interfaces\presentation\dashboard\monitoring_dashboard.py:37:1: error: Module "shared.unified_cache" has no attribute "CacheManager"  [attr-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:27:23: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:32:20: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:34:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:35:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:36:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:37:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:38:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:50:32: error: Name "Optional" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:50:32: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Optional")
infrastructure\strategies\evolution\evolvable_base_strategy.py:52:23: error: Incompatible types in assignment (expression has type "Any | EvolutionConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\evolution\evolvable_base_strategy.py:62:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\evolvable_base_strategy.py:65:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\evolution\evolvable_base_strategy.py:65:29: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:96:27: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:115:37: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:115:54: error: Name "Optional" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:115:54: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Optional")
infrastructure\strategies\evolution\evolvable_base_strategy.py:146:39: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:146:56: error: Name "List" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:146:56: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
infrastructure\strategies\evolution\evolvable_base_strategy.py:174:42: error: Name "List" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:174:42: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
infrastructure\strategies\evolution\evolvable_base_strategy.py:174:58: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:174:58: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:213:36: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:235:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:235:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:235:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:236:10: error: Name "List" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:236:10: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
infrastructure\strategies\evolution\evolvable_base_strategy.py:253:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:253:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:253:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:254:10: error: Name "Optional" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:254:10: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Optional")
infrastructure\strategies\evolution\evolvable_base_strategy.py:284:25: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:284:25: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:301:53: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:301:53: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:315:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:315:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:315:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:334:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:334:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:334:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:350:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:350:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:350:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:351:10: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:351:10: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:373:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:373:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:373:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:389:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:389:51: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:389:51: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:390:10: error: Name "List" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:390:10: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
infrastructure\strategies\evolution\evolvable_base_strategy.py:410:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:410:60: error: Name "Dict" is not defined  [name-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:410:60: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
infrastructure\strategies\evolution\evolvable_base_strategy.py:422:5: error: Signature of "save_state" incompatible with supertype "BaseStrategy"  [override]
infrastructure\strategies\evolution\evolvable_base_strategy.py:422:5: note:      Superclass:
infrastructure\strategies\evolution\evolvable_base_strategy.py:422:5: note:          def save_state(self) -> Any
infrastructure\strategies\evolution\evolvable_base_strategy.py:422:5: note:      Subclass:
infrastructure\strategies\evolution\evolvable_base_strategy.py:422:5: note:          def save_state(self, path: str) -> bool
infrastructure\ml_services\window_optimizer.py:313:13: error: Need type annotation for "importance" (hint: "importance: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\window_optimizer.py:317:25: error: Argument 1 to "zip" has incompatible type "list[str] | None"; expected "Iterable[str]"  [arg-type]
infrastructure\ml_services\transformer_predictor.py:88:9: error: Need type annotation for "momentum_buffer" (hint: "momentum_buffer: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:102:77: error: Incompatible default for argument "learning_rate" (default has type "None", argument has type "float")  [assignment]
infrastructure\ml_services\transformer_predictor.py:102:77: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\ml_services\transformer_predictor.py:102:77: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\ml_services\transformer_predictor.py:134:9: error: Need type annotation for "population" (hint: "population: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:214:25: error: Incompatible types in assignment (expression has type "list[Any]", variable has type "map[Any]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:216:39: error: Value of type "map[Any]" is not indexable  [index]
infrastructure\ml_services\transformer_predictor.py:262:9: error: Need type annotation for "data_buffer" (hint: "data_buffer: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:263:9: error: Need type annotation for "performance_history" (hint: "performance_history: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:269:22: error: Incompatible types in assignment (expression has type "AdaptiveTransformer", variable has type "None")  [assignment]
infrastructure\ml_services\transformer_predictor.py:375:15: error: Need type annotation for "history"  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:383:20: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:394:24: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:432:20: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:448:16: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:471:9: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:472:9: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:475:34: error: "list[Any]" has no attribute "reshape"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:475:48: error: "list[Any]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:486:5: error: "DataFrame" has no attribute "to_csv"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:542:63: error: Argument 2 to "PositionalEncoding" has incompatible type "float"; expected "int"  [arg-type]
infrastructure\ml_services\transformer_predictor.py:578:9: error: Need type annotation for "metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:580:9: error: Need type annotation for "models" (hint: "models: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:581:9: error: Need type annotation for "scalers" (hint: "scalers: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:582:9: error: Need type annotation for "metrics" (hint: "metrics: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:584:9: error: Need type annotation for "_prediction_cache" (hint: "_prediction_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:585:9: error: Need type annotation for "_feature_cache" (hint: "_feature_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:619:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:620:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:621:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:623:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:623:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:624:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:624:60: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:625:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:626:17: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:628:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:628:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:629:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:629:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:631:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:632:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:633:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:635:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:635:36: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:636:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:636:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:638:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:639:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:641:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:641:33: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:642:13: error: Unsupported target for indexed assignment ("DataFrame")  [index]
infrastructure\ml_services\transformer_predictor.py:646:38: error: "DataFrame" has no attribute "fillna"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:756:32: error: Module has no attribute "concat"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:764:17: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:815:58: error: "TransformerConfig" has no attribute "metrics_window"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:849:57: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:268:25: error: Name "TransformerEncoderLayer" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:276:28: error: Name "TransformerEncoder" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:401:9: error: Need type annotation for "feature_cache" (hint: "feature_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:402:9: error: Need type annotation for "prediction_cache" (hint: "prediction_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:403:9: error: Need type annotation for "model_state" (hint: "model_state: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:405:24: error: Need type annotation for "metrics"  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:417:20: error: "DataFrame" has no attribute "copy"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:425:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:427:40: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:432:41: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:438:28: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:444:34: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:448:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:452:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:456:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:460:32: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:462:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:483:28: error: Item "Timestamp" of "Timestamp | DatetimeIndex | Any" has no attribute "hour"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:483:28: error: Item "DatetimeIndex" of "Timestamp | DatetimeIndex | Any" has no attribute "hour"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:484:35: error: Item "Timestamp" of "Timestamp | DatetimeIndex | Any" has no attribute "dayofweek"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:484:35: error: Item "DatetimeIndex" of "Timestamp | DatetimeIndex | Any" has no attribute "dayofweek"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:485:29: error: Item "Timestamp" of "Timestamp | DatetimeIndex | Any" has no attribute "month"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:485:29: error: Item "DatetimeIndex" of "Timestamp | DatetimeIndex | Any" has no attribute "month"  [union-attr]
infrastructure\ml_services\advanced_price_predictor.py:504:23: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:523:22: error: "DataFrame" has no attribute "iloc"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:527:13: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\advanced_price_predictor.py:528:13: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\advanced_price_predictor.py:530:22: error: "list[Any]" has no attribute "reshape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:530:36: error: "list[Any]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:532:37: error: "list[Any]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:618:16: error: Incompatible return value type (got "tuple[Any, floating[Any]]", expected "tuple[ndarray[Any, Any], float]")  [return-value]
infrastructure\entity_system\ai_enhancement\torch_models.py:21:32: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:24:67: error: Incompatible default for argument "hidden_sizes" (default has type "None", argument has type "list[int]")  [assignment]
infrastructure\entity_system\ai_enhancement\torch_models.py:24:67: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\entity_system\ai_enhancement\torch_models.py:24:67: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\entity_system\ai_enhancement\torch_models.py:28:22: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:33:21: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:34:21: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:35:21: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:36:21: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:40:23: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\torch_models.py:41:24: error: Name "nn" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:112:23: error: Name "ort" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:264:39: error: Name "np" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:339:32: error: Name "np" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:341:21: error: Name "np" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:344:54: error: Name "np" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:345:58: error: Name "np" is not defined  [name-defined]
infrastructure\entity_system\ai_enhancement\engine.py:346:53: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolution_manager.py:183:30: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolution_manager.py:475:53: error: Incompatible types in assignment (expression has type "float", target has type "bool")  [assignment]
infrastructure\agents\agent_context.py:291:17: error: "FollowSignal" has no attribute "to_dict"  [attr-defined]
infrastructure\agents\agent_context.py:294:17: error: "FollowResult" has no attribute "to_dict"  [attr-defined]
infrastructure\agents\agent_context.py:510:21: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:513:21: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:518:60: error: "FollowSignal" has no attribute "risk_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:522:21: error: "FollowSignal" has no attribute "stop_loss_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:526:20: error: "FollowSignal" has no attribute "entry_timing"  [attr-defined]
infrastructure\agents\agent_context.py:528:22: error: "FollowSignal" has no attribute "entry_timing"  [attr-defined]
infrastructure\agents\agent_context.py:532:22: error: "FollowSignal" has no attribute "entry_timing"  [attr-defined]
infrastructure\agents\agent_context.py:540:28: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:543:28: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:558:17: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:561:17: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:563:61: error: "FollowSignal" has no attribute "risk_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:565:17: error: "FollowSignal" has no attribute "stop_loss_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:567:52: error: "FollowSignal" has no attribute "pattern_type"  [attr-defined]
infrastructure\agents\agent_context.py:569:58: error: "FollowSignal" has no attribute "expected_direction"  [attr-defined]
infrastructure\agents\agent_context.py:570:55: error: "FollowSignal" has no attribute "expected_return"  [attr-defined]
infrastructure\agents\agent_context.py:571:52: error: "FollowSignal" has no attribute "entry_timing"  [attr-defined]
infrastructure\agents\agent_context.py:583:17: error: "FollowSignal" has no attribute "pattern_type"  [attr-defined]
infrastructure\agents\agent_context.py:583:17: error: "FollowSignal" has no attribute "expected_direction"  [attr-defined]
infrastructure\agents\agent_context.py:599:33: error: "FollowSignal" has no attribute "pattern_type"  [attr-defined]
infrastructure\agents\agent_context.py:601:39: error: "FollowSignal" has no attribute "expected_direction"  [attr-defined]
infrastructure\agents\agent_context.py:602:36: error: "FollowSignal" has no attribute "expected_return"  [attr-defined]
infrastructure\agents\agent_context.py:603:33: error: "FollowSignal" has no attribute "entry_timing"  [attr-defined]
infrastructure\agents\agent_context.py:606:43: error: "FollowSignal" has no attribute "position_size_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:607:34: error: "FollowSignal" has no attribute "risk_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:608:39: error: "FollowSignal" has no attribute "stop_loss_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:609:41: error: "FollowSignal" has no attribute "take_profit_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:639:18: error: "FollowResult" has no attribute "actual_return"  [attr-defined]
infrastructure\agents\agent_context.py:641:16: error: "FollowResult" has no attribute "success"  [attr-defined]
infrastructure\agents\agent_context.py:660:17: error: "FollowResult" has no attribute "success"  [attr-defined]
infrastructure\agents\agent_context.py:660:17: error: "FollowResult" has no attribute "actual_return"  [attr-defined]
infrastructure\agents\agent_context.py:685:50: error: Invalid index type "SessionType" for "dict[str, SessionInfluenceSignal]"; expected type "str"  [index]
infrastructure\agents\agent_context.py:752:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:1067:29: error: Argument 1 to "set" has incompatible type "list[float]"; expected "Iterable[str]"  [arg-type]
infrastructure\agents\agent_context.py:1103:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:1346:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:1350:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:1368:36: error: "SessionInfluenceResult" has no attribute "influence_score"  [attr-defined]
infrastructure\agents\agent_context.py:1370:34: error: "SessionInfluenceResult" has no attribute "volume_impact"  [attr-defined]
infrastructure\agents\agent_context.py:1371:38: error: "SessionInfluenceResult" has no attribute "volatility_impact"  [attr-defined]
infrastructure\agents\agent_context.py:1372:37: error: "SessionInfluenceResult" has no attribute "liquidity_impact"  [attr-defined]
infrastructure\agents\agent_context.py:1373:33: error: "SessionInfluenceResult" has no attribute "price_impact"  [attr-defined]
infrastructure\agents\agent_context.py:1374:30: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\agents\agent_context.py:1377:24: error: "SessionInfluenceResult" has no attribute "influence_score"  [attr-defined]
infrastructure\agents\agent_context.py:1391:17: error: "SessionInfluenceResult" has no attribute "influence_score"  [attr-defined]
infrastructure\agents\agent_context.py:1507:13: error: "object" has no attribute "extend"  [attr-defined]
infrastructure\agents\agent_context.py:1513:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1518:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1523:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1529:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1534:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1539:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:1602:17: error: Property "confidence" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1602:46: error: Incompatible types in assignment (expression has type "Percentage", variable has type "Decimal")  [assignment]
infrastructure\agents\agent_context.py:1605:25: error: "Decimal" has no attribute "value"  [attr-defined]
infrastructure\agents\agent_context.py:1614:25: error: Property "strength" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1614:52: error: Incompatible types in assignment (expression has type "Percentage", variable has type "Decimal")  [assignment]
infrastructure\agents\agent_context.py:1617:33: error: "Decimal" has no attribute "value"  [attr-defined]
infrastructure\agents\agent_context.py:1622:25: error: Property "strength" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1622:52: error: Incompatible types in assignment (expression has type "Percentage", variable has type "Decimal")  [assignment]
infrastructure\agents\agent_context.py:1625:33: error: "Decimal" has no attribute "value"  [attr-defined]
infrastructure\agents\agent_context.py:1638:25: error: Property "confidence" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1638:54: error: Incompatible types in assignment (expression has type "Percentage", variable has type "Decimal")  [assignment]
infrastructure\agents\agent_context.py:1641:33: error: "Decimal" has no attribute "value"  [attr-defined]
infrastructure\agents\agent_context.py:1645:25: error: Property "strength" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1645:52: error: Incompatible types in assignment (expression has type "Percentage", variable has type "Decimal")  [assignment]
infrastructure\agents\agent_context.py:1648:33: error: "Decimal" has no attribute "value"  [attr-defined]
infrastructure\agents\agent_context.py:1654:17: error: Property "metadata" defined in "Signal" is read-only  [misc]
infrastructure\agents\agent_context.py:1723:25: error: "AggregatedSignal" has no attribute "direction"  [attr-defined]
infrastructure\agents\agent_context.py:2129:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:2975:17: error: "StrategyModifiers" has no attribute "entanglement_risk_multiplier"  [attr-defined]
infrastructure\agents\agent_context.py:3589:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3591:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3594:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3596:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3599:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3602:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3605:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3608:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3611:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3614:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3618:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3624:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context.py:3824:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\agents\agent_context.py:3837:64: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
infrastructure\agents\agent_context.py:3838:60: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
infrastructure\agents\agent_context.py:3841:31: error: Unexpected keyword argument "timestamp" for "Signal"  [call-arg]
domain\value_objects\signal.py:47:5: note: "Signal" defined here
infrastructure\agents\agent_context.py:3308:25: error: Cannot determine type of "base_signal"  [has-type]
infrastructure\agents\agent_context.py:3364:21: error: "AgentContext" has no attribute "apply_advanced_market_maker_modifier"  [attr-defined]
infrastructure\agents\agent_context.py:3843:28: error: Argument "confidence" to "Signal" has incompatible type "Percentage"; expected "Decimal"  [arg-type]
infrastructure\agents\agent_context.py:3844:26: error: Argument "strength" to "Signal" has incompatible type "Percentage"; expected "Decimal"  [arg-type]
infrastructure\agents\agent_context.py:3860:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\agents\whales\detectors.py:8:1: error: Module "infrastructure.core.logging" has no attribute "setup_logger"  [attr-defined]
infrastructure\agents\whales\detectors.py:15:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:20:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:21:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:22:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:23:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:24:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:25:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:26:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:35:73: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:46:9: error: Need type annotation for "whale_data" (hint: "whale_data: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\agents\whales\detectors.py:49:73: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:77:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\agents\whales\detectors.py:102:22: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:103:21: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:104:17: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:114:36: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:134:31: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:135:34: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:136:33: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:139:28: error: Name "np" is not defined  [name-defined]
infrastructure\agents\whales\detectors.py:140:27: error: Name "np" is not defined  [name-defined]
infrastructure\agents\news\services.py:146:49: error: Name "NewsItem" is not defined  [name-defined]
infrastructure\agents\news\services.py:169:42: error: Name "NewsSource" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:38:43: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:40:16: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:41:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:42:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:43:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:44:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:45:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:48:45: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:50:16: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:51:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:52:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:53:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:54:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:55:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:56:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:103:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:120:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:129:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:152:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\market_maker\ml_predictor.py:161:53: error: Name "pd" is not defined  [name-defined]
examples\strategy_usage.py:44:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:45:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:46:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:47:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:51:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:80:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:81:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:82:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:83:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:86:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:115:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:116:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:117:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:118:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:121:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:150:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:151:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:152:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:153:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:156:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:185:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:186:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:187:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:188:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:191:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:220:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:221:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:222:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:223:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:226:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:255:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:256:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:257:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:258:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:261:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\strategy_usage.py:290:14: error: Argument "name" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:291:21: error: Argument "description" to "Strategy" has incompatible type "object"; expected "str"  [arg-type]
examples\strategy_usage.py:292:23: error: Argument "strategy_type" to "Strategy" has incompatible type "object"; expected "StrategyType"  [arg-type]
examples\strategy_usage.py:293:23: error: Argument "trading_pairs" to "Strategy" has incompatible type "object"; expected "list[str]"  [arg-type]
examples\strategy_usage.py:296:43: error: Argument 1 to "update_parameters" of "StrategyParameters" has incompatible type "object"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
examples\mirror_neuron_signal_example_backup.py:89:35: error: Argument "timestamp" to "MirrorSignal" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
examples\mirror_neuron_signal_example_backup.py:114:31: error: Incompatible types (expression has type "datetime", TypedDict item "timestamp" has type "Timestamp")  [typeddict-item]
examples\mirror_neuron_signal_example_backup.py:293:13: error: Module has no attribute "date_range"  [attr-defined]
examples\mirror_neuron_signal_example_backup.py:313:49: error: Unsupported operand types for - ("Series" and "float")  [operator]
examples\mirror_neuron_signal_example_backup.py:314:25: error: No overload variant of "__rmul__" of "ndarray" matches argument type "Series"  [operator]
examples\mirror_neuron_signal_example_backup.py:314:25: note: Possible overload variants:
examples\mirror_neuron_signal_example_backup.py:314:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], /) -> ndarray[Any, dtype[floating[Any]]]
examples\mirror_neuron_signal_example_backup.py:314:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], /) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
examples\mirror_neuron_signal_example_backup.py:314:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | number[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | number[Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], /) -> ndarray[Any, dtype[number[Any]]]
examples\mirror_neuron_signal_example_backup.py:314:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], /) -> ndarray[Any, dtype[timedelta64]]
examples\mirror_neuron_signal_example_backup.py:314:25: note:     def __rmul__(self, _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], /) -> Any
examples\mirror_neuron_signal_example_backup.py:321:49: error: Unsupported operand types for - ("Series" and "float")  [operator]
examples\mirror_neuron_signal_example_backup.py:322:25: error: No overload variant of "__rmul__" of "ndarray" matches argument type "Series"  [operator]
examples\mirror_neuron_signal_example_backup.py:322:25: note: Possible overload variants:
examples\mirror_neuron_signal_example_backup.py:322:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], /) -> ndarray[Any, dtype[floating[Any]]]
examples\mirror_neuron_signal_example_backup.py:322:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], /) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
examples\mirror_neuron_signal_example_backup.py:322:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | number[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | number[Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], /) -> ndarray[Any, dtype[number[Any]]]
examples\mirror_neuron_signal_example_backup.py:322:25: note:     def __rmul__(self, _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], /) -> ndarray[Any, dtype[timedelta64]]
examples\mirror_neuron_signal_example_backup.py:322:25: note:     def __rmul__(self, _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], /) -> Any
examples\mirror_neuron_signal_example_backup.py:352:22: error: "MirrorDetector" has no attribute "detect_mirror_signals"; maybe "detect_mirror_signal"?  [attr-defined]
examples\mirror_neuron_signal_example_backup.py:534:57: error: Argument 1 to "generate_trading_signals" of "MirrorTradingStrategy" has incompatible type "str"; expected "Symbol"  [arg-type]
examples\analytical_integration_example.py:96:24: error: "MarketMakerModelAgent" has no attribute "should_proceed_with_trade"  [attr-defined]
examples\analytical_integration_example.py:100:27: error: "MarketMakerModelAgent" has no attribute "get_trading_recommendations"  [attr-defined]
examples\analytical_integration_example.py:104:24: error: "MarketMakerModelAgent" has no attribute "calculate_with_analytics"  [attr-defined]
examples\analytical_integration_example.py:129:12: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:150:23: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:158:24: error: "MarketMakerModelAgent" has no attribute "should_proceed_with_trade"  [attr-defined]
examples\analytical_integration_example.py:162:31: error: "MarketMakerModelAgent" has no attribute "get_adjusted_aggressiveness"  [attr-defined]
examples\analytical_integration_example.py:166:24: error: "MarketMakerModelAgent" has no attribute "calculate_with_analytics"  [attr-defined]
examples\analytical_integration_example.py:191:12: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:218:23: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:226:24: error: "MarketMakerModelAgent" has no attribute "should_proceed_with_trade"  [attr-defined]
examples\analytical_integration_example.py:231:22: error: "MarketMakerModelAgent" has no attribute "get_price_offset"  [attr-defined]
examples\analytical_integration_example.py:232:23: error: "MarketMakerModelAgent" has no attribute "get_price_offset"  [attr-defined]
examples\analytical_integration_example.py:237:24: error: "MarketMakerModelAgent" has no attribute "calculate_with_analytics"  [attr-defined]
examples\analytical_integration_example.py:262:12: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:284:23: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:292:31: error: "MarketMakerModelAgent" has no attribute "get_adjusted_confidence"; maybe "get_confidence"?  [attr-defined]
examples\analytical_integration_example.py:296:25: error: "MarketMakerModelAgent" has no attribute "get_adjusted_position_size"  [attr-defined]
examples\analytical_integration_example.py:300:24: error: "MarketMakerModelAgent" has no attribute "calculate_with_analytics"  [attr-defined]
examples\analytical_integration_example.py:325:12: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:331:30: error: Missing positional arguments "bid_ask_forces", "gravity_distribution", "timestamp", "volume_imbalance", "price_momentum", "volatility_score", "liquidity_score", "market_efficiency" in call to "LiquidityGravityResult"  [call-arg]
examples\analytical_integration_example.py:334:26: error: Extra keys ("data_points", "confidence", "processing_time_ms", "algorithm_version", "parameters", "quality_metrics") for TypedDict "MarketMetadataDict"  [typeddict-unknown-key]
examples\analytical_integration_example.py:345:31: error: Missing positional arguments "symbol", "liquidity_score", "volatility_score", "overall_risk", "timestamp" in call to "RiskAssessmentResult"  [call-arg]
examples\analytical_integration_example.py:360:23: error: "MarketMakerModelAgent" has no attribute "analytical_integration"  [attr-defined]
examples\analytical_integration_example.py:369:24: error: "MarketMakerModelAgent" has no attribute "should_proceed_with_trade"  [attr-defined]
examples\analytical_integration_example.py:373:31: error: "MarketMakerModelAgent" has no attribute "get_adjusted_aggressiveness"  [attr-defined]
examples\analytical_integration_example.py:374:25: error: "MarketMakerModelAgent" has no attribute "get_adjusted_position_size"  [attr-defined]
examples\analytical_integration_example.py:380:24: error: "MarketMakerModelAgent" has no attribute "calculate_with_analytics"  [attr-defined]
examples\analytical_integration_example.py:398:17: error: Module has no attribute "date_range"  [attr-defined]
domain\strategies\validators.py:255:14: error: Cannot use isinstance() with NewType type  [misc]
domain\strategies\strategy_interface.py:571:31: error: "type[SignalType]" has no attribute "STRONG_BUY"  [attr-defined]
domain\strategies\strategy_interface.py:576:31: error: "type[SignalType]" has no attribute "STRONG_SELL"  [attr-defined]
domain\sessions\__init__.py:42:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:42:14: error: Incompatible types in assignment (expression has type "type[Any]", variable has type "type[Series]")  [assignment]
domain\sessions\__init__.py:43:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:43:17: error: Incompatible types in assignment (expression has type "type[Any]", variable has type "type[DataFrame]")  [assignment]
domain\sessions\__init__.py:44:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:44:20: error: Incompatible types in assignment (expression has type "type[Any]", variable has type "type[Series[float]]")  [assignment]
domain\sessions\__init__.py:45:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:45:23: error: Incompatible types in assignment (expression has type "type[Any]", variable has type "type[DataFrame]")  [assignment]
domain\services\ml_predictor.py:31:49: error: Name "pd" is not defined  [name-defined]
domain\services\ml_predictor.py:66:39: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:68:16: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:69:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:70:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:71:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:72:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:73:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:74:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:77:42: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:79:16: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:80:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:81:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:82:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:83:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:84:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:85:13: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:150:49: error: Name "pd" is not defined  [name-defined]
domain\services\ml_predictor.py:185:21: error: Name "pd" is not defined  [name-defined]
domain\services\ml_predictor.py:215:21: error: Name "pd" is not defined  [name-defined]
domain\services\ml_predictor.py:276:24: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:284:36: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:317:24: error: Name "nn" is not defined  [name-defined]
domain\services\ml_predictor.py:325:36: error: Name "nn" is not defined  [name-defined]
domain\repositories\strategy_repository.py:119:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\strategy_repository.py:120:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\strategy_repository.py:121:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:172:20: error: Incompatible return value type (got "Decimal | None", expected "float | None")  [return-value]
domain\protocols\strategy_protocol.py:306:62: error: Unsupported operand types for < ("float" and "None")  [operator]
domain\protocols\strategy_protocol.py:306:62: note: Right operand is of type "float | None"
domain\protocols\strategy_protocol.py:306:62: error: Unsupported operand types for > ("float" and "None")  [operator]
domain\protocols\strategy_protocol.py:306:62: note: Left operand is of type "float | None"
domain\protocols\strategy_protocol.py:583:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:584:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:585:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:586:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:1196:12: error: "Series" has no attribute "shape"  [attr-defined]
domain\protocols\strategy_protocol.py:1198:26: error: "Series" has no attribute "astype"  [attr-defined]
domain\protocols\strategy_protocol.py:1206:12: error: "Series" has no attribute "shape"  [attr-defined]
domain\protocols\strategy_protocol.py:1208:23: error: "Series" has no attribute "expanding"  [attr-defined]
domain\protocols\strategy_protocol.py:1243:12: error: "DataFrame" has no attribute "shape"  [attr-defined]
domain\protocols\strategy_protocol.py:1245:12: error: "DataFrame" has no attribute "isnull"  [attr-defined]
domain\protocols\strategy_protocol.py:1247:12: error: "DataFrame" has no attribute "shape"  [attr-defined]
domain\protocols\repository_protocol.py:176:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\repository_protocol.py:177:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\entities\strategy_interface.py:115:24: error: Unsupported operand types for < ("int" and "object")  [operator]
domain\entities\strategy_interface.py:402:16: error: "Series" has no attribute "expanding"  [attr-defined]
domain\entities\strategy_interface.py:472:20: error: Cannot instantiate abstract class "BaseStrategy" with abstract attribute "_generate_strategy_signals"  [abstract]
domain\entities\strategy_interface.py:473:25: error: Argument "strategy_id" to "BaseStrategy" has incompatible type "Any | None"; expected "StrategyId"  [arg-type]
domain\entities\strategy_interface.py:476:20: error: Argument "config" to "BaseStrategy" has incompatible type "dict[str, Any]"; expected "StrategyConfig"  [arg-type]
application\strategy_advisor\mirror_map_builder.py:32:43: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\strategy_advisor\mirror_map_builder.py:151:20: error: "Series" has no attribute "isna"  [attr-defined]
application\strategy_advisor\mirror_map_builder.py:227:37: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\strategy_advisor\mirror_map_builder.py:305:28: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\strategy_advisor\mirror_map_builder.py:511:33: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\filters\orderbook_filter.py:146:56: error: Argument 1 to "analyze_noise" of "NoiseAnalyzer" has incompatible type "domain.entities.orderbook.OrderBookSnapshot"; expected "domain.types.intelligence_types.OrderBookSnapshot"  [arg-type]
tests\test_session_marker_integration.py:7:1: error: Module "domain.sessions.session_marker" has no attribute "SessionContext"; maybe "MarketSessionContext"?  [attr-defined]
tests\test_session_marker_integration.py:7:1: error: Module "domain.sessions.session_marker" has no attribute "TradingSession"  [attr-defined]
tests\test_session_marker_integration.py:14:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_session_influence_analyzer_integration.py:9:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_reversal_prediction_integration.py:20:37: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:22:17: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:24:17: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:25:20: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:26:18: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:28:17: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:31:16: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:34:34: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:35:33: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:37:27: error: Name "np" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:105:16: error: Too many arguments for "ReversalController"  [call-arg]
tests\test_reversal_prediction_integration.py:112:63: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:127:69: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:141:66: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:176:74: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:264:90: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:283:25: error: Name "Price" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:284:24: error: Argument "confidence" to "ReversalSignal" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\test_reversal_prediction_integration.py:286:29: error: Argument "signal_strength" to "ReversalSignal" has incompatible type "float"; expected "SignalStrengthScore"  [arg-type]
tests\test_reversal_prediction_integration.py:287:23: error: Name "Timestamp" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:311:25: error: Name "Price" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:312:24: error: Argument "confidence" to "ReversalSignal" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\test_reversal_prediction_integration.py:314:29: error: Argument "signal_strength" to "ReversalSignal" has incompatible type "float"; expected "SignalStrengthScore"  [arg-type]
tests\test_reversal_prediction_integration.py:315:23: error: Name "Timestamp" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:337:25: error: Name "Price" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:338:24: error: Argument "confidence" to "ReversalSignal" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\test_reversal_prediction_integration.py:340:29: error: Argument "signal_strength" to "ReversalSignal" has incompatible type "float"; expected "SignalStrengthScore"  [arg-type]
tests\test_reversal_prediction_integration.py:341:23: error: Name "Timestamp" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:365:29: error: Name "pd" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:439:25: error: Name "Price" is not defined  [name-defined]
tests\test_reversal_prediction_integration.py:440:24: error: Argument "confidence" to "ReversalSignal" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\test_reversal_prediction_integration.py:442:29: error: Argument "signal_strength" to "ReversalSignal" has incompatible type "float"; expected "SignalStrengthScore"  [arg-type]
tests\test_reversal_prediction_integration.py:443:23: error: Name "Timestamp" is not defined  [name-defined]
tests\test_pattern_discovery_integration.py:11:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_noise_analyzer_integration.py:20:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_mm_pattern_integration.py:15:1: error: Module "infrastructure.market_profiles" has no attribute "MarketMakerStorage"  [attr-defined]
tests\test_mm_pattern_integration.py:17:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_mm_pattern_integration.py:411:5: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\test_mirror_neuron_integration.py:48:36: error: Value of type "Callable[[], Any]" is not indexable  [index]
tests\test_mirror_neuron_integration.py:51:31: error: Module has no attribute "date_range"  [attr-defined]
tests\test_market_pattern_recognizer_integration.py:9:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_live_adaptation_integration.py:7:1: error: Module "infrastructure.ml_services.live_adaptation" has no attribute "LiveAdaptationModel"; maybe "LiveAdaptation"?  [attr-defined]
tests\test_live_adaptation_integration.py:7:1: error: Module "infrastructure.ml_services.live_adaptation" has no attribute "AdaptationMetrics"  [attr-defined]
tests\test_live_adaptation_integration.py:14:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_live_adaptation_integration.py:212:31: error: "await" outside coroutine ("async def")  [await-not-async]
tests\test_evolutionary_transformer_integration.py:12:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_decision_reasoner_integration.py:7:1: error: Module "infrastructure.ml_services.decision_reasoner" has no attribute "TradeDecision"  [attr-defined]
tests\test_decision_reasoner_integration.py:9:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\test_analytical_integration.py:13:1: error: Module "infrastructure.agents.agent_market_maker_model" has no attribute "MarketMakerModelAgent"  [attr-defined]
tests\test_analytical_integration.py:15:1: error: Module "infrastructure.agents.analytical_integration" has no attribute "AnalyticalIntegration"  [attr-defined]
tests\test_analytical_integration.py:15:1: error: Module "infrastructure.agents.analytical_integration" has no attribute "AnalyticalIntegrationConfig"  [attr-defined]
tests\conftest.py:97:13: error: Module has no attribute "date_range"  [attr-defined]
tests\validation\test_business_logic.py:8:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\validation\test_business_logic.py:11:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\unit\test_protocols_strategy.py:20:16: error: Unexpected keyword argument "symbols" for "StrategyConfig"  [call-arg]
tests\unit\test_protocols_strategy.py:20:16: error: Unexpected keyword argument "timeframe" for "StrategyConfig"  [call-arg]
tests\unit\test_protocols_strategy.py:20:16: error: Unexpected keyword argument "enabled" for "StrategyConfig"  [call-arg]
tests\unit\test_protocols_strategy.py:34:26: error: Unexpected keyword argument "is_active" for "StrategyState"  [call-arg]
tests\unit\test_protocols_strategy.py:46:25: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:53:25: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:59:35: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:65:55: error: Unexpected keyword argument "total_pnl" for "StrategyMetrics"  [call-arg]
tests\unit\test_protocols_strategy.py:70:26: error: Argument "max_drawdown" to "StrategyMetrics" has incompatible type "Money"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:71:26: error: Argument "sharpe_ratio" to "StrategyMetrics" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:72:22: error: Argument "win_rate" to "StrategyMetrics" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:75:53: error: Unexpected keyword argument "is_active" for "StrategyState"  [call-arg]
tests\unit\test_protocols_strategy.py:105:25: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:117:25: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:131:16: error: "StrategyState" has no attribute "is_active"  [attr-defined]
tests\unit\test_protocols_strategy.py:160:29: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:169:29: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_strategy.py:178:29: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
tests\unit\test_protocols_repository.py:9:1: error: Module "domain.protocols.repository_protocol" has no attribute "TransactionalRepositoryProtocol"; maybe "PositionRepositoryProtocol", "TradingPairRepositoryProtocol", or "TradingRepositoryProtocol"?  [attr-defined]
tests\unit\test_protocols_repository.py:9:1: error: Module "domain.protocols.repository_protocol" has no attribute "RepositoryError"  [attr-defined]
tests\unit\test_protocols_repository.py:9:1: error: Module "domain.protocols.repository_protocol" has no attribute "NotFoundError"  [attr-defined]
tests\unit\test_protocols_repository.py:9:1: error: Module "domain.protocols.repository_protocol" has no attribute "DuplicateError"  [attr-defined]
tests\unit\test_protocols_repository.py:20:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\unit\test_protocols_repository.py:84:46: error: Missing positional arguments "field_name", "field_value", "validation_rule" in call to "ValidationError"  [call-arg]
tests\unit\test_protocols_repository.py:109:46: error: Missing positional arguments "field_name", "field_value", "validation_rule" in call to "ValidationError"  [call-arg]
tests\unit\test_protocols_repository.py:156:52: error: Missing positional arguments "field_name", "field_value", "validation_rule" in call to "ValidationError"  [call-arg]
tests\unit\application_tests\test_strategy_advisor.py:28:16: error: Too many arguments for "MirrorMapBuilder"  [call-arg]
tests\unit\application_tests\test_strategy_advisor.py:51:22: error: Incompatible types in "await" (actual type "MirrorMap", expected type "Awaitable[Any]")  [misc]
tests\unit\application_tests\test_strategy_advisor.py:51:62: error: Argument 2 to "build_mirror_map" of "MirrorMapBuilder" has incompatible type "str"; expected "dict[str, Series]"  [arg-type]
tests\unit\application_tests\test_strategy_advisor.py:75:30: error: "MirrorMapBuilder" has no attribute "_analyze_correlations"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:95:33: error: "MirrorMapBuilder" has no attribute "_analyze_pattern_mirrors"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:117:34: error: "MirrorMapBuilder" has no attribute "_analyze_strategy_mirrors"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:138:25: error: "MirrorMapBuilder" has no attribute "_group_mirrors"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:159:27: error: "MirrorMapBuilder" has no attribute "_generate_recommendations"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:174:20: error: "MirrorMapBuilder" has no attribute "_calculate_mirror_strength"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:186:31: error: "MirrorMapBuilder" has no attribute "_find_strong_correlations"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:197:28: error: "MirrorMapBuilder" has no attribute "_calculate_overall_strength"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:210:17: error: Incompatible types in "await" (actual type "dict[str, Any]", expected type "Awaitable[Any]")  [misc]
tests\unit\application_tests\test_strategy_advisor.py:210:23: error: Too many arguments for "get_mirror_map_statistics" of "MirrorMapBuilder"  [call-arg]
tests\unit\application_tests\test_strategy_advisor.py:225:16: error: "MirrorMapBuilder" has no attribute "_validate_symbols"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:227:9: error: Need type annotation for "empty_symbols" (hint: "empty_symbols: list[<type>] = ...")  [var-annotated]
tests\unit\application_tests\test_strategy_advisor.py:228:16: error: "MirrorMapBuilder" has no attribute "_validate_symbols"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:231:16: error: "MirrorMapBuilder" has no attribute "_validate_symbols"  [attr-defined]
tests\unit\application_tests\test_strategy_advisor.py:236:22: error: "MirrorMapBuilder" has no attribute "_calculate_confidence_score"  [attr-defined]
tests\unit\application_tests\test_filters.py:35:30: error: "OrderBookPreFilter" has no attribute "filter_by_price_range"  [attr-defined]
tests\unit\application_tests\test_filters.py:49:30: error: "OrderBookPreFilter" has no attribute "filter_by_quantity_threshold"  [attr-defined]
tests\unit\application_tests\test_filters.py:61:30: error: "OrderBookPreFilter" has no attribute "filter_by_spread"  [attr-defined]
tests\unit\application_tests\test_filters.py:74:30: error: "OrderBookPreFilter" has no attribute "filter_by_depth"  [attr-defined]
tests\unit\application_tests\test_filters.py:85:30: error: "OrderBookPreFilter" has no attribute "remove_outliers"  [attr-defined]
tests\unit\application_tests\test_filters.py:94:32: error: "OrderBookPreFilter" has no attribute "normalize_orderbook"  [attr-defined]
tests\unit\application_tests\test_filters.py:106:19: error: "OrderBookPreFilter" has no attribute "calculate_orderbook_metrics"  [attr-defined]
tests\unit\application_tests\test_filters.py:127:30: error: "OrderBookPreFilter" has no attribute "filter_invalid_data"  [attr-defined]
tests\unit\application_tests\test_filters.py:138:30: error: "OrderBookPreFilter" has no attribute "apply_multiple_filters"  [attr-defined]
tests\unit\application_tests\test_filters.py:143:51: error: Unsupported operand types for <= ("int" and "object")  [operator]
tests\unit\application_tests\test_filters.py:144:51: error: Unsupported operand types for <= ("int" and "object")  [operator]
tests\unit\application_tests\test_filters.py:146:48: error: Unsupported operand types for >= ("Decimal" and "object")  [operator]
tests\unit\application_tests\test_filters.py:148:48: error: Unsupported operand types for >= ("Decimal" and "object")  [operator]
tests\unit\application_tests\test_filters.py:157:29: error: "OrderBookPreFilter" has no attribute "filter_by_price_range"  [attr-defined]
tests\unit\application_tests\test_filters.py:162:32: error: "OrderBookPreFilter" has no attribute "filter_by_quantity_threshold"  [attr-defined]
tests\unit\application_tests\test_filters.py:167:19: error: "OrderBookPreFilter" has no attribute "calculate_orderbook_metrics"  [attr-defined]
tests\integration\test_session_influence_integration.py:3:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "TradingOrchestrator"  [attr-defined]
tests\integration\domain\test_symbols_domain_integration.py:8:1: error: Module "domain.symbols" has no attribute "OrderBookMetrics"; maybe "OrderBookMetricsData"?  [attr-defined]
tests\integration\domain\test_symbols_domain_integration.py:8:1: error: Module "domain.symbols" has no attribute "PatternMetrics"; maybe "PatternMetricsData"?  [attr-defined]
tests\integration\domain\test_symbols_domain_integration.py:8:1: error: Module "domain.symbols" has no attribute "SessionMetrics"; maybe "SessionMetricsData"?  [attr-defined]
tests\domain\services\test_ml_predictor.py:82:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:83:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:138:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:182:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:206:16: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:382:20: error: Cannot use isinstance() with TypedDict type  [misc]
tests\domain\services\test_ml_predictor.py:414:20: error: Cannot use isinstance() with TypedDict type  [misc]
infrastructure\strategies\evolvable_base_strategy.py:46:23: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:51:20: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:52:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:53:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:54:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:55:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:56:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:57:13: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:64:22: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:92:23: error: Incompatible types in assignment (expression has type "EvolvableStrategyConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\evolvable_base_strategy.py:96:41: error: "dict[str, Any]" has no attribute "learning_rate"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:101:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolvable_base_strategy.py:102:9: error: Need type annotation for "signal_history" (hint: "signal_history: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolvable_base_strategy.py:107:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\evolvable_base_strategy.py:107:29: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:142:27: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:163:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\evolvable_base_strategy.py:163:37: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:194:55: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:265:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
infrastructure\strategies\evolvable_base_strategy.py:275:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
infrastructure\strategies\evolvable_base_strategy.py:283:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:307:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:327:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:333:52: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:389:36: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:392:35: error: "dict[str, Any]" has no attribute "evolution_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:403:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:426:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:447:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:479:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:497:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:544:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:557:5: error: Missing return statement  [return]
infrastructure\strategies\evolvable_base_strategy.py:565:17: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:567:30: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:571:21: error: "dict[str, Any]" has no attribute "max_signals"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:573:21: error: "dict[str, Any]" has no attribute "max_signals"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:575:21: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:575:21: error: "dict[str, Any]" has no attribute "max_signals"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:582:5: error: Missing return statement  [return]
infrastructure\strategies\evolvable_base_strategy.py:595:28: error: Name "nn" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:641:5: error: Signature of "save_state" incompatible with supertype "BaseStrategy"  [override]
infrastructure\strategies\evolvable_base_strategy.py:641:5: note:      Superclass:
infrastructure\strategies\evolvable_base_strategy.py:641:5: note:          def save_state(self) -> Any
infrastructure\strategies\evolvable_base_strategy.py:641:5: note:      Subclass:
infrastructure\strategies\evolvable_base_strategy.py:641:5: note:          def save_state(self, path: str) -> bool
infrastructure\strategies\evolvable_base_strategy.py:683:20: error: "Signal" has no attribute "direction"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:685:22: error: "Signal" has no attribute "direction"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:758:53: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:775:52: error: Invalid index type "tuple[int, int | float]" for "Tensor"; expected type "SupportsIndex | bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | _NestedSequence[bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | None] | tuple[SupportsIndex | bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | _NestedSequence[bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | None] | None, ...] | None"  [index]
infrastructure\strategies\evolvable_base_strategy.py:786:57: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:805:51: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\evolvable_base_strategy.py:852:45: error: "dict[str, Any]" has no attribute "confidence_threshold"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:853:38: error: "dict[str, Any]" has no attribute "learning_rate"  [attr-defined]
infrastructure\strategies\evolvable_base_strategy.py:854:44: error: "dict[str, Any]" has no attribute "evolution_threshold"  [attr-defined]
infrastructure\strategies\adaptive_strategy_generator.py:16:1: error: Module "infrastructure.agents.market_regime" has no attribute "MarketRegimeAgent"  [attr-defined]
infrastructure\strategies\adaptive_strategy_generator.py:21:1: error: Module "infrastructure.strategies.reversal_strategies" has no attribute "reversal_strategy_fibo_pinbar"  [attr-defined]
infrastructure\strategies\adaptive_strategy_generator.py:67:48: error: Name "trend_strategy_price_action" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:68:52: error: Name "sideways_strategy_stoch_obv" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:70:17: error: Name "reversal_strategy_rsi_divergence" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:75:17: error: Name "volatility_strategy_ema_keltner" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:78:17: error: Name "manipulation_strategy_stop_hunt" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:79:17: error: Name "manipulation_strategy_fake_breakout" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:84:30: error: Name "MetaLearning" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:85:9: error: Need type annotation for "strategy_cache" (hint: "strategy_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\strategies\adaptive_strategy_generator.py:95:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive_strategy_generator.py:95:29: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:115:24: error: "discover_patterns" of "PatternDiscovery" does not return a value (it only ever returns None)  [func-returns-value]
infrastructure\strategies\adaptive_strategy_generator.py:134:27: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:156:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive_strategy_generator.py:156:37: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:189:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:202:48: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:232:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:260:34: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:265:32: error: Argument "volume_profile" to "MarketContext" has incompatible type "dict[str, float | str]"; expected "dict[str, float]"  [arg-type]
infrastructure\strategies\adaptive_strategy_generator.py:279:36: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:282:41: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:287:31: error: "Tensor" not callable  [operator]
infrastructure\strategies\adaptive_strategy_generator.py:295:39: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:300:37: error: Name "calculate_rsi" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:321:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:324:9: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\adaptive_strategy_generator.py:343:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:351:27: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:371:41: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:386:45: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:461:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:485:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:502:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:522:15: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:549:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:568:15: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:638:17: error: "Tensor" not callable  [operator]
infrastructure\strategies\adaptive_strategy_generator.py:675:23: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:702:16: error: Function "strategy" could always be true in boolean context  [truthy-function]
infrastructure\strategies\adaptive_strategy_generator.py:805:16: error: Function "strategy" could always be true in boolean context  [truthy-function]
infrastructure\strategies\adaptive_strategy_generator.py:819:13: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:872:24: error: Name "generate_features" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:892:17: error: "Tensor" not callable  [operator]
infrastructure\strategies\adaptive_strategy_generator.py:1024:31: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1047:31: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1091:62: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1107:24: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1114:18: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1118:25: error: Too many arguments for "calculate_atr" of "TechnicalAnalysisService"  [call-arg]
infrastructure\strategies\adaptive_strategy_generator.py:1134:30: error: Name "calculate_ema" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1135:32: error: Name "calculate_ema" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1136:30: error: Name "calculate_ema" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1161:26: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1162:33: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1165:54: error: Name "np" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1174:20: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1177:54: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1189:23: error: Need type annotation for "signals"  [var-annotated]
infrastructure\strategies\adaptive_strategy_generator.py:1211:60: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1267:25: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "dict[Any, Any] | float | None"  [dict-item]
infrastructure\strategies\adaptive_strategy_generator.py:1268:25: error: Dict entry 1 has incompatible type "str": "str | None"; expected "str": "dict[Any, Any] | float | None"  [dict-item]
infrastructure\strategies\adaptive_strategy_generator.py:1291:43: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1296:23: error: Too many arguments for "calculate_atr" of "TechnicalAnalysisService"  [call-arg]
infrastructure\strategies\adaptive_strategy_generator.py:1325:39: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive_strategy_generator.py:1337:22: error: Missing positional arguments "timeframe", "regime" in call to "generate_hybrid_strategy" of "AdaptiveStrategyGenerator"  [call-arg]
infrastructure\strategies\adaptive_strategy_generator.py:1339:24: error: Incompatible return value type (got "dict[str, Any]", expected "Callable[..., Any] | None")  [return-value]
infrastructure\strategies\adaptive_strategy_generator.py:1341:20: error: Missing positional argument "timeframe" in call to "_select_best_strategy" of "AdaptiveStrategyGenerator"  [call-arg]
infrastructure\strategies\adaptive\ml_signal_processor.py:19:37: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\ml_signal_processor.py:24:31: error: "Tensor" not callable  [operator]
infrastructure\strategies\adaptive\ml_signal_processor.py:32:39: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\ml_signal_processor.py:37:37: error: Value of type "Callable[[], Any]" is not indexable  [index]
infrastructure\strategies\adaptive\ml_signal_processor.py:85:21: error: Name "pd" is not defined  [name-defined]
infrastructure\services\risk_analysis_service.py:221:66: error: "Series" has no attribute "name"  [attr-defined]
infrastructure\services\risk_analysis_service.py:222:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:223:33: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:230:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:231:17: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:296:20: error: Too many arguments for "validate_market_data"  [call-arg]
infrastructure\services\risk_analysis_service.py:296:41: error: Argument 1 to "validate_market_data" has incompatible type "Series"; expected "DataFrame"  [arg-type]
infrastructure\services\risk_analysis_service.py:322:20: error: Too many arguments for "validate_market_data"  [call-arg]
infrastructure\services\risk_analysis_service.py:324:20: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\services\risk_analysis_service.py:329:5: error: Return type "domain.types.risk_types.RiskMetrics" of "calculate_portfolio_risk" incompatible with return type "domain.entities.risk.RiskMetrics" in supertype "RiskAnalysisService"  [override]
infrastructure\services\risk_analysis_service.py:329:5: error: Return type "domain.types.risk_types.RiskMetrics" of "calculate_portfolio_risk" incompatible with return type "domain.entities.risk.RiskMetrics" in supertype "RiskAnalysisProtocol"  [override]
infrastructure\services\risk_analysis_service.py:330:35: error: Argument 2 of "calculate_portfolio_risk" is incompatible with supertype "RiskAnalysisService"; supertype defines the argument type as "ndarray[Any, Any] | None"  [override]
infrastructure\services\risk_analysis_service.py:330:35: note: This violates the Liskov substitution principle
infrastructure\services\risk_analysis_service.py:330:35: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\services\risk_analysis_service.py:330:35: error: Argument 2 of "calculate_portfolio_risk" is incompatible with supertype "RiskAnalysisProtocol"; supertype defines the argument type as "ndarray[Any, Any] | None"  [override]
infrastructure\services\risk_analysis_service.py:337:68: error: "Series" has no attribute "name"  [attr-defined]
infrastructure\services\risk_analysis_service.py:338:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:339:33: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:346:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:347:17: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:353:5: error: Return type "tuple[dict[str, float], domain.types.risk_types.RiskMetrics]" of "optimize_portfolio" incompatible with return type "tuple[ndarray[Any, Any], domain.entities.risk.RiskMetrics]" in supertype "RiskAnalysisService"  [override]
infrastructure\services\risk_analysis_service.py:353:5: error: Return type "tuple[dict[str, float], domain.types.risk_types.RiskMetrics]" of "optimize_portfolio" incompatible with return type "tuple[ndarray[Any, Any], domain.entities.risk.RiskMetrics]" in supertype "RiskAnalysisProtocol"  [override]
infrastructure\services\risk_analysis_service.py:354:15: error: Argument 1 of "optimize_portfolio" is incompatible with supertype "RiskAnalysisService"; supertype defines the argument type as "DataFrame"  [override]
infrastructure\services\risk_analysis_service.py:354:15: note: This violates the Liskov substitution principle
infrastructure\services\risk_analysis_service.py:354:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\services\risk_analysis_service.py:354:15: error: Argument 1 of "optimize_portfolio" is incompatible with supertype "RiskAnalysisProtocol"; supertype defines the argument type as "DataFrame"  [override]
infrastructure\services\risk_analysis_service.py:361:76: error: "Series" has no attribute "name"  [attr-defined]
infrastructure\services\risk_analysis_service.py:362:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:363:33: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:368:33: error: "DataFrame" has no attribute "cov"  [attr-defined]
infrastructure\services\risk_analysis_service.py:371:34: error: "DataFrame" has no attribute "mean"  [attr-defined]
infrastructure\services\risk_analysis_service.py:376:34: error: Unsupported left operand type for * ("DataFrame")  [operator]
infrastructure\services\risk_analysis_service.py:380:16: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:381:17: error: "CacheManager" has no attribute "cache"; maybe "_caches"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:382:20: error: Incompatible return value type (got "tuple[ndarray[Any, Any], RiskMetrics]", expected "tuple[dict[str, float], RiskMetrics]")  [return-value]
infrastructure\services\risk_analysis_service.py:403:26: error: Unexpected keyword argument "cvar_change" for "StressTestResult"; did you mean "var_change"?  [call-arg]
infrastructure\services\risk_analysis_service.py:403:26: error: Unexpected keyword argument "volatility_change" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:403:26: error: Unexpected keyword argument "scenario_applied_at" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:430:22: error: Unexpected keyword argument "recommendations" for "RiskReport"; did you mean "risk_recommendations"?  [call-arg]
infrastructure\services\risk_analysis_service.py:430:22: error: Unexpected keyword argument "alerts" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:430:22: error: Unexpected keyword argument "report_type" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:434:31: error: Argument "report_period" to "RiskReport" has incompatible type "datetime"; expected "str"  [arg-type]
infrastructure\services\risk_analysis_service.py:440:20: error: Unexpected keyword argument "recommendations" for "RiskReport"; did you mean "risk_recommendations"?  [call-arg]
infrastructure\services\risk_analysis_service.py:440:20: error: Unexpected keyword argument "alerts" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:440:20: error: Unexpected keyword argument "report_type" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:444:31: error: Argument "report_period" to "RiskReport" has incompatible type "datetime"; expected "str"  [arg-type]
infrastructure\services\risk_analysis_service.py:459:20: error: Unexpected keyword argument "calculated_at" for "RiskMetrics"  [call-arg]
infrastructure\services\risk_analysis_service.py:464:24: error: Argument "var_95" to "RiskMetrics" has incompatible type "Decimal"; expected "Money"  [arg-type]
infrastructure\services\risk_analysis_service.py:465:25: error: Argument "cvar_95" to "RiskMetrics" has incompatible type "Decimal"; expected "Money"  [arg-type]
infrastructure\services\risk_analysis_service.py:503:34: error: "DataFrame" has no attribute "corr"  [attr-defined]
infrastructure\services\risk_analysis_service.py:504:37: error: Missing positional argument "correlation_matrix" in call to "calc_diversification_ratio"  [call-arg]
infrastructure\services\risk_analysis_service.py:504:64: error: Argument 1 to "calc_diversification_ratio" has incompatible type "Series"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:519:53: error: Argument 1 to "calc_concentration_risk" has incompatible type "Series"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:563:20: error: Unexpected keyword argument "expected_volatility" for "RiskOptimizationResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:568:37: error: Argument "constraints_applied" to "RiskOptimizationResult" has incompatible type "bool"; expected "list[str]"  [arg-type]
infrastructure\services\risk_analysis_service.py:574:20: error: Incompatible return value type (got "dict[str, Any]", expected "RiskOptimizationResult")  [return-value]
infrastructure\repositories\trading_pair_repository.py:45:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading_pair_repository.py:46:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading_pair_repository.py:46:52: error: Incompatible types in assignment (expression has type "dict[UUID | str, Any]", base class "BaseRepository" defined the type as "dict[CacheKey, Any]")  [assignment]
infrastructure\repositories\trading_pair_repository.py:47:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading_pair_repository.py:47:61: error: Incompatible types in assignment (expression has type "dict[UUID | str, datetime]", base class "BaseRepository" defined the type as "dict[CacheKey, datetime]")  [assignment]
infrastructure\repositories\trading_pair_repository.py:86:48: error: Argument 2 to "_apply_filters" of "InMemoryTradingPairRepository" has incompatible type "list[domain.types.repository_types.QueryFilter]"; expected "list[domain.protocols.repository_protocol.QueryFilter]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:87:24: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:88:45: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:97:19: error: Missing positional argument "entity_id" in call to "EntityNotFoundError"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:118:27: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
infrastructure\repositories\trading_pair_repository.py:118:27: note: This violates the Liskov substitution principle
infrastructure\repositories\trading_pair_repository.py:118:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\trading_pair_repository.py:125:5: error: Return type "AsyncIterator[TradingPair]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Any]]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:125:5: error: Return type "AsyncIterator[TradingPair]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Any]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\trading_pair_repository.py:131:48: error: Argument 2 to "_apply_filters" of "InMemoryTradingPairRepository" has incompatible type "list[domain.types.repository_types.QueryFilter]"; expected "list[domain.protocols.repository_protocol.QueryFilter]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:138:5: error: Return type "_AsyncGeneratorContextManager[Any, None]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\trading_pair_repository.py:143:55: error: Name "Callable" is not defined  [name-defined]
infrastructure\repositories\trading_pair_repository.py:143:55: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Callable")
infrastructure\repositories\trading_pair_repository.py:159:16: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:163:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:180:16: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:184:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:204:16: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:208:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:228:16: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:232:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:277:16: error: Unexpected keyword argument "total_entities" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:277:16: error: Unexpected keyword argument "cache_size" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:277:16: error: Unexpected keyword argument "uptime" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:277:16: error: Unexpected keyword argument "state" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:285:5: error: Signature of "state" incompatible with supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:285:5: note:      Superclass:
infrastructure\repositories\trading_pair_repository.py:285:5: note:          domain.types.repository_types.RepositoryState
infrastructure\repositories\trading_pair_repository.py:285:5: note:      Subclass:
infrastructure\repositories\trading_pair_repository.py:285:5: note:          domain.protocols.repository_protocol.RepositoryState
infrastructure\repositories\trading_pair_repository.py:286:16: error: Incompatible return value type (got "domain.types.repository_types.RepositoryState", expected "domain.protocols.repository_protocol.RepositoryState")  [return-value]
infrastructure\repositories\trading_pair_repository.py:288:29: error: Argument 1 of "find_by" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter]"  [override]
infrastructure\repositories\trading_pair_repository.py:288:29: note: This violates the Liskov substitution principle
infrastructure\repositories\trading_pair_repository.py:288:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\trading_pair_repository.py:298:33: error: Argument 1 of "find_one_by" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter]"  [override]
infrastructure\repositories\trading_pair_repository.py:298:33: note: This violates the Liskov substitution principle
infrastructure\repositories\trading_pair_repository.py:298:33: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\trading_pair_repository.py:302:5: error: Return type "Coroutine[Any, Any, PerformanceMetricsDict]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetrics]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:305:5: error: Return type "Coroutine[Any, Any, HealthCheckDict]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckResult]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:310:16: error: Unexpected keyword argument "total_entities" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:310:16: error: Unexpected keyword argument "cache_size" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:310:16: error: Unexpected keyword argument "uptime" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:310:16: error: Unexpected keyword argument "state" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:409:1: error: Definition of "_cache" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading_pair_repository.py:409:1: error: Definition of "_cache_ttl" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading_pair_repository.py:409:1: error: Definition of "find_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading_pair_repository.py:409:1: error: Definition of "find_one_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading_pair_repository.py:409:1: error: Definition of "state" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading_pair_repository.py:419:23: error: Incompatible types in assignment (expression has type "domain.protocols.repository_protocol.RepositoryState", variable has type "domain.types.repository_types.RepositoryState")  [assignment]
infrastructure\repositories\trading_pair_repository.py:494:24: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:496:31: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:536:27: error: Missing positional argument "entity_id" in call to "EntityNotFoundError"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:557:27: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
infrastructure\repositories\trading_pair_repository.py:557:27: note: This violates the Liskov substitution principle
infrastructure\repositories\trading_pair_repository.py:557:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\trading_pair_repository.py:580:5: error: Return type "AsyncIterator[TradingPair]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Any]]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:580:5: error: Return type "AsyncIterator[TradingPair]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Any]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\trading_pair_repository.py:601:24: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:603:31: error: "QueryOptions" has no attribute "sort"  [attr-defined]
infrastructure\repositories\trading_pair_repository.py:614:5: error: Return type "_AsyncGeneratorContextManager[Any, None]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\trading_pair_repository.py:621:55: error: Function "builtins.callable" is not valid as a type  [valid-type]
infrastructure\repositories\trading_pair_repository.py:621:55: note: Perhaps you meant "typing.Callable" instead of "callable"?
infrastructure\repositories\trading_pair_repository.py:626:30: error: callable? not callable  [misc]
infrastructure\repositories\trading_pair_repository.py:661:24: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:665:28: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:706:24: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:710:28: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:735:24: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:739:28: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:785:24: error: Unexpected keyword argument "total" for "BulkOperationResult"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:789:28: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:818:20: error: Unexpected keyword argument "total_entities" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:818:20: error: Unexpected keyword argument "cache_size" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:818:20: error: Unexpected keyword argument "uptime" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:818:20: error: Unexpected keyword argument "state" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:825:5: error: Return type "Coroutine[Any, Any, PerformanceMetricsDict]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetrics]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:834:16: error: Unexpected keyword argument "total_entities" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:834:16: error: Unexpected keyword argument "cache_size" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:834:16: error: Unexpected keyword argument "uptime" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:834:16: error: Unexpected keyword argument "state" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\trading_pair_repository.py:838:5: error: Return type "Coroutine[Any, Any, HealthCheckDict]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckResult]" in supertype "BaseRepository"  [override]
infrastructure\repositories\trading_pair_repository.py:847:27: error: Incompatible types in assignment (expression has type "domain.protocols.repository_protocol.RepositoryState", variable has type "domain.types.repository_types.RepositoryState")  [assignment]
infrastructure\repositories\trading_pair_repository.py:877:27: error: Argument "base_currency" to "TradingPair" has incompatible type "Currency | None"; expected "Currency"  [arg-type]
infrastructure\repositories\trading_pair_repository.py:878:28: error: Argument "quote_currency" to "TradingPair" has incompatible type "Currency | None"; expected "Currency"  [arg-type]
infrastructure\repositories\strategy_repository.py:51:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:52:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:53:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:54:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:55:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:55:44: error: Incompatible types in assignment (expression has type "dict[str, Strategy]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Strategy]")  [assignment]
infrastructure\repositories\strategy_repository.py:56:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:56:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
infrastructure\repositories\strategy_repository.py:175:5: error: Return type "_AsyncGeneratorContextManager[Any, None]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:216:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\strategy_repository.py:231:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\strategy_repository.py:248:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\strategy_repository.py:268:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\strategy_repository.py:273:5: error: Return type "AsyncIterator[Strategy]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Strategy]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:273:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\strategy_repository.py:273:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\strategy_repository.py:345:31: error: "type[StrategyStatus]" has no attribute "DELETED"  [attr-defined]
infrastructure\repositories\strategy_repository.py:353:44: error: "type[StrategyStatus]" has no attribute "DELETED"  [attr-defined]
infrastructure\repositories\strategy_repository.py:374:16: error: Extra keys ("total_entities", "cache_hit_rate", "avg_response_time_ms", "error_rate") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\strategy_repository.py:383:16: error: Extra keys ("uptime_seconds", "memory_usage_mb", "connection_status") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\strategy_repository.py:411:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_cache_stats" incompatible with return type "Coroutine[Any, Any, RepositoryResponse]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:492:5: error: Return type "Coroutine[Any, Any, bool]" of "save_strategy" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "StrategyRepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:543:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\strategy_repository.py:543:17: note: Left operand is of type "int | None"
infrastructure\repositories\strategy_repository.py:545:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\strategy_repository.py:545:13: note: Left operand is of type "int | None"
infrastructure\repositories\strategy_repository.py:662:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:672:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:672:5: note:      Superclass:
infrastructure\repositories\strategy_repository.py:672:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Strategy]]
infrastructure\repositories\strategy_repository.py:672:5: note:      Subclass:
infrastructure\repositories\strategy_repository.py:672:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\strategy_repository.py:966:24: error: Argument "parameters" to "Strategy" has incompatible type "Any | dict[Any, Any]"; expected "StrategyParameters"  [arg-type]
infrastructure\repositories\risk_repository.py:14:1: error: Module "domain.exceptions.protocol_exceptions" has no attribute "RepositoryError"  [attr-defined]
infrastructure\repositories\risk_repository.py:95:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\repositories\risk_repository.py:97:9: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\repositories\risk_repository.py:268:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:285:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:302:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:322:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:372:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\risk_repository.py:384:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:391:20: error: Unsupported left operand type for + ("object")  [operator]
infrastructure\repositories\risk_repository.py:392:21: error: Unsupported left operand type for + ("object")  [operator]
infrastructure\repositories\risk_repository.py:395:33: error: Unsupported left operand type for + ("object")  [operator]
infrastructure\repositories\risk_repository.py:396:29: error: "object" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\risk_repository.py:401:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\risk_repository.py:413:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:605:44: error: Argument 1 to "get_risk_profile" of "PostgresRiskRepository" has incompatible type "UUID | str"; expected "RiskProfileId"  [arg-type]
infrastructure\repositories\risk_repository.py:879:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:902:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:925:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:951:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\risk_repository.py:999:16: error: Extra keys ("total_entities", "cache_hit_rate", "avg_response_time_ms", "error_rate") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\risk_repository.py:1042:20: error: Extra keys ("uptime_seconds", "memory_usage_mb", "connection_status") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\portfolio_repository.py:200:5: error: Return type "AsyncIterator[Portfolio]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Portfolio]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:200:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\portfolio_repository.py:200:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\portfolio_repository.py:250:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\portfolio_repository.py:267:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\portfolio_repository.py:286:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\portfolio_repository.py:308:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\portfolio_repository.py:376:16: error: Extra keys ("uptime_seconds", "memory_usage_mb", "connection_status") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\portfolio_repository.py:1068:20: error: Extra keys ("database", "cache") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\portfolio_repository.py:1074:20: error: Extra keys ("error", "database", "cache") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\ml_repository.py:41:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:42:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:43:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:44:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:45:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:46:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:47:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:48:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:49:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:68:33: error: Invalid index type "ModelType" for "dict[str, list[UUID]]"; expected type "str"  [index]
infrastructure\repositories\ml_repository.py:75:19: error: Missing positional argument "entity_id" in call to "EntityUpdateError"  [call-arg]
infrastructure\repositories\ml_repository.py:208:5: error: Return type "AsyncIterator[Model]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Model]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:208:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\ml_repository.py:208:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\ml_repository.py:215:5: error: Return type "AsyncIterator[TransactionProtocol]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:215:5: note: Consider declaring "transaction" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\ml_repository.py:215:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\ml_repository.py:232:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aenter__"; maybe "__aiter__"?  [attr-defined]
infrastructure\repositories\ml_repository.py:232:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aexit__"; maybe "__anext__" or "__aiter__"?  [attr-defined]
infrastructure\repositories\ml_repository.py:247:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\ml_repository.py:264:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\ml_repository.py:283:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\ml_repository.py:347:16: error: Extra key "total_models" for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\ml_repository.py:355:16: error: Extra key "state" for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\ml_repository.py:489:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\ml_repository.py:489:17: note: Left operand is of type "int | None"
infrastructure\repositories\ml_repository.py:491:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\ml_repository.py:491:13: note: Left operand is of type "int | None"
infrastructure\repositories\market_repository.py:158:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\market_repository.py:234:5: error: Return type "AsyncIterator[MarketData]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[MarketData]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:234:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\market_repository.py:234:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\market_repository.py:243:5: error: Return type "AsyncIterator[TransactionProtocol]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:243:5: note: Consider declaring "transaction" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\market_repository.py:243:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\market_repository.py:260:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aenter__"; maybe "__aiter__"?  [attr-defined]
infrastructure\repositories\market_repository.py:260:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aexit__"; maybe "__anext__" or "__aiter__"?  [attr-defined]
infrastructure\repositories\market_repository.py:274:84: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[UUID | str]"  [arg-type]
infrastructure\repositories\market_repository.py:274:84: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
infrastructure\repositories\market_repository.py:274:84: note: Consider using "Sequence" instead, which is covariant
infrastructure\repositories\market_repository.py:341:28: error: Incompatible types in assignment (expression has type "list[MarketData]", target has type "MarketData")  [assignment]
infrastructure\repositories\market_repository.py:374:16: error: Extra keys ("cache_hits", "cache_misses") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\market_repository.py:388:16: error: Extra key "state" for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\market_repository.py:727:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:745:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:780:5: error: Return type "AsyncIterator[MarketData]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[MarketData]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:780:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\market_repository.py:780:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\market_repository.py:805:20: error: Incompatible return value type (got "None", expected "MarketData")  [return-value]
infrastructure\repositories\base_repository.py:35:1: error: Name "HealthCheckDict" already defined (possibly by an import)  [no-redef]
infrastructure\repositories\base_repository.py:118:48: error: Incompatible types in assignment (expression has type "CacheProtocol | None", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Any]")  [assignment]
infrastructure\repositories\base_repository.py:218:23: error: Unexpected keyword argument "ttl" for "set" of "CacheProtocol"  [call-arg]
infrastructure\shared\cache.py:120:5: note: "set" of "CacheProtocol" defined here
infrastructure\repositories\base_repository.py:376:38: error: Argument 1 to "append" of "list" has incompatible type "Any | int"; expected "UUID | str"  [arg-type]
infrastructure\repositories\base_repository.py:404:38: error: Argument 1 to "append" of "list" has incompatible type "Any | int"; expected "UUID | str"  [arg-type]
infrastructure\repositories\base_repository.py:454:5: error: Return type "AsyncIterator[TransactionProtocol]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\base_repository.py:454:5: note: Consider declaring "transaction" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\base_repository.py:454:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\base_repository.py:469:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aenter__"; maybe "__aiter__"?  [attr-defined]
infrastructure\repositories\base_repository.py:469:20: error: "AsyncIterator[TransactionProtocol]" has no attribute "__aexit__"; maybe "__anext__" or "__aiter__"?  [attr-defined]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "_cache" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "_cache_ttl" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "count" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "find_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "find_one_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "get_by_id" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "get_performance_metrics" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "health_check" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "state" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:29:1: error: Definition of "transaction" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:35:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:36:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:37:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:38:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "_cache" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "_cache_ttl" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "count" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "find_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "find_one_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "get_by_id" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "get_performance_metrics" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "health_check" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "state" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:362:1: error: Definition of "transaction" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:371:25: error: Extra keys ("queries_executed", "cache_hits", "cache_misses", "errors", "last_health_check") for TypedDict "RepositoryMetrics"  [typeddict-unknown-key]
infrastructure\repositories\trading\trading_repository.py:466:35: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:468:31: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:681:35: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:683:31: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:910:26: error: Argument "portfolio_id" to "Order" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:911:25: error: Argument "strategy_id" to "Order" has incompatible type "UUID"; expected "StrategyId"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:912:23: error: Argument "signal_id" to "Order" has incompatible type "UUID | None"; expected "SignalId | None"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:915:26: error: Argument "trading_pair" to "Order" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:919:22: error: Argument "quantity" to "Order" has incompatible type "Decimal"; expected "VolumeValue"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:928:29: error: Argument "filled_quantity" to "Order" has incompatible type "Decimal"; expected "VolumeValue"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:953:26: error: Argument "portfolio_id" to "Position" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:955:18: error: Name "PositionSide" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1007:47: error: TypedDict "RepositoryMetrics" has no key "queries_executed"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1008:41: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1009:43: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1010:37: error: TypedDict "RepositoryMetrics" has no key "errors"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1011:48: error: TypedDict "RepositoryMetrics" has no key "last_health_check"  [typeddict-item]
infrastructure\ml_services\evolvable_decision_reasoner.py:69:48: error: Incompatible types in assignment (expression has type "EvolvableDecisionConfig", base class "DecisionReasoner" defined the type as "dict[str, Any]")  [assignment]
infrastructure\ml_services\evolvable_decision_reasoner.py:79:55: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", base class "DecisionReasoner" defined the type as "list[AggregatedSignal]")  [assignment]
infrastructure\ml_services\evolvable_decision_reasoner.py:84:5: error: Missing return statement  [return]
infrastructure\ml_services\evolvable_decision_reasoner.py:113:5: error: Missing return statement  [return]
infrastructure\ml_services\evolvable_decision_reasoner.py:376:17: error: Property "confidence" defined in "AggregatedSignal" is read-only  [misc]
infrastructure\core\evolvable_components.py:91:13: error: "EvolvableStrategy" has no attribute "adaptation_count"; maybe "adaptation_rate"?  [attr-defined]
infrastructure\core\evolvable_components.py:148:20: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:163:31: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:223:58: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:248:28: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:278:50: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:292:28: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:306:36: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:317:32: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:322:40: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:330:42: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:337:56: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:354:29: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:362:23: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:390:20: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:397:24: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:398:36: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:429:9: error: Need type annotation for "feature_importance" (hint: "feature_importance: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\core\evolvable_components.py:430:9: error: Need type annotation for "prediction_history" (hint: "prediction_history: list[<type>] = ...")  [var-annotated]
infrastructure\core\evolvable_components.py:442:13: error: "EvolvablePredictor" has no attribute "adaptation_count"  [attr-defined]
infrastructure\core\evolvable_components.py:488:24: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:502:20: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:548:50: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:560:44: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:569:13: error: "None" has no attribute "fit"  [attr-defined]
infrastructure\core\evolvable_components.py:574:52: error: "None" has no attribute "feature_importances_"  [attr-defined]
infrastructure\core\evolvable_components.py:579:45: error: Name "np" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:587:24: error: Name "RandomForestRegressor" is not defined  [name-defined]
infrastructure\core\evolvable_components.py:592:13: error: "None" has no attribute "fit"  [attr-defined]
infrastructure\agents\evolvable_strategy_agent.py:20:18: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:50:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:57:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_strategy_agent.py:71:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_strategy_agent.py:99:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_strategy_agent.py:217:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:268:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:297:41: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:306:34: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:385:22: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_strategy_agent.py:396:35: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:22:14: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:52:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:59:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_risk_agent.py:65:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_risk_agent.py:89:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_risk_agent.py:212:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:240:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:246:45: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:267:28: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:268:28: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:270:26: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:271:27: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:275:30: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:276:61: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:278:60: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:305:57: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:394:41: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:399:28: error: "RiskAgent" has no attribute "process"  [attr-defined]
infrastructure\agents\evolvable_risk_agent.py:417:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_risk_agent.py:417:60: error: Incompatible default for argument "positions" (default has type "None", argument has type "dict[Any, Any]")  [assignment]
infrastructure\agents\evolvable_risk_agent.py:417:60: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\agents\evolvable_risk_agent.py:417:60: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\agents\evolvable_news_agent.py:22:14: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:46:27: error: Cannot instantiate abstract class "NewsAgent" with abstract attributes "analyze_sentiment", "get_relevant_news" and "process_news"  [abstract]
infrastructure\agents\evolvable_news_agent.py:50:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:57:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_news_agent.py:63:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_news_agent.py:70:37: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:75:25: error: Unsupported target for indexed assignment ("NewsConfig")  [index]
infrastructure\agents\evolvable_news_agent.py:78:25: error: Unsupported target for indexed assignment ("NewsConfig")  [index]
infrastructure\agents\evolvable_news_agent.py:89:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_news_agent.py:210:60: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:225:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:226:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:227:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:228:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:229:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:230:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:262:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:269:60: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:277:39: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:278:36: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:280:39: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:295:57: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:378:31: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_news_agent.py:383:28: error: "NewsAgent" has no attribute "process"  [attr-defined]
infrastructure\agents\evolvable_news_agent.py:401:60: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:22:22: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:52:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:59:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_market_regime_corrupted.py:65:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_regime_corrupted.py:77:50: error: TypedDict "AgentConfig" has no key "volatility_threshold"  [typeddict-unknown-key]
infrastructure\agents\evolvable_market_regime_corrupted.py:80:50: error: TypedDict "AgentConfig" has no key "trend_threshold"  [typeddict-unknown-key]
infrastructure\agents\evolvable_market_regime_corrupted.py:80:50: note: Did you mean "risk_threshold"?
infrastructure\agents\evolvable_market_regime_corrupted.py:91:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_regime_corrupted.py:207:46: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:254:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:270:57: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:280:32: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:349:41: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:358:13: error: Unsupported target for indexed assignment ("ProcessingResult")  [index]
infrastructure\agents\evolvable_market_regime_corrupted.py:366:20: error: Incompatible return value type (got "ProcessingResult", expected "dict[str, Any]")  [return-value]
infrastructure\agents\evolvable_market_regime_corrupted.py:371:49: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime_corrupted.py:379:38: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:22:22: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:52:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:59:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_market_regime.py:65:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_regime.py:77:50: error: TypedDict "AgentConfig" has no key "volatility_threshold"  [typeddict-unknown-key]
infrastructure\agents\evolvable_market_regime.py:80:50: error: TypedDict "AgentConfig" has no key "trend_threshold"  [typeddict-unknown-key]
infrastructure\agents\evolvable_market_regime.py:80:50: note: Did you mean "risk_threshold"?
infrastructure\agents\evolvable_market_regime.py:91:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_regime.py:207:46: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:254:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:270:57: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:280:32: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:349:41: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:358:13: error: Unsupported target for indexed assignment ("ProcessingResult")  [index]
infrastructure\agents\evolvable_market_regime.py:366:20: error: Incompatible return value type (got "ProcessingResult", expected "dict[str, Any]")  [return-value]
infrastructure\agents\evolvable_market_regime.py:371:49: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_regime.py:379:38: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:22:21: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:27:20: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:28:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:29:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:30:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:31:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:32:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:33:13: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:50:26: error: Name "nn" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:57:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\agents\evolvable_market_maker.py:63:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_maker.py:87:5: error: Missing return statement  [return]
infrastructure\agents\evolvable_market_maker.py:210:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:240:34: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:246:45: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:253:25: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:268:57: error: Name "np" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:348:41: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:353:28: error: "MarketMakerModelAgent" has no attribute "process"  [attr-defined]
infrastructure\agents\evolvable_market_maker.py:371:28: error: Name "pd" is not defined  [name-defined]
infrastructure\agents\evolvable_market_maker.py:371:61: error: Incompatible default for argument "order_book" (default has type "None", argument has type "dict[Any, Any]")  [assignment]
infrastructure\agents\evolvable_market_maker.py:371:61: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\agents\evolvable_market_maker.py:371:61: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\agents\whales\agent.py:25:41: error: Argument 2 to "__init__" of "BaseAgent" has incompatible type "dict[str, Any] | None"; expected "Literal['market_maker', 'whale_analyzer', 'risk_manager', 'portfolio_optimizer', 'order_executor', 'news_analyzer', 'market_regime', 'strategy_agent', 'meta_controller', 'evolutionary_agent', 'social_media', 'entanglement_detector']"  [arg-type]
infrastructure\agents\whales\agent.py:26:9: error: Property "config" defined in "BaseAgent" is read-only  [misc]
infrastructure\agents\whales\agent.py:26:23: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "AgentConfig")  [assignment]
infrastructure\agents\whales\agent.py:36:55: error: TypedDict "AgentConfig" has no key "enable_ml_model"  [typeddict-item]
infrastructure\agents\whales\agent.py:38:33: error: Argument 1 to "WhaleSignalAnalyzer" has incompatible type "AgentConfig"; expected "dict[str, Any]"  [arg-type]
infrastructure\agents\whales\agent.py:39:28: error: TypedDict "AgentConfig" has no key "enable_signal_analysis"  [typeddict-item]
infrastructure\agents\whales\agent.py:43:49: error: TypedDict "AgentConfig" has no key "enable_caching"  [typeddict-item]
infrastructure\agents\whales\agent.py:43:49: note: Did you mean "enable_learning"?
infrastructure\agents\whales\agent.py:47:37: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:48:41: error: Name "WhaleAnalysis" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:65:13: error: Property "status" defined in "AgentState" is read-only  [misc]
infrastructure\agents\whales\agent.py:74:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "process" incompatible with return type "Coroutine[Any, Any, ProcessingResult]" in supertype "BaseAgent"  [override]
infrastructure\agents\whales\agent.py:103:61: error: TypedDict "AgentConfig" has no key "impact_threshold"  [typeddict-item]
infrastructure\agents\whales\agent.py:142:37: error: TypedDict key must be a string literal; expected one of ("name", "agent_type", "max_position_size", "max_portfolio_risk", "max_risk_per_trade", ...)  [literal-required]
infrastructure\agents\whales\agent.py:153:15: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:160:33: error: Argument 2 to "analyze_order_book" of "WhaleSignalAnalyzer" has incompatible type "AgentConfig"; expected "dict[str, Any]"  [arg-type]
infrastructure\agents\whales\agent.py:192:45: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:193:19: error: Name "WhaleAnalysis" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:224:55: error: TypedDict "AgentConfig" has no key "min_whale_size"  [typeddict-item]
infrastructure\agents\whales\agent.py:227:24: error: Name "WhaleAnalysis" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:251:19: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:270:24: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:291:19: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:307:24: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:331:19: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\whales\agent.py:347:24: error: Name "WhaleActivity" is not defined  [name-defined]
infrastructure\agents\news\agent_news.py:30:5: error: Name "NewsAgentObserver" already defined (possibly by an import)  [no-redef]
infrastructure\agents\news\agent_news.py:62:20: error: Argument "config" to "__init__" of "BaseAgent" has incompatible type "dict[str, Any]"; expected "AgentConfig | None"  [arg-type]
infrastructure\agents\news\agent_news.py:126:43: error: Name "ProcessingResult" is not defined  [name-defined]
infrastructure\agents\news\agent_news.py:212:37: error: TypedDict key must be a string literal; expected one of ("name", "agent_type", "max_position_size", "max_portfolio_risk", "max_risk_per_trade", ...)  [literal-required]
infrastructure\agents\news\agent_news.py:253:40: error: Missing positional argument "social_media_agent" in call to "SocialMediaNewsProvider"  [call-arg]
infrastructure\agents\news\agent_news.py:362:55: error: Unsupported operand types for > ("float" and "object")  [operator]
examples\neural_noise_analysis_example.py:58:19: error: "type[Timestamp]" has no attribute "from_timestamp"  [attr-defined]
examples\neural_noise_analysis_example.py:91:19: error: "type[Timestamp]" has no attribute "from_timestamp"  [attr-defined]
examples\market_memory_example.py:19:1: error: Module "infrastructure.agents.market_memory_integration" has no attribute "MarketMemoryConfig"  [attr-defined]
examples\market_memory_example.py:19:1: error: Module "infrastructure.agents.market_memory_integration" has no attribute "MarketMemoryIntegration"  [attr-defined]
examples\market_memory_example.py:174:27: error: Argument "timestamp" to "PatternSnapshot" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
examples\market_memory_example.py:196:27: error: Argument "timestamp" to "PatternOutcome" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
examples\market_memory_example.py:384:21: error: Module has no attribute "date_range"  [attr-defined]
domain\strategies\strategy_registry.py:48:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\strategies\strategy_registry.py:95:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:96:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:97:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:98:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:99:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:100:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:101:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:157:29: error: Argument "performance" to "StrategyMetadata" has incompatible type "domain.entities.strategy_performance.StrategyPerformance"; expected "domain.types.evolution_types.StrategyPerformance"  [arg-type]
domain\strategies\strategy_adapter.py:55:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_adapter.py:56:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_adapter.py:57:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_adapter.py:190:9: error: Incompatible types in assignment (expression has type "InfrastructureStrategyProtocol", variable has type "StrategyInterface")  [assignment]
domain\repositories\trading_repository.py:177:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\trading_repository.py:178:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\trading_repository.py:179:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:82:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:83:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:86:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\ml_repository.py:61:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\ml_repository.py:62:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\market_repository.py:62:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\market_repository.py:63:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\integration.py:21:1: error: Module "domain.protocols.exchange_protocol" has no attribute "ConnectionManager"  [attr-defined]
domain\protocols\integration.py:79:16: error: Unexpected keyword argument "bid_price" for "MarketData"  [call-arg]
domain\protocols\integration.py:79:16: error: Unexpected keyword argument "ask_price" for "MarketData"  [call-arg]
domain\protocols\integration.py:79:16: error: Unexpected keyword argument "last_price" for "MarketData"  [call-arg]
domain\protocols\integration.py:80:20: error: Argument "symbol" to "MarketData" has incompatible type "str"; expected "Symbol"  [arg-type]
domain\protocols\integration.py:84:20: error: Argument "volume" to "MarketData" has incompatible type "float"; expected "Volume"  [arg-type]
domain\protocols\integration.py:85:23: error: Argument "timestamp" to "MarketData" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
domain\protocols\integration.py:88:34: error: Argument 1 of "create_order" is incompatible with supertype "ExchangeProtocol"; supertype defines the argument type as "Order"  [override]
domain\protocols\integration.py:88:34: note: This violates the Liskov substitution principle
domain\protocols\integration.py:88:34: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:114:20: error: Argument "id" to "Order" has incompatible type "str"; expected "OrderId"  [arg-type]
domain\protocols\integration.py:131:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "train_model" incompatible with return type "Coroutine[Any, Any, Model]" in supertype "MLProtocol"  [override]
domain\protocols\integration.py:131:33: error: Argument 1 of "train_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
domain\protocols\integration.py:131:33: note: This violates the Liskov substitution principle
domain\protocols\integration.py:131:33: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:131:68: error: Argument 3 of "train_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "TrainingConfig"  [override]
domain\protocols\integration.py:145:5: error: Return type "Coroutine[Any, Any, dict[str, Any] | None]" of "predict" incompatible with return type "Coroutine[Any, Any, Prediction | None]" in supertype "MLProtocol"  [override]
domain\protocols\integration.py:145:29: error: Argument 1 of "predict" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
domain\protocols\integration.py:145:29: note: This violates the Liskov substitution principle
domain\protocols\integration.py:145:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:145:70: error: Argument 3 of "predict" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "PredictionConfig | None"  [override]
domain\protocols\integration.py:171:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "analyze_market" incompatible with return type "Coroutine[Any, Any, MarketAnalysisResult]" in supertype "StrategyProtocol"  [override]
domain\protocols\integration.py:171:54: error: Argument 2 of "analyze_market" is incompatible with supertype "StrategyProtocol"; supertype defines the argument type as "StrategyType"  [override]
domain\protocols\integration.py:171:54: note: This violates the Liskov substitution principle
domain\protocols\integration.py:171:54: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\integration.py:211:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\integration.py:234:28: error: Argument 1 of "delete" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
domain\protocols\integration.py:234:28: note: This violates the Liskov substitution principle
domain\protocols\integration.py:234:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\protocols\examples.py:149:25: error: "TradingPair" has no attribute "symbol"  [attr-defined]
domain\protocols\examples.py:165:29: error: "VolumeValue" has no attribute "value"  [attr-defined]
domain\protocols\examples.py:272:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\examples.py:273:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\trading_service.py:293:22: error: Argument "side" to "Trade" has incompatible type "domain.entities.order.OrderSide"; expected "domain.entities.trading.OrderSide"  [arg-type]
application\services\trading_service.py:480:22: error: Argument "side" to "Trade" has incompatible type "domain.entities.order.OrderSide"; expected "domain.entities.trading.OrderSide"  [arg-type]
application\services\risk_service.py:128:34: error: Need type annotation for "existing_positions"  [var-annotated]
application\services\risk_service.py:163:34: error: Need type annotation for "existing_positions"  [var-annotated]
application\services\risk_service.py:195:34: error: Need type annotation for "existing_positions"  [var-annotated]
application\services\risk_service.py:221:34: error: Need type annotation for "existing_positions"  [var-annotated]
application\services\risk_service.py:249:34: error: Need type annotation for "existing_positions"  [var-annotated]
application\services\risk_service.py:285:30: error: Argument "trading_pair" to "Order" has incompatible type "Symbol"; expected "TradingPair"  [arg-type]
application\services\risk_service.py:302:35: error: "<typing special form>" has no attribute "CLOSED"  [attr-defined]
application\evolution\evolution_orchestrator.py:61:59: error: Missing positional argument "storage" in call to "EvolutionMigration"  [call-arg]
application\evolution\evolution_orchestrator.py:128:52: error: No overload variant of "int" matches argument type "object"  [call-overload]
application\evolution\evolution_orchestrator.py:128:52: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:128:52: note:     def int(str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc = ..., /) -> int
application\evolution\evolution_orchestrator.py:128:52: note:     def int(str | bytes | bytearray, /, base: SupportsIndex) -> int
application\evolution\evolution_orchestrator.py:142:21: error: Unsupported target for indexed assignment ("DataFrame")  [index]
application\evolution\evolution_orchestrator.py:149:25: error: Module has no attribute "concat"  [attr-defined]
application\evolution\evolution_orchestrator.py:185:41: error: "type[EvolutionStatus]" has no attribute "ERROR"  [attr-defined]
application\evolution\evolution_orchestrator.py:187:52: error: No overload variant of "int" matches argument type "object"  [call-overload]
application\evolution\evolution_orchestrator.py:187:52: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:187:52: note:     def int(str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc = ..., /) -> int
application\evolution\evolution_orchestrator.py:187:52: note:     def int(str | bytes | bytearray, /, base: SupportsIndex) -> int
application\evolution\evolution_orchestrator.py:242:9: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:249:43: error: No overload variant of "int" matches argument type "object"  [call-overload]
application\evolution\evolution_orchestrator.py:249:43: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:249:43: note:     def int(str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc = ..., /) -> int
application\evolution\evolution_orchestrator.py:249:43: note:     def int(str | bytes | bytearray, /, base: SupportsIndex) -> int
application\evolution\evolution_orchestrator.py:301:9: error: No return value expected  [return-value]
application\evolution\evolution_orchestrator.py:311:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:335:28: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]
application\evolution\evolution_orchestrator.py:336:25: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]
application\evolution\evolution_orchestrator.py:337:29: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]
application\evolution\evolution_orchestrator.py:338:28: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]
application\evolution\evolution_orchestrator.py:355:17: error: Incompatible types in "await" (actual type "None", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:368:31: error: "object" has no attribute "isoformat"  [attr-defined]
application\evolution\evolution_orchestrator.py:371:21: error: No overload variant of "__sub__" of "datetime" matches argument type "object"  [operator]
application\evolution\evolution_orchestrator.py:371:21: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:371:21: note:     def __sub__(self, datetime, /) -> timedelta
application\evolution\evolution_orchestrator.py:371:21: note:     def __sub__(self, timedelta, /) -> datetime
application\evolution\evolution_orchestrator.py:467:19: error: "StrategyStorage" has no attribute "save_candidate"; maybe "save_strategy_candidate"?  [attr-defined]
application\evolution\evolution_orchestrator.py:477:32: error: "StrategyStorage" has no attribute "get_all_candidates"; maybe "get_strategy_candidates"?  [attr-defined]
application\evolution\evolution_orchestrator.py:489:19: error: "set_evaluation" of "EvolutionCache" does not return a value (it only ever returns None)  [func-returns-value]
application\evolution\evolution_orchestrator.py:500:20: error: Incompatible types in "await" (actual type "Any | None", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:518:13: error: Incompatible types in "await" (actual type "BackupMetadata", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:518:55: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, object]"; expected "str | Path | None"  [arg-type]
application\evolution\evolution_orchestrator.py:528:27: error: Incompatible types in "await" (actual type "bool", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:553:19: error: "EvolutionMigration" has no attribute "run_migration"  [attr-defined]
application\evolution\evolution_orchestrator.py:563:27: error: Incompatible types in "await" (actual type "dict[str, Any]", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:564:29: error: Incompatible types in "await" (actual type "StorageStatistics", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:565:34: error: "EvolutionBackup" has no attribute "get_statistics"  [attr-defined]
tests\test_ddd_architecture.py:15:1: error: Module "domain.entities.risk" has no attribute "RiskLimit"  [attr-defined]
tests\test_ddd_architecture.py:20:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\unit\test_repositories.py:8:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "IntegrationProtocol"; maybe "IntegrationTestMLProtocol", "IntegrationTestExchangeProtocol", or "IntegrationTestStrategyProtocol"?  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "ProtocolOrchestrator"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "ServiceCoordinator"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "EventBus"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "MessageQueue"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "IntegrationConfig"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "OrchestrationResult"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "CoordinationResult"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "EventData"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "MessageData"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "IntegrationError"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "OrchestrationError"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "CoordinationError"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "EventBusError"  [attr-defined]
tests\unit\test_protocols_integration.py:9:1: error: Module "domain.protocols.integration" has no attribute "MessageQueueError"  [attr-defined]
tests\unit\test_evolution_agents_unit.py:10:1: error: Module "infrastructure.agents.evolvable_portfolio_agent" has no attribute "PortfolioML"  [attr-defined]
tests\unit\test_evolution_agents_unit.py:14:1: error: Module "infrastructure.agents.evolvable_order_executor" has no attribute "OrderExecutionML"  [attr-defined]
tests\unit\test_evolution_agents_unit.py:15:1: error: Module "infrastructure.agents.evolvable_meta_controller" has no attribute "MetaControllerML"  [attr-defined]
tests\unit\application_tests\test_evolution.py:64:24: error: "EvolutionOrchestrator" has no attribute "run_evolution_cycle"; maybe "evolution_cache"?  [attr-defined]
tests\unit\application_tests\test_evolution.py:85:38: error: "EvolutionOrchestrator" has no attribute "evaluate_population"; maybe "_evaluate_population"?  [attr-defined]
tests\unit\application_tests\test_evolution.py:97:19: error: "EvolutionOrchestrator" has no attribute "_select_parents"  [attr-defined]
tests\unit\application_tests\test_evolution.py:111:21: error: "EvolutionOrchestrator" has no attribute "_crossover_strategies"  [attr-defined]
tests\unit\application_tests\test_evolution.py:115:43: error: Unsupported operand types for + ("object" and "int")  [operator]
tests\unit\application_tests\test_evolution.py:117:27: error: "object" has no attribute "__iter__"; maybe "__dir__" or "__str__"? (not iterable)  [attr-defined]
tests\unit\application_tests\test_evolution.py:128:28: error: "EvolutionOrchestrator" has no attribute "_mutate_strategy"  [attr-defined]
tests\unit\application_tests\test_evolution.py:145:25: error: "EvolutionOrchestrator" has no attribute "_calculate_fitness_score"  [attr-defined]
tests\unit\application_tests\test_evolution.py:151:18: error: "EvolutionOrchestrator" has no attribute "_tournament_selection"  [attr-defined]
tests\unit\application_tests\test_evolution.py:161:32: error: "EvolutionOrchestrator" has no attribute "_create_new_generation"; maybe "_create_next_generation"?  [attr-defined]
tests\unit\application_tests\test_evolution.py:175:16: error: "EvolutionOrchestrator" has no attribute "_validate_strategy_parameters"  [attr-defined]
tests\unit\application_tests\test_evolution.py:178:16: error: "EvolutionOrchestrator" has no attribute "_validate_strategy_parameters"  [attr-defined]
tests\unit\application_tests\test_evolution.py:180:9: error: Need type annotation for "empty_parameters" (hint: "empty_parameters: dict[<type>, <type>] = ...")  [var-annotated]
tests\unit\application_tests\test_evolution.py:181:16: error: "EvolutionOrchestrator" has no attribute "_validate_strategy_parameters"  [attr-defined]
tests\unit\application_tests\test_evolution.py:187:23: error: "EvolutionOrchestrator" has no attribute "get_evolution_statistics"; maybe "get_selection_statistics", "get_evolution_metrics", or "get_evolution_history"?  [attr-defined]
tests\unit\application_tests\test_evolution.py:198:21: error: "EvolutionOrchestrator" has no attribute "_calculate_population_diversity"  [attr-defined]
tests\unit\application_tests\test_evolution.py:207:24: error: "EvolutionOrchestrator" has no attribute "_save_generation"; maybe "run_single_generation"?  [attr-defined]
tests\unit\application_tests\test_evolution.py:213:17: error: "EvolutionOrchestrator" has no attribute "_elite_selection"  [attr-defined]
tests\performance\test_benchmarks.py:8:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\performance\test_benchmarks.py:19:1: error: Module "infrastructure.messaging.optimized_event_bus" has no attribute "OptimizedEventBus"  [attr-defined]
tests\performance\test_benchmarks.py:33:42: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Currency"  [arg-type]
tests\performance\test_benchmarks.py:33:49: error: Argument 2 to "TradingPair" has incompatible type "str"; expected "Currency"  [arg-type]
tests\performance\test_benchmarks.py:37:23: error: Missing positional argument "currency" in call to "Price"  [call-arg]
tests\performance\test_benchmarks.py:37:29: error: Argument 1 to "Price" has incompatible type "int"; expected "Decimal"  [arg-type]
tests\performance\test_benchmarks.py:209:21: error: Unexpected keyword argument "volume" for "Trade"  [call-arg]
tests\performance\test_benchmarks.py:209:21: error: Unexpected keyword argument "executed_at" for "Trade"  [call-arg]
tests\performance\test_benchmarks.py:210:20: error: Argument "id" to "Trade" has incompatible type "str"; expected "TradeId"  [arg-type]
tests\performance\test_benchmarks.py:211:26: error: Argument "order_id" to "Trade" has incompatible type "str"; expected "OrderId"  [arg-type]
tests\performance\test_benchmarks.py:212:30: error: Argument "trading_pair" to "Trade" has incompatible type "domain.value_objects.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
tests\performance\test_benchmarks.py:212:42: error: Argument 1 to "TradingPair" has incompatible type "str"; expected "Currency"  [arg-type]
tests\performance\test_benchmarks.py:212:49: error: Argument 2 to "TradingPair" has incompatible type "str"; expected "Currency"  [arg-type]
tests\performance\test_benchmarks.py:213:22: error: Argument "side" to "Trade" has incompatible type "str"; expected "OrderSide"  [arg-type]
tests\performance\test_benchmarks.py:215:23: error: Missing positional argument "currency" in call to "Price"  [call-arg]
tests\performance\test_benchmarks.py:215:29: error: Argument 1 to "Price" has incompatible type "int"; expected "Decimal"  [arg-type]
tests\performance\test_benchmarks.py:226:20: error: Argument "id" to "Strategy" has incompatible type "str"; expected "UUID"  [arg-type]
tests\performance\test_benchmarks.py:230:28: error: Argument "parameters" to "Strategy" has incompatible type "dict[str, str]"; expected "StrategyParameters"  [arg-type]
tests\performance\test_benchmarks.py:231:28: error: Argument "created_at" to "Strategy" has incompatible type "Timestamp"; expected "datetime"  [arg-type]
tests\domain\protocols\test_protocols.py:10:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "ExchangeProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "MLProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "RepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "TradingRepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "PortfolioRepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "StrategyRepositoryProtocol"; maybe "StrategyProtocol"?  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "MarketRepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "RiskRepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:15:1: error: Module "domain.protocols" has no attribute "MLRepositoryProtocol"  [attr-defined]
tests\domain\protocols\test_protocols.py:77:29: error: Name "List" is not defined  [name-defined]
tests\domain\protocols\test_protocols.py:77:29: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
tests\domain\protocols\test_protocols.py:82:23: error: Argument "timestamp" to "MarketData" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
tests\domain\protocols\test_protocols.py:83:18: error: Argument "open" to "MarketData" has incompatible type "Decimal"; expected "Price"  [arg-type]
tests\domain\protocols\test_protocols.py:84:18: error: Argument "high" to "MarketData" has incompatible type "Decimal"; expected "Price"  [arg-type]
tests\domain\protocols\test_protocols.py:85:17: error: Argument "low" to "MarketData" has incompatible type "Decimal"; expected "Price"  [arg-type]
tests\domain\protocols\test_protocols.py:86:19: error: Argument "close" to "MarketData" has incompatible type "Decimal"; expected "Price"  [arg-type]
tests\domain\protocols\test_protocols.py:87:20: error: Argument "volume" to "MarketData" has incompatible type "Decimal"; expected "Volume"  [arg-type]
tests\domain\protocols\test_protocols.py:362:16: error: Cannot use isinstance() with NewType type  [misc]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:59:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:59:29: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:98:27: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:119:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:119:37: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:155:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:158:9: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:179:36: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:219:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:243:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:260:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:272:15: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:299:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:317:21: error: Name "pd" is not defined  [name-defined]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:354:43: error: Name "pd" is not defined  [name-defined]
infrastructure\repositories\position_repository.py:48:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:49:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:50:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:51:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:52:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:53:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:53:39: error: Incompatible types in assignment (expression has type "dict[str, Any]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Any]")  [assignment]
infrastructure\repositories\position_repository.py:54:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:54:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
infrastructure\repositories\position_repository.py:70:5: error: Return type "Coroutine[Any, Any, Position]" of "save" incompatible with return type "Coroutine[Any, Any, bool]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:70:26: error: Argument 1 of "save" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "Position"  [override]
infrastructure\repositories\position_repository.py:70:26: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:70:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:75:9: error: "InMemoryPositionRepository" has no attribute "_update_position_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:78:9: error: "InMemoryPositionRepository" has no attribute "_update_position_metrics"  [attr-defined]
infrastructure\repositories\position_repository.py:83:5: error: Return type "Coroutine[Any, Any, domain.entities.position.Position | None]" of "get_by_id" incompatible with return type "Coroutine[Any, Any, domain.entities.trading.Position | None]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:102:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_by_trading_pair" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:103:15: error: Argument 1 of "get_by_trading_pair" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair"  [override]
infrastructure\repositories\position_repository.py:103:15: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:103:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:120:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_open_positions" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:121:15: error: Argument 1 of "get_open_positions" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:121:15: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:121:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:137:19: error: "InMemoryPositionRepository" has no attribute "_analyze_position_risk"  [attr-defined]
infrastructure\repositories\position_repository.py:141:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_closed_positions" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:143:9: error: Argument 1 of "get_closed_positions" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:143:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:143:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:156:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:158:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:161:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_positions_by_side" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:163:9: error: Argument 1 of "get_positions_by_side" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "PositionSide"  [override]
infrastructure\repositories\position_repository.py:163:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:163:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:164:9: error: Argument 2 of "get_positions_by_side" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:164:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:164:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:179:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_positions_by_date_range" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:183:9: error: Argument 3 of "get_positions_by_date_range" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:183:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:183:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:189:30: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:196:5: error: Return type "Coroutine[Any, Any, domain.entities.position.Position]" of "update" incompatible with return type "Coroutine[Any, Any, domain.entities.trading.Position]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:196:28: error: Argument 1 of "update" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "Position"  [override]
infrastructure\repositories\position_repository.py:196:28: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:196:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:200:19: error: Missing positional arguments "entity_type", "entity_id" in call to "EntityNotFoundError"  [call-arg]
infrastructure\repositories\position_repository.py:203:9: error: "InMemoryPositionRepository" has no attribute "_remove_from_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:206:9: error: "InMemoryPositionRepository" has no attribute "_update_position_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:221:13: error: "InMemoryPositionRepository" has no attribute "_remove_from_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:225:13: error: "InMemoryPositionRepository" has no attribute "_update_position_metrics"  [attr-defined]
infrastructure\repositories\position_repository.py:231:28: error: Argument 1 of "exists" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\position_repository.py:231:28: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:231:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:231:28: error: Argument 1 of "exists" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\position_repository.py:239:5: error: Signature of "count" incompatible with supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:239:5: note:      Superclass:
infrastructure\repositories\position_repository.py:239:5: note:          def count(self, filters: list[QueryFilter] | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:239:5: note:      Subclass:
infrastructure\repositories\position_repository.py:239:5: note:          def count(self, open_only: bool = ..., trading_pair: TradingPair | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:239:5: error: Signature of "count" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\position_repository.py:239:5: note:      Superclass:
infrastructure\repositories\position_repository.py:239:5: note:          def count(self, filters: list[QueryFilter] | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:239:5: note:      Subclass:
infrastructure\repositories\position_repository.py:239:5: note:          def count(self, open_only: bool = ..., trading_pair: TradingPair | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:251:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_profitable_positions" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:253:9: error: Argument 1 of "get_profitable_positions" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:253:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:253:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:265:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:267:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:270:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_losing_positions" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:272:9: error: Argument 1 of "get_losing_positions" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:272:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:272:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:282:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:284:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:287:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_positions_with_stop_loss" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:288:15: error: Argument 1 of "get_positions_with_stop_loss" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:288:15: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:288:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:295:5: error: Return type "Coroutine[Any, Any, list[domain.entities.position.Position]]" of "get_positions_with_take_profit" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trading.Position]]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:296:15: error: Argument 1 of "get_positions_with_take_profit" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:296:15: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:296:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:305:9: error: Argument 1 of "get_statistics" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:305:9: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:305:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:313:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:315:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:329:15: error: Argument 1 of "get_total_exposure" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "TradingPair | None"  [override]
infrastructure\repositories\position_repository.py:329:15: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:329:15: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:334:30: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\position_repository.py:339:58: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:345:5: error: Return type "Coroutine[Any, Any, domain.entities.position.Position | None]" of "get_by_symbol" incompatible with return type "Coroutine[Any, Any, domain.entities.trading.Position | None]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:351:21: error: "Position" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\position_repository.py:377:26: error: Argument 1 of "save" is incompatible with supertype "PositionRepository"; supertype defines the argument type as "Position"  [override]
infrastructure\repositories\position_repository.py:377:26: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:377:26: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:409:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:409:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:412:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:412:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:413:43: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
infrastructure\repositories\position_repository.py:416:5: error: Return type "Coroutine[Any, Any, domain.entities.position.Position | None]" of "get_by_id" incompatible with return type "Coroutine[Any, Any, domain.entities.trading.Position | None]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:423:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:423:17: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:425:28: error: Unexpected keyword argument "quantity" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:425:28: error: Unexpected keyword argument "entry_time" for "Position"; did you mean "entry_price"?  [call-arg]
infrastructure\repositories\position_repository.py:425:28: error: Unexpected keyword argument "exit_time" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:425:28: error: Unexpected keyword argument "is_open" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:425:28: error: Unexpected keyword argument "is_profitable" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:440:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:440:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:441:43: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
infrastructure\repositories\order_repository.py:75:44: error: Argument 1 of "_get_entity_by_id_impl" is incompatible with supertype "BaseRepositoryImpl"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\order_repository.py:75:44: note: This violates the Liskov substitution principle
infrastructure\repositories\order_repository.py:75:44: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\order_repository.py:95:41: error: Argument 1 of "_delete_entity_impl" is incompatible with supertype "BaseRepositoryImpl"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\order_repository.py:95:41: note: This violates the Liskov substitution principle
infrastructure\repositories\order_repository.py:95:41: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\order_repository.py:326:9: error: Unsupported target for indexed assignment ("RepositoryMetrics")  [index]
infrastructure\repositories\order_repository.py:380:13: error: Unsupported target for indexed assignment ("RepositoryMetrics")  [index]
infrastructure\repositories\order_repository.py:380:47: error: "RepositoryMetrics" has no attribute "get"  [attr-defined]
infrastructure\repositories\order_repository.py:382:9: error: Unsupported target for indexed assignment ("RepositoryMetrics")  [index]
infrastructure\repositories\order_repository.py:382:45: error: "RepositoryMetrics" has no attribute "get"  [attr-defined]
infrastructure\repositories\order_repository.py:529:13: error: Dict entry 4 has incompatible type "str": "None"; expected "str": "int"  [dict-item]
infrastructure\repositories\order_repository.py:1074:26: error: Argument "trading_pair" to "Order" has incompatible type "domain.value_objects.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\order_repository.py:1183:5: error: Return type "AsyncIterator[Order]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Order]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1183:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\order_repository.py:1183:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\order_repository.py:1205:5: error: Return type "_AsyncGeneratorContextManager[Any, None]" of "transaction" incompatible with return type "Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1229:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\order_repository.py:1246:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\order_repository.py:1267:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\order_repository.py:1289:16: error: Missing positional arguments "success_count", "error_count" in call to "BulkOperationResult"  [call-arg]
infrastructure\repositories\order_repository.py:1329:16: error: Extra keys ("total_queries", "avg_query_time", "cache_hit_rate", "error_rate") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\order_repository.py:1355:20: error: Extra keys ("response_time_ms", "uptime_seconds", "memory_usage_mb", "disk_usage_mb", "connection_status", "cache_status") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\order_repository.py:1367:20: error: Extra keys ("response_time_ms", "uptime_seconds", "memory_usage_mb", "disk_usage_mb", "connection_status", "cache_status") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
examples\ddd_usage_examples.py:17:1: error: Module "domain.entities.risk" has no attribute "RiskLimit"  [attr-defined]
examples\ddd_usage_examples.py:32:1: error: Module "shared.exceptions" has no attribute "TradingError"  [attr-defined]
domain\strategies\strategy_factory.py:97:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:98:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:101:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:103:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\use_cases\manage_trading_pairs.py:203:30: error: Argument "trading_pair" to "CreateTradingPairResponse" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:236:30: error: Argument "trading_pair" to "UpdateTradingPairResponse" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:283:51: error: Argument 1 to "append" of "list" has incompatible type "tuple[TradingPair, None]"; expected "tuple[TradingPair, TradingPairMetrics]"  [arg-type]
application\use_cases\manage_trading_pairs.py:288:47: error: Argument 1 to "append" of "list" has incompatible type "tuple[TradingPair, None]"; expected "tuple[TradingPair, TradingPairMetrics]"  [arg-type]
application\use_cases\manage_trading_pairs.py:290:31: error: Argument "trading_pairs" to "GetTradingPairsResponse" has incompatible type "list[domain.entities.trading_pair.TradingPair]"; expected "list[domain.types.TradingPair]"  [arg-type]
application\use_cases\manage_trading_pairs.py:364:26: error: "MarketData" has no attribute "get_order_book"  [attr-defined]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "symbol" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "liquidity_score" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "bid_ask_spread" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "market_depth" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "overall_score" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:386:20: error: Unexpected keyword argument "last_updated" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:388:28: error: Argument "volatility" to "TradingPairMetrics" has incompatible type "float"; expected "Decimal"  [arg-type]
application\use_cases\manage_trading_pairs.py:389:24: error: Argument "spread" to "TradingPairMetrics" has incompatible type "float"; expected "PriceValue | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:390:28: error: Argument "volume_24h" to "TradingPairMetrics" has incompatible type "float"; expected "VolumeValue"  [arg-type]
application\use_cases\manage_trading_pairs.py:391:34: error: Argument "price_change_24h" to "TradingPairMetrics" has incompatible type "float"; expected "PriceValue"  [arg-type]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "symbol" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "liquidity_score" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "bid_ask_spread" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "market_depth" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "overall_score" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:402:20: error: Unexpected keyword argument "last_updated" for "TradingPairMetrics"  [call-arg]
application\use_cases\manage_trading_pairs.py:404:28: error: Argument "volatility" to "TradingPairMetrics" has incompatible type "float"; expected "Decimal"  [arg-type]
application\use_cases\manage_trading_pairs.py:405:24: error: Argument "spread" to "TradingPairMetrics" has incompatible type "float"; expected "PriceValue | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:406:28: error: Argument "volume_24h" to "TradingPairMetrics" has incompatible type "float"; expected "VolumeValue"  [arg-type]
application\use_cases\manage_trading_pairs.py:407:34: error: Argument "price_change_24h" to "TradingPairMetrics" has incompatible type "float"; expected "PriceValue"  [arg-type]
application\use_cases\manage_trading_pairs.py:419:22: error: "MarketData" has no attribute "get_historical_prices"  [attr-defined]
application\use_cases\manage_trading_pairs.py:448:30: error: Value of type "OrderBookEntry" is not indexable  [index]
application\use_cases\manage_trading_pairs.py:449:30: error: Value of type "OrderBookEntry" is not indexable  [index]
application\use_cases\manage_trading_pairs.py:474:22: error: "MarketData" has no attribute "get_historical_prices"  [attr-defined]
application\use_cases\manage_risk.py:280:42: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:295:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:319:46: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:327:46: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:337:67: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:348:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:350:29: error: Missing positional argument "portfolio_id" in call to "Position"  [call-arg]
application\use_cases\manage_risk.py:351:20: error: Argument "id" to "Position" has incompatible type "OrderId"; expected "PositionId"  [arg-type]
application\use_cases\manage_risk.py:352:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
application\use_cases\manage_risk.py:353:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
application\use_cases\manage_risk.py:354:24: error: Argument "volume" to "Position" has incompatible type "VolumeValue"; expected "Volume"  [arg-type]
application\use_cases\manage_risk.py:355:29: error: Argument "entry_price" to "Position" has incompatible type "Price | None"; expected "Price"  [arg-type]
application\use_cases\manage_risk.py:356:31: error: Argument "current_price" to "Position" has incompatible type "Price | None"; expected "Price"  [arg-type]
application\use_cases\manage_risk.py:357:28: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:358:28: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:438:28: error: "RiskLevel" has no attribute "value"  [attr-defined]
application\use_cases\manage_risk.py:452:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:535:30: error: Unsupported operand types for - ("Series" and "float")  [operator]
application\use_cases\manage_risk.py:537:23: error: "float" has no attribute "mean"  [attr-defined]
application\use_cases\manage_risk.py:537:47: error: "float" has no attribute "std"  [attr-defined]
application\use_cases\manage_risk.py:538:20: error: "float" has no attribute "std"  [attr-defined]
application\use_cases\manage_risk.py:542:34: error: "int" has no attribute "cumprod"  [attr-defined]
application\use_cases\manage_risk.py:542:39: error: Unsupported operand types for + ("int" and "Series")  [operator]
application\use_cases\manage_risk.py:574:16: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:575:47: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:579:58: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:591:41: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:628:37: error: "MarketData" has no attribute "get_historical_prices"  [attr-defined]
application\use_cases\manage_risk.py:641:16: error: Incompatible return value type (got "dict[Symbol, list[float]]", expected "dict[str, list[float]]")  [return-value]
application\use_cases\manage_risk.py:641:16: note: Perhaps you need a type annotation for "returns_data"? Suggestion: "dict[str, list[float]]"
application\use_cases\manage_risk.py:748:50: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:757:50: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:768:54: error: "type[Timestamp]" has no attribute "now"  [attr-defined]
application\use_cases\manage_risk.py:818:30: error: No overload variant of "percentile" matches argument types "Series", "float"  [call-overload]
application\use_cases\manage_risk.py:818:30: note: Possible overload variants:
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> floating[Any]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> complexfloating[Any, Any]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> timedelta64
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> datetime64
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> Any
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[floating[Any]]]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[timedelta64]]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[datetime64]]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[object_]]
application\use_cases\manage_risk.py:818:30: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> Any
application\use_cases\manage_risk.py:818:30: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: _ArrayType = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> _ArrayType
application\use_cases\manage_risk.py:836:33: error: No overload variant of "percentile" matches argument types "Series", "float"  [call-overload]
application\use_cases\manage_risk.py:836:33: note: Possible overload variants:
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> floating[Any]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> complexfloating[Any, Any]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> timedelta64
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> datetime64
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: bool | bool_ | int | integer[Any] | float | floating[Any], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> Any
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[floating[Any]]]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[Any, Any]]]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[timedelta64]]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[datetime64]] | _NestedSequence[_SupportsArray[dtype[datetime64]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[datetime64]]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: Literal[False] = ...) -> ndarray[Any, dtype[object_]]
application\use_cases\manage_risk.py:836:33: note:     def percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: None = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> Any
application\use_cases\manage_risk.py:836:33: note:     def [_ArrayType: ndarray[Any, dtype[Any]]] percentile(a: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[bool_ | integer[Any] | timedelta64]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | timedelta64]]] | bool | int | _NestedSequence[bool | int] | _SupportsArray[dtype[object_]] | _NestedSequence[_SupportsArray[dtype[object_]]], q: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], axis: SupportsIndex | Sequence[SupportsIndex] | None = ..., out: _ArrayType = ..., overwrite_input: bool = ..., method: Literal['inverted_cdf', 'averaged_inverted_cdf', 'closest_observation', 'interpolated_inverted_cdf', 'hazen', 'weibull', 'linear', 'median_unbiased', 'normal_unbiased', 'lower', 'higher', 'midpoint', 'nearest'] = ..., keepdims: bool = ...) -> _ArrayType
application\use_cases\manage_risk.py:856:30: error: "Series" has no attribute "cov"  [attr-defined]
application\use_cases\manage_risk.py:857:35: error: "Series" has no attribute "var"  [attr-defined]
application\use_cases\manage_risk.py:878:30: error: "Series" has no attribute "corr"  [attr-defined]
application\use_cases\manage_risk.py:916:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:918:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:920:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:923:20: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:939:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:941:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:943:24: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:946:20: error: Incompatible return value type (got "str", expected "RiskLevel")  [return-value]
application\use_cases\manage_risk.py:955:16: error: "dict[str, float | Decimal | str]" has no attribute "var_95"  [attr-defined]
application\use_cases\manage_risk.py:957:21: error: "dict[str, float | Decimal | str]" has no attribute "var_95"  [attr-defined]
application\use_cases\manage_risk.py:959:20: error: "dict[str, float | Decimal | str]" has no attribute "max_drawdown"  [attr-defined]
application\use_cases\manage_risk.py:961:21: error: "dict[str, float | Decimal | str]" has no attribute "max_drawdown"  [attr-defined]
application\use_cases\manage_positions.py:9:1: error: Module "application.types" has no attribute "PositionManagementUseCase"  [attr-defined]
application\use_cases\manage_positions.py:26:1: error: Module "domain.types" has no attribute "OrderSide"  [attr-defined]
application\use_cases\manage_positions.py:26:1: error: Module "domain.types" has no attribute "PositionStatus"  [attr-defined]
application\use_cases\manage_positions.py:52:27: error: Name "OrderRepository" is not defined  [name-defined]
application\use_cases\manage_positions.py:76:20: error: Missing positional argument "item" in call to "PositionId"  [call-arg]
application\use_cases\manage_positions.py:78:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
application\use_cases\manage_positions.py:79:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
application\use_cases\manage_positions.py:86:19: error: "PositionRepository" has no attribute "create"  [attr-defined]
application\use_cases\manage_positions.py:116:16: error: "Position" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:125:17: error: "Position" has no attribute "update_price"  [attr-defined]
application\use_cases\manage_positions.py:126:44: error: Incompatible types in assignment (expression has type "Price", target has type "Volume")  [assignment]
application\use_cases\manage_positions.py:130:26: error: Argument "position" to "UpdatePositionResponse" has incompatible type "domain.entities.trading.Position"; expected "domain.entities.position.Position | None"  [arg-type]
application\use_cases\manage_positions.py:131:25: error: Argument "changes" to "UpdatePositionResponse" has incompatible type "dict[str, Volume]"; expected "dict[str, str | float | int | bool]"  [arg-type]
application\use_cases\manage_positions.py:158:16: error: "Position" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:220:20: error: Unexpected keyword argument "total_value" for "GetPositionsResponse"  [call-arg]
application\use_cases\manage_positions.py:229:20: error: Unexpected keyword argument "total_value" for "GetPositionsResponse"  [call-arg]
application\use_cases\manage_positions.py:252:29: error: "Position" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:253:24: error: Incompatible return value type (got "domain.entities.trading.Position", expected "domain.entities.position.Position | None")  [return-value]
application\use_cases\manage_positions.py:282:20: error: Unexpected keyword argument "position_value" for "PositionMetrics"; did you mean "notional_value"?  [call-arg]
application\use_cases\manage_positions.py:282:20: error: Unexpected keyword argument "entry_value" for "PositionMetrics"  [call-arg]
application\use_cases\manage_positions.py:310:17: error: "Trade" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:310:37: error: Argument 2 to "get_by_trading_pair" of "PositionRepository" has incompatible type "TradingPair"; expected "bool"  [arg-type]
application\use_cases\manage_positions.py:315:24: error: Incompatible return value type (got "bool", expected "Position | None")  [return-value]
application\use_cases\manage_positions.py:318:24: error: Unexpected keyword argument "quantity" for "Position"  [call-arg]
application\use_cases\manage_positions.py:319:20: error: Missing positional argument "item" in call to "PositionId"  [call-arg]
application\use_cases\manage_positions.py:320:30: error: "Trade" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:321:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
application\use_cases\manage_positions.py:322:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
application\use_cases\manage_positions.py:330:19: error: "PositionRepository" has no attribute "create"  [attr-defined]
application\use_cases\manage_positions.py:347:17: error: "Trade" has no attribute "portfolio_id"  [attr-defined]
application\use_cases\manage_positions.py:347:37: error: Argument 2 to "get_by_trading_pair" of "PositionRepository" has incompatible type "TradingPair"; expected "bool"  [arg-type]
application\use_cases\manage_positions.py:356:32: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:359:22: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:359:49: error: "list[Position]" has no attribute "entry_price"  [attr-defined]
application\use_cases\manage_positions.py:362:17: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:363:17: error: "list[Position]" has no attribute "entry_price"  [attr-defined]
application\use_cases\manage_positions.py:366:32: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:369:21: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:371:21: error: "list[Position]" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:373:13: error: "list[Position]" has no attribute "current_price"  [attr-defined]
application\use_cases\manage_positions.py:374:13: error: "list[Position]" has no attribute "updated_at"  [attr-defined]
application\use_cases\manage_positions.py:376:51: error: Argument 1 to "update" of "PositionRepository" has incompatible type "list[Position]"; expected "Position"  [arg-type]
application\use_cases\manage_orders.py:37:37: error: Name "OrderManagementUseCase" is not defined  [name-defined]
application\use_cases\manage_orders.py:44:30: error: Name "PositionRepository" is not defined  [name-defined]
application\use_cases\manage_orders.py:74:26: error: Argument "quantity" to "Order" has incompatible type "Volume"; expected "VolumeValue"  [arg-type]
application\use_cases\manage_orders.py:75:29: error: Argument 1 to "Price" has incompatible type "Price"; expected "Decimal"  [arg-type]
application\use_cases\manage_orders.py:94:25: error: "TradingPair" has no attribute "symbol"  [attr-defined]
application\use_cases\manage_orders.py:121:59: error: Argument 1 to "get_by_id" of "OrderRepository" has incompatible type "OrderId"; expected "EntityId"  [arg-type]
application\use_cases\manage_orders.py:147:35: error: Argument "cancellation_time" to "CancelOrderResponse" has incompatible type "Timestamp"; expected "TimestampValue | None"  [arg-type]
application\use_cases\manage_orders.py:196:17: error: Generator has incompatible item type "Any | Decimal"; expected "bool"  [misc]
application\use_cases\manage_orders.py:196:18: error: "VolumeValue" has no attribute "amount"  [attr-defined]
application\use_cases\manage_orders.py:228:59: error: Argument 1 to "get_by_id" of "OrderRepository" has incompatible type "OrderId"; expected "EntityId"  [arg-type]
application\use_cases\manage_orders.py:252:59: error: Argument 1 to "get_by_id" of "OrderRepository" has incompatible type "OrderId"; expected "EntityId"  [arg-type]
application\symbol_selection\analytics.py:97:21: error: Module has no attribute "date_range"  [attr-defined]
application\services\technical_analysis_service.py:14:1: error: Name "TechnicalAnalysisService" already defined (possibly by an import)  [no-redef]
application\services\technical_analysis_service.py:55:18: error: Name "pd" is not defined  [name-defined]
application\services\technical_analysis_service.py:63:42: error: "TechnicalIndicator" has no attribute "values"; maybe "value"?  [attr-defined]
application\services\ml_service.py:56:55: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\ml_service.py:138:51: error: Argument 1 to "delete_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\ml_service.py:144:45: error: Name "pd" is not defined  [name-defined]
application\services\ml_service.py:180:28: error: Name "np" is not defined  [name-defined]
application\services\ml_service.py:229:17: error: Name "np" is not defined  [name-defined]
application\services\ml_service.py:245:21: error: Name "np" is not defined  [name-defined]
application\services\ml_service.py:266:41: error: Name "pd" is not defined  [name-defined]
application\services\ml_service.py:301:28: error: Name "np" is not defined  [name-defined]
application\services\ml_service.py:363:70: error: Argument 1 to "get_predictions_by_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\market_data_service.py:39:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:48:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:57:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:64:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:73:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:80:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:87:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:119:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:131:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:144:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:152:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_data_service.py:164:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_analysis_service.py:18:47: error: Name "DomainMarketAnalysisService" is not defined  [name-defined]
application\services\implementations\trading_service_impl.py:63:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\trading_service_impl.py:98:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:103:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:127:29: error: "TradingRepository" has no attribute "cancel_order"  [attr-defined]
application\services\implementations\trading_service_impl.py:158:61: error: Argument 1 to "get_order" of "TradingRepository" has incompatible type "OrderId"; expected "EntityId"  [arg-type]
application\services\implementations\trading_service_impl.py:181:55: error: Argument 1 to "_is_balance_cache_expired" of "TradingServiceImpl" has incompatible type "Money"; expected "dict[str, Money]"  [arg-type]
application\services\implementations\trading_service_impl.py:182:28: error: Incompatible return value type (got "Money", expected "dict[str, Money]")  [return-value]
application\services\implementations\trading_service_impl.py:184:29: error: "TradingRepository" has no attribute "get_account_balance"  [attr-defined]
application\services\implementations\trading_service_impl.py:192:5: error: Return type "Coroutine[Any, Any, list[domain.entities.trading.Trade]]" of "get_trade_history" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trade.Trade]]" in supertype "TradingService"  [override]
application\services\implementations\trading_service_impl.py:204:28: error: "TradingRepository" has no attribute "get_trade_history"  [attr-defined]
application\services\implementations\trading_service_impl.py:226:28: error: "TradingRepository" has no attribute "get_open_orders"  [attr-defined]
application\services\implementations\trading_service_impl.py:271:55: error: Unsupported operand types for * ("VolumeAmount" and "float")  [operator]
application\services\implementations\trading_service_impl.py:296:29: error: "TradingRepository" has no attribute "execute_order"; maybe "delete_order"?  [attr-defined]
application\services\implementations\trading_service_impl.py:300:36: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\implementations\trading_service_impl.py:304:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:305:17: error: Unsupported operand types for + ("object" and "VolumeAmount")  [operator]
application\services\implementations\trading_service_impl.py:311:21: error: Unsupported operand types for * ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:311:36: error: Unsupported operand types for - ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:312:21: error: Unsupported operand types for / ("float" and "object")  [operator]
application\services\implementations\trading_service_impl.py:317:23: error: "SignalService" has no attribute "process_order_execution"  [attr-defined]
application\services\implementations\trading_service_impl.py:320:32: error: "type[OrderStatus]" has no attribute "FAILED"  [attr-defined]
application\services\implementations\trading_service_impl.py:321:36: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\implementations\trading_service_impl.py:325:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:329:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:333:22: error: No overload variant of "__sub__" of "datetime" matches argument type "Timestamp"  [operator]
application\services\implementations\trading_service_impl.py:333:22: note: Possible overload variants:
application\services\implementations\trading_service_impl.py:333:22: note:     def __sub__(self, datetime, /) -> timedelta
application\services\implementations\trading_service_impl.py:333:22: note:     def __sub__(self, timedelta, /) -> datetime
application\services\implementations\trading_service_impl.py:353:17: error: Unsupported left operand type for / ("object")  [operator]
application\services\implementations\trading_service_impl.py:355:20: error: Unsupported operand types for < ("int" and "object")  [operator]
application\services\implementations\trading_service_impl.py:358:35: error: Argument 1 to "float" has incompatible type "object"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
application\services\implementations\risk_service_impl.py:33:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\risk_service_impl.py:47:5: error: Return type "Coroutine[Any, Any, application.types.RiskMetrics]" of "assess_portfolio_risk" incompatible with return type "Coroutine[Any, Any, domain.types.RiskMetrics]" in supertype "RiskService"  [override]
application\services\implementations\risk_service_impl.py:59:39: error: Incompatible types in assignment (expression has type "domain.entities.risk.RiskMetrics", target has type "application.types.RiskMetrics")  [assignment]
application\services\implementations\risk_service_impl.py:60:16: error: Incompatible return value type (got "domain.entities.risk.RiskMetrics", expected "application.types.RiskMetrics")  [return-value]
application\services\implementations\risk_service_impl.py:73:18: error: "RiskMetrics" has no attribute "portfolio_var_99"; maybe "portfolio_var_95", "portfolio_cvar_95", or "portfolio_value"?  [attr-defined]
application\services\implementations\risk_service_impl.py:85:42: error: Argument 2 of "validate_risk_limits" is incompatible with supertype "RiskService"; supertype defines the argument type as "CreateOrderRequest"  [override]
application\services\implementations\risk_service_impl.py:85:42: note: This violates the Liskov substitution principle
application\services\implementations\risk_service_impl.py:85:42: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
application\services\implementations\risk_service_impl.py:107:64: error: Argument 1 to "validate_risk_limits" of "RiskAnalysisService" has incompatible type "application.types.RiskMetrics"; expected "domain.entities.risk.RiskMetrics"  [arg-type]
application\services\implementations\risk_service_impl.py:107:78: error: Argument 2 to "validate_risk_limits" of "RiskAnalysisService" has incompatible type "dict[str, Any]"; expected "RiskLimits"  [arg-type]
application\services\implementations\risk_service_impl.py:112:16: error: "RiskAnalysisService" has no attribute "get_risk_alerts"  [attr-defined]
application\services\implementations\risk_service_impl.py:116:39: error: "RiskMetrics" has no attribute "last_updated"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:59:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\portfolio_service_impl.py:94:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:165:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:177:40: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
application\services\implementations\portfolio_service_impl.py:179:5: error: Return type "Coroutine[Any, Any, application.types.PortfolioMetrics]" of "get_portfolio_metrics" incompatible with return type "Coroutine[Any, Any, application.protocols.service_protocols.PortfolioMetrics]" in supertype "PortfolioService"  [override]
application\services\implementations\portfolio_service_impl.py:203:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:207:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:224:23: error: Unexpected keyword argument "portfolio_id" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:224:23: error: Unexpected keyword argument "position_count" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:224:23: error: Unexpected keyword argument "volatility" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:224:23: error: Unexpected keyword argument "last_updated" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:224:23: error: Unexpected keyword argument "metadata" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:226:48: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
application\services\implementations\portfolio_service_impl.py:227:44: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
application\services\implementations\portfolio_service_impl.py:235:43: error: "Portfolio" has no attribute "strategies"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:268:29: error: "PortfolioRepository" has no attribute "get_portfolio_balance"; maybe "get_portfolio" or "get_portfolio_by_account"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:297:29: error: "PortfolioRepository" has no attribute "update_portfolio_balance"; maybe "update_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:318:5: error: Return type "Coroutine[Any, Any, application.types.PerformanceMetrics]" of "get_portfolio_performance" incompatible with return type "Coroutine[Any, Any, application.protocols.service_protocols.PerformanceMetrics]" in supertype "PortfolioService"  [override]
application\services\implementations\portfolio_service_impl.py:341:37: error: "PortfolioRepository" has no attribute "get_portfolio_history"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:346:24: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:346:24: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:346:24: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:349:34: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:357:31: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:373:42: error: Argument 2 of "validate_portfolio_constraints" is incompatible with supertype "PortfolioService"; supertype defines the argument type as "CreateOrderRequest"  [override]
application\services\implementations\portfolio_service_impl.py:373:42: note: This violates the Liskov substitution principle
application\services\implementations\portfolio_service_impl.py:373:42: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
application\services\implementations\portfolio_service_impl.py:394:16: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:396:37: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:397:42: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:399:41: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:402:37: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:406:25: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:410:29: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:415:17: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:416:31: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:421:35: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:451:71: error: Argument 1 to "get_portfolio" of "PortfolioRepository" has incompatible type "PortfolioId"; expected "EntityId"  [arg-type]
application\services\implementations\portfolio_service_impl.py:454:52: error: Incompatible types in assignment (expression has type "domain.entities.portfolio_fixed.Portfolio", target has type "domain.entities.portfolio.Portfolio")  [assignment]
application\services\implementations\portfolio_service_impl.py:455:20: error: Incompatible return value type (got "domain.entities.portfolio_fixed.Portfolio | None", expected "domain.entities.portfolio.Portfolio | None")  [return-value]
application\services\implementations\portfolio_service_impl.py:509:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:527:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:545:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:565:24: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:565:24: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:565:24: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:566:46: error: Argument 1 to "PortfolioId" has incompatible type "str"; expected "UUID"  [arg-type]
application\services\implementations\portfolio_service_impl.py:568:34: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:576:31: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:623:20: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:623:20: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:623:20: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:624:42: error: Argument 1 to "PortfolioId" has incompatible type "str"; expected "UUID"  [arg-type]
application\services\implementations\portfolio_service_impl.py:626:30: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Any | Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:634:27: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:643:32: error: "PortfolioRepository" has no attribute "get_all_portfolios"; maybe "get_portfolio" or "get_all_positions"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:653:22: error: No overload variant of "__sub__" of "datetime" matches argument type "Timestamp"  [operator]
application\services\implementations\portfolio_service_impl.py:653:22: note: Possible overload variants:
application\services\implementations\portfolio_service_impl.py:653:22: note:     def __sub__(self, datetime, /) -> timedelta
application\services\implementations\portfolio_service_impl.py:653:22: note:     def __sub__(self, timedelta, /) -> datetime
application\services\implementations\portfolio_service_impl.py:658:39: error: "PortfolioMetrics" has no attribute "last_updated"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:687:36: error: "PortfolioRepository" has no attribute "get_active_portfolios"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\ml_service_impl.py:50:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\ml_service_impl.py:70:5: error: Return type "Coroutine[Any, Any, application.types.MLPrediction | None]" of "predict_price" incompatible with return type "Coroutine[Any, Any, application.protocols.service_protocols.MLPrediction | None]" in supertype "MLService"  [override]
application\services\implementations\ml_service_impl.py:97:35: error: "MLPredictor" has no attribute "predict"  [attr-defined]
application\services\implementations\ml_service_impl.py:108:26: error: Argument "metadata" to "MLPrediction" has incompatible type "dict[str, Any]"; expected "MetadataDict"  [arg-type]
application\services\implementations\ml_service_impl.py:141:34: error: "MLPredictor" has no attribute "analyze_sentiment"  [attr-defined]
application\services\implementations\ml_service_impl.py:172:5: error: Return type "Coroutine[Any, Any, list[application.types.PatternDetection]]" of "detect_patterns" incompatible with return type "Coroutine[Any, Any, list[application.protocols.service_protocols.PatternDetection]]" in supertype "MLService"  [override]
application\services\implementations\ml_service_impl.py:188:26: error: "MLPredictor" has no attribute "detect_patterns"  [attr-defined]
application\services\implementations\ml_service_impl.py:200:26: error: Argument "metadata" to "PatternDetection" has incompatible type "dict[str, Any]"; expected "MetadataDict"  [arg-type]
application\services\implementations\ml_service_impl.py:227:30: error: "MLPredictor" has no attribute "calculate_risk_metrics"  [attr-defined]
application\services\implementations\ml_service_impl.py:258:56: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\implementations\ml_service_impl.py:263:37: error: "MLPredictor" has no attribute "train_model"; maybe "train_models"?  [attr-defined]
application\services\implementations\ml_service_impl.py:266:34: error: Unsupported operand types for + ("str" and "int")  [operator]
application\services\implementations\ml_service_impl.py:267:17: error: "Model" has no attribute "last_trained"  [attr-defined]
application\services\implementations\ml_service_impl.py:268:17: error: "Model" has no attribute "training_metrics"  [attr-defined]
application\services\implementations\ml_service_impl.py:269:23: error: "MLRepository" has no attribute "update_model"  [attr-defined]
application\services\implementations\ml_service_impl.py:297:56: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\implementations\ml_service_impl.py:301:39: error: "MLPredictor" has no attribute "evaluate_model"  [attr-defined]
application\services\implementations\ml_service_impl.py:331:37: error: "Model" has no attribute "model_id"  [attr-defined]
application\services\implementations\ml_service_impl.py:332:34: error: "Model" has no attribute "model_id"  [attr-defined]
application\services\implementations\ml_service_impl.py:397:39: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:49:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\market_service_impl.py:79:29: error: Missing positional argument "timeframe" in call to "get_market_data" of "MarketRepository"  [call-arg]
application\services\implementations\market_service_impl.py:82:51: error: Incompatible types in assignment (expression has type "list[MarketData]", target has type "MarketData")  [assignment]
application\services\implementations\market_service_impl.py:84:16: error: Incompatible return value type (got "list[MarketData]", expected "MarketData | None")  [return-value]
application\services\implementations\market_service_impl.py:112:33: error: "MarketRepository" has no attribute "get_historical_data"  [attr-defined]
application\services\implementations\market_service_impl.py:143:43: error: "Price" has no attribute "timestamp"  [attr-defined]
application\services\implementations\market_service_impl.py:147:28: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:149:45: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:151:20: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:171:43: error: Argument 1 to "_is_cache_expired" of "MarketServiceImpl" has incompatible type "Any | None"; expected "TimestampValue"  [arg-type]
application\services\implementations\market_service_impl.py:174:27: error: "MarketRepository" has no attribute "get_order_book"  [attr-defined]
application\services\implementations\market_service_impl.py:218:25: error: "MarketMetricsService" has no attribute "calculate_metrics"; maybe "calculate_trend_metrics", "calculate_volume_metrics", or "calculate_momentum_metrics"?  [attr-defined]
application\services\implementations\market_service_impl.py:259:5: error: Return type "Coroutine[Any, Any, application.types.MarketAnalysis]" of "analyze_market" incompatible with return type "Coroutine[Any, Any, application.protocols.service_protocols.MarketAnalysis]" in supertype "MarketService"  [override]
application\services\implementations\market_service_impl.py:274:26: error: "TechnicalAnalysisService" has no attribute "analyze_market"; maybe "analyze_market_data"?  [attr-defined]
application\services\implementations\market_service_impl.py:289:5: error: Return type "Coroutine[Any, Any, application.types.TechnicalIndicators]" of "get_technical_indicators" incompatible with return type "Coroutine[Any, Any, application.protocols.service_protocols.TechnicalIndicators]" in supertype "MarketService"  [override]
application\services\implementations\market_service_impl.py:304:28: error: "TechnicalAnalysisService" has no attribute "calculate_indicators"; maybe "calculate_atr"?  [attr-defined]
application\services\implementations\market_service_impl.py:328:39: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:337:31: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:369:39: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:370:36: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:379:39: error: "MarketData" has no attribute "price_change_24h"  [attr-defined]
application\services\implementations\market_service_impl.py:380:36: error: "MarketData" has no attribute "price_change_24h"  [attr-defined]
application\services\implementations\market_service_impl.py:455:5: error: Name "validate_input" already defined on line 408  [no-redef]
application\services\implementations\market_service_impl.py:466:5: error: Name "process" already defined on line 419  [no-redef]
application\services\implementations\market_service_impl.py:476:5: error: Name "_process_market_data" already defined on line 429  [no-redef]
application\services\implementations\market_service_impl.py:497:5: error: Name "_process_symbol" already defined on line 450  [no-redef]
application\services\implementations\cache_service_impl.py:45:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
tests\unit\test_decomposed_strategies.py:88:6: error: Name "patch" is not defined  [name-defined]
tests\unit\test_decomposed_strategies.py:89:6: error: Name "patch" is not defined  [name-defined]
tests\unit\test_decomposed_strategies.py:90:6: error: Name "patch" is not defined  [name-defined]
tests\unit\test_decomposed_strategies.py:115:6: error: Name "patch" is not defined  [name-defined]
tests\unit\test_decomposed_strategies.py:116:6: error: Name "patch" is not defined  [name-defined]
tests\unit\test_decomposed_strategies.py:117:6: error: Name "patch" is not defined  [name-defined]
tests\unit\application_tests\test_use_cases.py:8:1: error: Module "application.use_cases.manage_orders" has no attribute "OrderManagementUseCase"; maybe "DefaultOrderManagementUseCase"?  [attr-defined]
tests\unit\application_tests\test_symbol_selection.py:7:1: error: Module "application.symbol_selection.analytics" has no attribute "SymbolSelectionAnalytics"; maybe "SymbolAnalytics" or "SymbolSelectionResult"?  [attr-defined]
tests\unit\application_tests\test_symbol_selection.py:8:1: error: Module "application.symbol_selection.cache" has no attribute "SymbolSelectionCache"  [attr-defined]
tests\unit\application_tests\test_services.py:14:1: error: Module "application.types" has no attribute "OrderResponse"  [attr-defined]
tests\unit\application_tests\test_services.py:14:1: error: Module "application.types" has no attribute "StrategyConfig"  [attr-defined]
tests\unit\application_tests\test_services.py:14:1: error: Module "application.types" has no attribute "PortfolioConfig"  [attr-defined]
tests\unit\application_tests\test_services.py:25:1: error: Module "application.services.implementations.notification_service_impl" has no attribute "NotificationServiceImpl"  [attr-defined]
tests\integration\test_trading_flow.py:11:1: error: Module "application.use_cases.manage_orders" has no attribute "ManageOrdersUseCase"  [attr-defined]
tests\integration\test_trading_flow.py:12:1: error: Module "application.use_cases.manage_positions" has no attribute "ManagePositionsUseCase"  [attr-defined]
tests\integration\test_trading_flow.py:13:1: error: Module "application.use_cases.manage_risk" has no attribute "ManageRiskUseCase"  [attr-defined]
tests\integration\test_trading_cycle.py:11:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\integration\test_trading_cycle.py:15:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\integration\test_trading_cycle.py:16:1: error: Module "application.use_cases.manage_orders" has no attribute "ExecuteStrategyRequest"  [attr-defined]
tests\integration\test_trading_cycle.py:16:1: error: Module "application.use_cases.manage_orders" has no attribute "ExecuteStrategyResponse"  [attr-defined]
tests\integration\application\test_application_integration.py:51:27: error: Too many arguments for "DefaultTradingService"  [call-arg]
tests\integration\application\test_application_integration.py:62:63: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
tests\integration\application\test_application_integration.py:66:29: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:71:26: error: Unexpected keyword argument "symbol" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:71:26: error: Unexpected keyword argument "amount" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:72:26: error: Argument "portfolio_id" to "CreateOrderRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:74:24: error: Name "OrderType" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:75:18: error: Name "OrderSide" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:76:43: error: Argument 2 to "Volume" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:77:43: error: Argument 2 to "Price" has incompatible type "str"; expected "Currency"  [arg-type]
tests\integration\application\test_application_integration.py:77:50: error: Argument 3 to "Price" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:95:89: error: Argument 3 to "get_market_data" of "MarketDataService" has incompatible type "int"; expected "datetime | None"  [arg-type]
tests\integration\application\test_application_integration.py:97:39: error: "MarketDataService" has no attribute "get_market_summary"; maybe "get_market_state"?  [attr-defined]
tests\integration\application\test_application_integration.py:100:32: error: Unexpected keyword argument "executed_price" for "execute_order" of "DefaultTradingService"; did you mean "execution_price"?  [call-arg]
tests\integration\application\test_application_integration.py:194:43: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:195:43: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:225:24: error: Name "OrderType" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:226:18: error: Name "OrderSide" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:265:29: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:279:24: error: Name "OrderType" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:280:18: error: Name "OrderSide" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:290:20: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:311:43: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:312:43: error: Name "OrderStatus" is not defined  [name-defined]
tests\integration\application\test_application_integration.py:313:43: error: Name "OrderStatus" is not defined  [name-defined]
application\services\trading_service.py:278:5: note: "execute_order" of "DefaultTradingService" defined here
tests\integration\application\test_application_integration.py:100:32: error: Unexpected keyword argument "executed_quantity" for "execute_order" of "DefaultTradingService"; did you mean "execution_quantity"?  [call-arg]
application\services\trading_service.py:278:5: note: "execute_order" of "DefaultTradingService" defined here
tests\integration\application\test_application_integration.py:105:16: error: Value of type "Trade" is not indexable  [index]
tests\integration\application\test_application_integration.py:106:16: error: Value of type "Trade" is not indexable  [index]
tests\integration\application\test_application_integration.py:109:22: error: Argument "order_id" to "CancelOrderRequest" has incompatible type "UUID"; expected "OrderId"  [arg-type]
tests\integration\application\test_application_integration.py:110:26: error: Argument "portfolio_id" to "CancelOrderRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:159:84: error: Argument 3 to "get_market_data" of "MarketDataService" has incompatible type "int"; expected "datetime | None"  [arg-type]
tests\integration\application\test_application_integration.py:162:32: error: "MarketDataService" has no attribute "get_market_summary"; maybe "get_market_state"?  [attr-defined]
tests\integration\application\test_application_integration.py:165:32: error: "MarketDataService" has no attribute "get_volume_profile"  [attr-defined]
tests\integration\application\test_application_integration.py:168:31: error: "MarketDataService" has no attribute "get_market_regime_analysis"  [attr-defined]
tests\integration\application\test_application_integration.py:180:67: error: Too many values to unpack (4 expected, 5 provided)  [misc]
tests\integration\application\test_application_integration.py:185:63: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
tests\integration\application\test_application_integration.py:199:32: error: "DefaultTradingService" has no attribute "create_trading_session"; maybe "start_trading_session" or "end_trading_session"?  [attr-defined]
tests\integration\application\test_application_integration.py:203:31: error: "DefaultTradingService" has no attribute "get_orders"; maybe "get_order"?  [attr-defined]
tests\integration\application\test_application_integration.py:208:16: error: Value of type "TradingSession" is not indexable  [index]
tests\integration\application\test_application_integration.py:209:16: error: Value of type "TradingSession" is not indexable  [index]
tests\integration\application\test_application_integration.py:222:26: error: Unexpected keyword argument "symbol" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:222:26: error: Unexpected keyword argument "amount" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:223:26: error: Argument "portfolio_id" to "CreateOrderRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:227:43: error: Argument 2 to "Volume" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:228:43: error: Argument 2 to "Price" has incompatible type "str"; expected "Currency"  [arg-type]
tests\integration\application\test_application_integration.py:228:50: error: Argument 3 to "Price" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:235:66: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
tests\integration\application\test_application_integration.py:243:22: error: Argument "order_id" to "CancelOrderRequest" has incompatible type "UUID"; expected "OrderId"  [arg-type]
tests\integration\application\test_application_integration.py:244:26: error: Argument "portfolio_id" to "CancelOrderRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:259:63: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
tests\integration\application\test_application_integration.py:276:26: error: Unexpected keyword argument "symbol" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:276:26: error: Unexpected keyword argument "amount" for "CreateOrderRequest"  [call-arg]
tests\integration\application\test_application_integration.py:277:26: error: Argument "portfolio_id" to "CreateOrderRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:281:43: error: Argument 2 to "Volume" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:282:43: error: Argument 2 to "Price" has incompatible type "str"; expected "Currency"  [arg-type]
tests\integration\application\test_application_integration.py:282:50: error: Argument 3 to "Price" has incompatible type "str"; expected "Currency | None"  [arg-type]
tests\integration\application\test_application_integration.py:287:23: error: Unexpected keyword argument "symbol" for "GetOrdersRequest"  [call-arg]
tests\integration\application\test_application_integration.py:288:26: error: Argument "portfolio_id" to "GetOrdersRequest" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
tests\integration\application\test_application_integration.py:297:36: error: "MarketDataService" has no attribute "get_market_summary"; maybe "get_market_state"?  [attr-defined]
tests\integration\application\test_application_integration.py:308:64: error: Argument 2 to "Money" has incompatible type "str"; expected "Currency | CurrencyCode"  [arg-type]
tests\integration\application\test_application_integration.py:317:30: error: "DefaultTradingService" has no attribute "calculate_trading_statistics"; maybe "get_trading_statistics"?  [attr-defined]
tests\integration\application\test_application_integration.py:329:29: error: "DefaultTradingService" has no attribute "calculate_risk_metrics"  [attr-defined]
tests\infrastructure\repositories\test_postgres_repositories.py:18:1: error: Module "domain.entities.market" has no attribute "MarketDepth"; maybe "MarketData"?  [attr-defined]
tests\e2e\test_complete_trading_session.py:11:1: error: Module "application.use_cases.manage_orders" has no attribute "ManageOrdersUseCase"  [attr-defined]
tests\e2e\test_complete_trading_session.py:12:1: error: Module "application.use_cases.manage_positions" has no attribute "ManagePositionsUseCase"  [attr-defined]
tests\e2e\test_complete_trading_session.py:13:1: error: Module "application.use_cases.manage_risk" has no attribute "ManageRiskUseCase"  [attr-defined]
tests\e2e\test_complete_trading_session.py:362:23: error: "Position" has no attribute "average_price"  [attr-defined]
tests\e2e\test_complete_trading_session.py:367:23: error: "Position" has no attribute "average_price"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableMarketMakerAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableMarketRegimeAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableMetaController"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableNewsAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableOrderExecutor"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvablePortfolioAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableRiskAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:14:1: error: Module "infrastructure.agents.evolvable_components" has no attribute "EvolvableStrategyAgent"  [attr-defined]
infrastructure\core\evolution_integration.py:42:32: error: Name "EvolutionConfig" is not defined  [name-defined]
infrastructure\core\evolution_integration.py:48:33: error: Name "EvolutionConfig" is not defined  [name-defined]
infrastructure\core\evolution_integration.py:55:36: error: Missing positional argument "storage" in call to "EvolutionMigration"  [call-arg]
infrastructure\core\evolution_integration.py:57:34: error: Unexpected keyword argument "min_accuracy_threshold" for "EvolutionContext"  [call-arg]
infrastructure\core\evolution_integration.py:57:34: error: Unexpected keyword argument "min_profitability_threshold" for "EvolutionContext"; did you mean "min_profitability"?  [call-arg]
infrastructure\core\evolution_integration.py:57:34: error: Unexpected keyword argument "max_drawdown_threshold" for "EvolutionContext"  [call-arg]
infrastructure\core\evolution_integration.py:57:34: error: Unexpected keyword argument "min_sharpe_threshold" for "EvolutionContext"  [call-arg]
infrastructure\core\evolution_integration.py:60:27: error: Argument "mutation_rate" to "EvolutionContext" has incompatible type "float"; expected "Decimal"  [arg-type]
infrastructure\core\evolution_integration.py:61:28: error: Argument "crossover_rate" to "EvolutionContext" has incompatible type "float"; expected "Decimal"  [arg-type]
infrastructure\core\evolution_integration.py:71:33: error: Argument "strategy_repository" to "EvolutionOrchestrator" has incompatible type "None"; expected "StrategyRepositoryProtocol"  [arg-type]
infrastructure\core\evolution_integration.py:190:38: error: Name "evolution_manager" is not defined  [name-defined]
infrastructure\core\evolution_integration.py:245:21: error: Name "pd" is not defined  [name-defined]
infrastructure\core\evolution_integration.py:246:20: error: Name "pd" is not defined  [name-defined]
domain\strategies\examples.py:332:47: error: Argument 1 to "RiskLevel" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\strategies\examples.py:333:69: error: Argument 1 to "ConfidenceLevel" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\strategies\examples.py:363:20: error: "CustomStrategy" has no attribute "strategy_type"; maybe "get_strategy_type"?  [attr-defined]
domain\strategies\examples.py:366:20: error: "CustomStrategy" has no attribute "parameters"; maybe "get_parameters"?  [attr-defined]
domain\strategies\examples.py:368:38: error: Name "StrategyPerformance" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:10:1: error: Module "domain.symbols" has no attribute "OpportunityScore"; maybe "OpportunityScoreCache" or "OpportunityScoreCalculator"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:10:1: error: Module "domain.symbols" has no attribute "OrderBookMetrics"; maybe "OrderBookMetricsData"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:10:1: error: Module "domain.symbols" has no attribute "PatternMetrics"; maybe "PatternMetricsData"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:10:1: error: Module "domain.symbols" has no attribute "SessionMetrics"; maybe "SessionMetricsData"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:211:39: error: "BaseException" object is not iterable  [misc]
application\symbol_selection\opportunity_selector.py:243:29: error: Item "None" of "SymbolMetricsProviderProtocol | None" has no attribute "get_symbol_metrics"  [union-attr]
application\symbol_selection\opportunity_selector.py:246:28: error: "MarketPhaseClassifier" has no attribute "classify_phase"; maybe "classify_market_phase"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:259:38: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:261:32: error: Unexpected keyword argument "total_volume" for "VolumeProfile"  [call-arg]
application\symbol_selection\opportunity_selector.py:261:32: error: Unexpected keyword argument "avg_volume" for "VolumeProfile"; did you mean "avg_volume_1m", "avg_volume_5m", or "avg_volume_15m"?  [call-arg]
application\symbol_selection\opportunity_selector.py:266:33: error: Unexpected keyword argument "support_levels" for "PriceStructure"; did you mean "support_level"?  [call-arg]
application\symbol_selection\opportunity_selector.py:266:33: error: Unexpected keyword argument "resistance_levels" for "PriceStructure"; did you mean "resistance_level"?  [call-arg]
application\symbol_selection\opportunity_selector.py:280:36: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:284:40: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:285:42: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:288:45: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:289:53: error: Name "np" is not defined  [name-defined]
application\symbol_selection\opportunity_selector.py:301:53: error: Argument 2 to "PriceStructure" has incompatible type "list[Never]"; expected "float"  [arg-type]
application\symbol_selection\opportunity_selector.py:301:57: error: Argument 3 to "PriceStructure" has incompatible type "list[Never]"; expected "float"  [arg-type]
application\symbol_selection\opportunity_selector.py:318:33: error: "SymbolFilters" has no attribute "apply_filters"  [attr-defined]
application\services\service_factory.py:22:1: error: Module "application.services.implementations.notification_service_impl" has no attribute "NotificationServiceImpl"  [attr-defined]
application\services\service_factory.py:112:52: error: Missing positional arguments "technical_analysis_service", "market_metrics_service" in call to "MarketServiceImpl"  [call-arg]
application\services\service_factory.py:112:70: error: Argument 1 to "MarketServiceImpl" has incompatible type "dict[str, Any]"; expected "MarketRepository"  [arg-type]
application\services\service_factory.py:126:52: error: Missing positional argument "ml_predictor" in call to "MLServiceImpl"  [call-arg]
application\services\service_factory.py:126:66: error: Argument 1 to "MLServiceImpl" has incompatible type "dict[str, Any]"; expected "MLRepository"  [arg-type]
application\services\service_factory.py:142:52: error: Missing positional argument "signal_service" in call to "TradingServiceImpl"  [call-arg]
application\services\service_factory.py:142:71: error: Argument 1 to "TradingServiceImpl" has incompatible type "dict[str, Any]"; expected "TradingRepository"  [arg-type]
application\services\service_factory.py:174:52: error: Missing positional argument "portfolio_optimizer" in call to "PortfolioServiceImpl"  [call-arg]
application\services\service_factory.py:174:73: error: Argument 1 to "PortfolioServiceImpl" has incompatible type "dict[str, Any]"; expected "PortfolioRepository"  [arg-type]
application\services\service_factory.py:194:52: error: Unexpected keyword argument "risk_calculator" for "RiskServiceImpl"  [call-arg]
application\services\implementations\risk_service_impl.py:22:5: note: "RiskServiceImpl" defined here
application\services\service_factory.py:292:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\service_factory.py:293:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\service_factory.py:317:20: error: Too many arguments for "ServiceFactory"  [call-arg]
application\services\service_factory.py:325:20: error: Too many arguments for "ServiceFactory"  [call-arg]
application\services\service_factory.py:341:12: error: Incompatible return value type (got "ServiceFactory | None", expected "ServiceFactory")  [return-value]
application\services\market_service.py:22:43: error: Too many arguments for "TechnicalAnalysisService"  [call-arg]
application\services\market_service.py:77:22: error: "TechnicalAnalysisService" has no attribute "get_technical_indicators"  [attr-defined]
application\services\market_service.py:123:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_service.py:128:53: error: Incompatible default for argument "alert_types" (default has type "None", argument has type "list[str]")  [assignment]
application\services\market_service.py:128:53: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
application\services\market_service.py:128:53: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
application\services\market_service.py:196:19: error: Name "ExchangeError" is not defined  [name-defined]
application\services\market_service.py:266:19: error: Name "ExchangeError" is not defined  [name-defined]
application\orchestration\trading_orchestrator.py:14:1: error: Module "application.use_cases.manage_orders" has no attribute "OrderManagementUseCase"; maybe "DefaultOrderManagementUseCase"?  [attr-defined]
application\orchestration\trading_orchestrator.py:319:13: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
application\orchestration\trading_orchestrator.py:335:76: error: Argument 2 to "check_order_risk" of "RiskManagementUseCase" has incompatible type "None"; expected "Portfolio"  [arg-type]
tests\integration\domain\test_symbols_workflow_integration.py:8:1: error: Module "domain.symbols" has no attribute "OrderBookMetrics"; maybe "OrderBookMetricsData"?  [attr-defined]
tests\integration\domain\test_symbols_workflow_integration.py:8:1: error: Module "domain.symbols" has no attribute "PatternMetrics"; maybe "PatternMetricsData"?  [attr-defined]
tests\integration\domain\test_symbols_workflow_integration.py:8:1: error: Module "domain.symbols" has no attribute "SessionMetrics"; maybe "SessionMetricsData"?  [attr-defined]
tests\e2e\test_symbols_performance_e2e.py:12:1: error: Module "domain.symbols" has no attribute "OrderBookMetrics"; maybe "OrderBookMetricsData"?  [attr-defined]
tests\e2e\test_symbols_performance_e2e.py:12:1: error: Module "domain.symbols" has no attribute "PatternMetrics"; maybe "PatternMetricsData"?  [attr-defined]
tests\e2e\test_symbols_performance_e2e.py:12:1: error: Module "domain.symbols" has no attribute "SessionMetrics"; maybe "SessionMetricsData"?  [attr-defined]
tests\e2e\test_symbols_e2e.py:9:1: error: Module "domain.symbols" has no attribute "OrderBookMetrics"; maybe "OrderBookMetricsData"?  [attr-defined]
tests\e2e\test_symbols_e2e.py:9:1: error: Module "domain.symbols" has no attribute "PatternMetrics"; maybe "PatternMetricsData"?  [attr-defined]
tests\e2e\test_symbols_e2e.py:9:1: error: Module "domain.symbols" has no attribute "SessionMetrics"; maybe "SessionMetricsData"?  [attr-defined]
tests\e2e\test_symbols_e2e.py:15:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "TradingOrchestrator"  [attr-defined]
tests\e2e\test_symbols_e2e.py:16:1: error: Module "domain.entities.trading" has no attribute "TradingDecision"; maybe "TradingSession"?  [attr-defined]
infrastructure\ml_services\model_selector.py:329:17: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\ml_services\model_selector.py:329:42: error: "DataFrame" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\model_selector.py:373:17: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\ml_services\model_selector.py:373:42: error: "DataFrame" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\model_selector.py:382:38: error: "DataFrame" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\model_selector.py:419:17: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\ml_services\model_selector.py:431:36: error: Value of type "Callable[[], ndarray[Any, Any]]" is not indexable  [index]
infrastructure\ml_services\model_selector.py:510:21: error: Item "DataFrame" of "DataFrame | dict[Never, Never]" has no attribute "to_dict"  [union-attr]
infrastructure\ml_services\model_selector.py:510:21: error: Item "dict[Never, Never]" of "DataFrame | dict[Never, Never]" has no attribute "to_dict"  [union-attr]
infrastructure\ml_services\model_selector.py:577:21: error: "DataFrame" has no attribute "values"  [attr-defined]
infrastructure\core\integration_manager.py:14:1: error: Module "infrastructure.agents.local_ai_controller" has no attribute "LocalAIController"  [attr-defined]
infrastructure\core\integration_manager.py:44:1: error: Module "infrastructure.simulation.backtester" has no attribute "Backtester"  [attr-defined]
infrastructure\core\integration_manager.py:85:30: error: Function "shared.unified_cache.get_cache_manager" is not valid as a type  [valid-type]
infrastructure\core\integration_manager.py:85:30: note: Perhaps you need "Callable[...]" or a callback protocol?
infrastructure\core\integration_manager.py:663:75: error: Incompatible default for argument "market_conditions" (default has type "None", argument has type "dict[str, Any]")  [assignment]
infrastructure\core\integration_manager.py:663:75: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\core\integration_manager.py:663:75: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\core\integration_manager.py:667:23: error: "AutonomousController" has no attribute "adapt_strategies"  [attr-defined]
infrastructure\core\integration_manager.py:703:17: error: Missing positional argument "type" in call to "Event"  [call-arg]
infrastructure\core\integration_manager.py:704:26: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\integration_manager.py:706:30: error: "type[EventPriority]" has no attribute "MEDIUM"  [attr-defined]
infrastructure\core\integration_manager.py:741:17: error: Missing positional argument "type" in call to "Event"  [call-arg]
infrastructure\core\integration_manager.py:742:26: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\integration_manager.py:757:13: error: Missing positional argument "type" in call to "Event"  [call-arg]
infrastructure\core\integration_manager.py:758:22: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\integration_manager.py:825:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\core\integration_manager.py:828:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\core\integration_manager.py:830:39: error: "HealthChecker" has no attribute "get_health_status"  [attr-defined]
infrastructure\core\integration_manager.py:831:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\core\integration_manager.py:835:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\core\integration_manager.py:848:23: error: "MetricsCollector" has no attribute "record_trade"  [attr-defined]
infrastructure\core\integration_manager.py:881:23: error: "AutonomousController" has no attribute "handle_health_issues"; maybe "_handle_health_issues"?  [attr-defined]
infrastructure\core\integration_manager.py:909:23: error: "MetricsCollector" has no attribute "record_evolution"  [attr-defined]
infrastructure\core\integration_manager.py:920:23: error: "MetricsCollector" has no attribute "record_performance_improvement"  [attr-defined]
infrastructure\core\integration_manager.py:937:13: error: Missing positional argument "type" in call to "Event"  [call-arg]
infrastructure\core\integration_manager.py:938:22: error: Argument "name" to "Event" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\auto_migration_manager.py:216:31: error: Name "np" is not defined  [name-defined]
infrastructure\agents\agent_context_refactored.py:25:1: error: Incompatible import of "FollowResult" (imported name has type "type[domain.interfaces.strategy_protocols.FollowResult]", local name has type "type[application.market.mm_follow_controller.FollowResult]")  [assignment]
infrastructure\agents\agent_context_refactored.py:25:1: error: Incompatible import of "FollowSignal" (imported name has type "type[domain.interfaces.strategy_protocols.FollowSignal]", local name has type "type[application.market.mm_follow_controller.FollowSignal]")  [assignment]
infrastructure\agents\agent_context_refactored.py:25:1: error: Incompatible import of "MirrorMap" (imported name has type "type[domain.interfaces.strategy_protocols.MirrorMap]", local name has type "type[application.strategy_advisor.mirror_map_builder.MirrorMap]")  [assignment]
infrastructure\agents\agent_context_refactored.py:25:1: error: Incompatible import of "SymbolSelectionResult" (imported name has type "type[domain.interfaces.strategy_protocols.SymbolSelectionResult]", local name has type "type[application.symbol_selection.types.SymbolSelectionResult]")  [assignment]
infrastructure\agents\agent_context_refactored.py:134:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:136:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:139:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:141:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:144:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:147:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:150:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:153:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:156:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:159:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:163:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:166:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\agents\agent_context_refactored.py:244:62: error: Argument "context" to "get_logger" has incompatible type "str"; expected "LogContext"  [arg-type]
infrastructure\agents\agent_context_refactored.py:269:29: error: Item "None" of "EntanglementResult | None" has no attribute "correlation_score"  [union-attr]
infrastructure\agents\agent_context_refactored.py:270:18: error: Item "None" of "EntanglementResult | None" has no attribute "lag_ms"  [union-attr]
infrastructure\agents\agent_context_refactored.py:271:22: error: Item "None" of "EntanglementResult | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:343:12: error: Item "None" of "FollowSignal | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:345:52: error: Item "None" of "FollowSignal | None" has no attribute "position_size_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:348:56: error: Item "None" of "FollowSignal | None" has no attribute "position_size_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:351:53: error: Item "None" of "FollowSignal | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:354:47: error: Item "None" of "FollowSignal | None" has no attribute "risk_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:357:52: error: Item "None" of "FollowSignal | None" has no attribute "stop_loss_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:361:16: error: Item "None" of "FollowSignal | None" has no attribute "entry_timing"  [union-attr]
infrastructure\agents\agent_context_refactored.py:363:18: error: Item "None" of "FollowSignal | None" has no attribute "entry_timing"  [union-attr]
infrastructure\agents\agent_context_refactored.py:367:18: error: Item "None" of "FollowSignal | None" has no attribute "entry_timing"  [union-attr]
infrastructure\agents\agent_context_refactored.py:372:14: error: Item "None" of "FollowSignal | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:376:24: error: Item "None" of "FollowSignal | None" has no attribute "position_size_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:380:24: error: Item "None" of "FollowSignal | None" has no attribute "position_size_modifier"  [union-attr]
infrastructure\agents\agent_context_refactored.py:384:24: error: Item "None" of "FollowSignal | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:400:47: error: Argument 2 to "_update_pattern_context" of "MarketMakerPatternModifierApplicator" has incompatible type "FollowSignal | None"; expected "FollowSignal"  [arg-type]
infrastructure\agents\agent_context_refactored.py:403:13: error: Item "None" of "FollowSignal | None" has no attribute "pattern_type"  [union-attr]
infrastructure\agents\agent_context_refactored.py:403:13: error: Item "None" of "FollowSignal | None" has no attribute "confidence"  [union-attr]
infrastructure\agents\agent_context_refactored.py:498:9: error: Item "None" of "AgentLogger | None" has no attribute "debug"  [union-attr]
infrastructure\agents\agent_context_refactored.py:571:17: error: Item "None" of "AgentLogger | None" has no attribute "error"  [union-attr]
infrastructure\agents\agent_context_refactored.py:581:9: error: Item "None" of "AgentLogger | None" has no attribute "debug"  [union-attr]
infrastructure\agents\agent_context_refactored.py:664:9: error: Item "None" of "AgentLogger | None" has no attribute "debug"  [union-attr]
infrastructure\agents\agent_context_refactored.py:671:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
examples\doass_integration_example.py:24:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:31:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:65:1: error: Module "domain.strategies" has no attribute "StrategyInterface"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:89:1: error: Module "infrastructure.ml_services.decision_reasoner" has no attribute "TradeDecision"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:166:30: error: Name "PositionRepository" is not defined  [name-defined]
application\use_cases\trading_orchestrator\core.py:167:31: error: Name "PortfolioRepository" is not defined  [name-defined]
application\use_cases\trading_orchestrator\core.py:301:32: error: Missing positional argument "orchestrator" in call to "UpdateHandlers"  [call-arg]
application\use_cases\trading_orchestrator\core.py:302:26: error: Missing positional argument "orchestrator" in call to "Modifiers"  [call-arg]
application\use_cases\trading_orchestrator\core.py:312:65: error: Argument 1 to "get_by_id" of "StrategyRepository" has incompatible type "StrategyId"; expected "EntityId"  [arg-type]
application\use_cases\trading_orchestrator\core.py:322:17: error: Argument 1 to "validate_trading_conditions" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:327:29: error: "Strategy" has no attribute "execute"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:327:46: error: "ExecuteStrategyRequest" has no attribute "market_data"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:332:29: error: Argument 2 to "_create_order_from_signal" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "strategy_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "portfolio_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "symbol" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "orders" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "signals" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:336:20: error: Unexpected keyword argument "execution_time" for "ExecuteStrategyResponse"; did you mean "execution_time_ms"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "strategy_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "portfolio_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "symbol" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "orders" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "signals" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "execution_time" for "ExecuteStrategyResponse"; did you mean "execution_time_ms"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:347:20: error: Unexpected keyword argument "error" for "ExecuteStrategyResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:363:29: error: "ExecuteStrategyRequest" has no attribute "strategy_name"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:394:25: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:397:33: error: Argument 2 to "_create_order_from_signal" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:400:24: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:400:24: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:400:24: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:400:24: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:401:31: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:408:24: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:408:24: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:408:24: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:408:24: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:408:24: error: Unexpected keyword argument "error" for "ProcessSignalResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:409:31: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:418:20: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:418:20: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:418:20: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:418:20: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:418:20: error: Unexpected keyword argument "error" for "ProcessSignalResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:419:27: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:435:17: error: Argument 1 to "calculate_portfolio_weights" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:444:39: error: "PortfolioRebalanceRequest" has no attribute "rebalance_threshold"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:447:46: error: Argument 3 to "_create_rebalance_order" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:451:20: error: Unexpected keyword argument "portfolio_id" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:451:20: error: Unexpected keyword argument "orders" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:451:20: error: Unexpected keyword argument "rebalance_time" for "PortfolioRebalanceResponse"; did you mean "rebalance_cost"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:454:33: error: Argument "current_weights" to "PortfolioRebalanceResponse" has incompatible type "dict[str, Decimal]"; expected "dict[Symbol, Decimal]"  [arg-type]
application\use_cases\trading_orchestrator\core.py:461:20: error: Unexpected keyword argument "portfolio_id" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:461:20: error: Unexpected keyword argument "orders" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:461:20: error: Unexpected keyword argument "rebalance_time" for "PortfolioRebalanceResponse"; did you mean "rebalance_cost"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:461:20: error: Unexpected keyword argument "error" for "PortfolioRebalanceResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:479:29: error: "SessionService" has no attribute "create_session"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:507:29: error: "SessionService" has no attribute "stop_session"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:524:29: error: "SessionService" has no attribute "get_session"; maybe "get_session_phase"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:601:19: error: "OrderRepository" has no attribute "create"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:626:19: error: "OrderRepository" has no attribute "create"  [attr-defined]
application\services\market_service_factory.py:18:9: error: Need type annotation for "_services_cache" (hint: "_services_cache: dict[<type>, <type>] = ...")  [var-annotated]
application\services\market_service_factory.py:40:17: error: Too many arguments for "TechnicalAnalysisService"  [call-arg]
tests\unit\test_integration_manager.py:356:23: error: Unexpected keyword argument "name" for "Event"  [call-arg]
tests\unit\test_integration_manager.py:359:24: error: "type[EventType]" has no attribute "TRADE"  [attr-defined]
tests\unit\test_integration_manager.py:362:22: error: Unexpected keyword argument "name" for "Event"  [call-arg]
tests\unit\test_integration_manager.py:365:24: error: "type[EventType]" has no attribute "RISK"  [attr-defined]
tests\unit\test_integration_manager.py:369:54: error: Argument 1 to "_on_trade_executed" of "IntegrationManager" has incompatible type "domain.types.infrastructure_types.Event"; expected "domain.types.messaging_types.Event"  [arg-type]
tests\unit\test_integration_manager.py:370:59: error: Argument 1 to "_on_risk_limit_exceeded" of "IntegrationManager" has incompatible type "domain.types.infrastructure_types.Event"; expected "domain.types.messaging_types.Event"  [arg-type]
tests\unit\test_integration_manager.py:392:9: error: "IntegrationManager" has no attribute "cleanup"  [attr-defined]
tests\performance\test_infrastructure_performance.py:27:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\performance\test_infrastructure_performance.py:28:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\performance\test_infrastructure_performance.py:29:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\performance\test_infrastructure_performance.py:328:24: error: Argument "id" to "Order" has incompatible type "UUID"; expected "OrderId"  [arg-type]
tests\performance\test_infrastructure_performance.py:329:34: error: "type[TradingPair]" has no attribute "from_string"  [attr-defined]
tests\performance\test_infrastructure_performance.py:332:30: error: Argument "quantity" to "Order" has incompatible type "Decimal"; expected "VolumeValue"  [arg-type]
tests\performance\test_infrastructure_performance.py:333:27: error: Argument "price" to "Order" has incompatible type "Money"; expected "Price | None"  [arg-type]
tests\performance\test_infrastructure_performance.py:335:32: error: Argument "created_at" to "Order" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
tests\performance\test_infrastructure_performance.py:336:32: error: Argument "updated_at" to "Order" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionRepository"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionCache"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionValidator"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionMetricsCalculator"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionPatternRecognizer"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionTransitionManager"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionPredictor"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionOptimizer"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionMonitor"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionAnalytics"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionRiskAnalyzer"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:84:35: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_infrastructure_integration.py:86:16: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_infrastructure_integration.py:87:26: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_infrastructure_integration.py:99:27: error: "type[SessionPhase]" has no attribute "ACTIVE"  [attr-defined]
tests\integration\test_sessions_infrastructure_integration.py:101:24: error: Argument "confidence" to "SessionAnalysisResult" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\integration\test_sessions_infrastructure_integration.py:102:21: error: Missing keys ("volume_change_percent", "volatility_change_percent", "price_direction_bias", "momentum_strength", "false_breakout_probability", "reversal_probability", "trend_continuation_probability", "influence_duration_minutes", "peak_influence_time_minutes", "spread_impact", "liquidity_impact", "correlation_with_other_sessions") for TypedDict "SessionMetrics"  [typeddict-item]
tests\integration\test_sessions_infrastructure_integration.py:102:21: error: Extra keys ("volatility", "volume_change", "price_change", "momentum", "trend_strength") for TypedDict "SessionMetrics"  [typeddict-unknown-key]
tests\integration\test_sessions_infrastructure_integration.py:109:31: error: Missing keys ("volatility", "volume", "spread", "liquidity", "momentum", "trend_strength", "session_intensity") for TypedDict "MarketConditions"  [typeddict-item]
tests\integration\test_sessions_infrastructure_integration.py:109:31: error: Extra keys ("liquidity_level", "spread_width", "volatility_regime") for TypedDict "MarketConditions"  [typeddict-unknown-key]
tests\integration\test_sessions_infrastructure_integration.py:110:31: error: Incompatible types (expression has type "str", TypedDict item "market_regime" has type "MarketRegime")  [typeddict-item]
tests\integration\test_sessions_infrastructure_integration.py:116:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\integration\test_sessions_infrastructure_integration.py:120:26: error: Argument "risk_factors" to "SessionAnalysisResult" has incompatible type "dict[str, str]"; expected "list[str]"  [arg-type]
infrastructure\core\system_integration.py:48:1: error: Module "infrastructure.core.exchange" has no attribute "ExchangeManager"  [attr-defined]
infrastructure\core\system_integration.py:50:1: error: Module "infrastructure.core.fibonacci_tools" has no attribute "FibonacciAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:50:1: error: Module "infrastructure.core.fibonacci_tools" has no attribute "FibonacciCalculator"  [attr-defined]
infrastructure\core\system_integration.py:50:1: error: Module "infrastructure.core.fibonacci_tools" has no attribute "FibonacciExtension"  [attr-defined]
infrastructure\core\system_integration.py:50:1: error: Module "infrastructure.core.fibonacci_tools" has no attribute "FibonacciRetracement"  [attr-defined]
infrastructure\core\system_integration.py:61:1: error: Module "infrastructure.core.market_regime" has no attribute "RegimeAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:61:1: error: Module "infrastructure.core.market_regime" has no attribute "RegimeClassifier"  [attr-defined]
infrastructure\core\system_integration.py:61:1: error: Module "infrastructure.core.market_regime" has no attribute "RegimeMetrics"  [attr-defined]
infrastructure\core\system_integration.py:61:1: error: Module "infrastructure.core.market_regime" has no attribute "RegimeTransition"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "FinancialUtils"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "MathUtils"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "MatrixUtils"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "OptimizationUtils"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "StatisticalUtils"  [attr-defined]
infrastructure\core\system_integration.py:69:1: error: Module "infrastructure.core.math_utils" has no attribute "VectorUtils"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "MomentumAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "SupportResistance"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "TechnicalAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "TechnicalIndicatorsService"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "TechnicalPatterns"  [attr-defined]
infrastructure\core\system_integration.py:86:1: error: Module "infrastructure.core.technical" has no attribute "TrendAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "ADX"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "ATR"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "CCI"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "EMA"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "RSI"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "SMA"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "BollingerBands"; maybe "bollinger_bands"?  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "StochasticOscillator"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "TechnicalAnalysisService"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "TechnicalIndicators"  [attr-defined]
infrastructure\core\system_integration.py:96:1: error: Module "infrastructure.core.technical_analysis" has no attribute "WilliamsR"  [attr-defined]
infrastructure\core\system_integration.py:110:1: error: Module "infrastructure.core.timeframes" has no attribute "MultiTimeframeAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:110:1: error: Module "infrastructure.core.timeframes" has no attribute "TimeframeAnalysis"  [attr-defined]
infrastructure\core\system_integration.py:110:1: error: Module "infrastructure.core.timeframes" has no attribute "TimeframeConverter"  [attr-defined]
infrastructure\core\system_integration.py:110:1: error: Module "infrastructure.core.timeframes" has no attribute "TimeframeManager"  [attr-defined]
infrastructure\core\system_integration.py:110:1: error: Module "infrastructure.core.timeframes" has no attribute "TimeframeOptimizer"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "ChartRenderer"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "MarketVisualization"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "PerformanceChart"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "PlotManager"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "RiskChart"  [attr-defined]
infrastructure\core\system_integration.py:117:1: error: Module "infrastructure.core.visualization" has no attribute "TechnicalChart"  [attr-defined]
infrastructure\core\system_integration.py:125:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletAnalyzer"  [attr-defined]
infrastructure\core\system_integration.py:125:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletDecomposition"  [attr-defined]
infrastructure\core\system_integration.py:125:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletFeatures"  [attr-defined]
infrastructure\core\system_integration.py:125:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletReconstruction"  [attr-defined]
infrastructure\core\system_integration.py:125:1: error: Module "infrastructure.core.wavelet_tools" has no attribute "WaveletTransform"  [attr-defined]
infrastructure\core\system_integration.py:244:31: error: Incompatible types in assignment (expression has type "datetime", variable has type "None")  [assignment]
infrastructure\core\system_integration.py:287:65: error: Argument 1 to "CircuitBreaker" has incompatible type "infrastructure.messaging.event_bus.EventBus"; expected "infrastructure.messaging.optimized_event_bus.EventBus"  [arg-type]
infrastructure\core\system_integration.py:295:43: error: Missing positional argument "connection_string" in call to "Database"  [call-arg]
infrastructure\core\system_integration.py:299:53: error: Missing positional argument "connection_string" in call to "OptimizedDatabase"  [call-arg]
infrastructure\core\system_integration.py:319:51: error: Missing positional argument "config" in call to "PositionManager"  [call-arg]
infrastructure\core\system_integration.py:332:17: error: Argument 1 to "AutonomousController" has incompatible type "infrastructure.messaging.event_bus.EventBus"; expected "infrastructure.messaging.optimized_event_bus.EventBus"  [arg-type]
infrastructure\core\system_integration.py:385:47: error: Missing positional arguments "timestamp", "price", "volume", "volatility", "trend", "indicators", "market_regime", "liquidity", "momentum", "sentiment", "support_levels", "resistance_levels", "market_depth", "correlation_matrix", "market_impact", "volume_profile" in call to "MarketState"  [call-arg]
infrastructure\core\system_integration.py:429:34: error: Argument 1 to "subscribe" of "EventBus" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\system_integration.py:429:60: error: Argument 2 to "subscribe" of "EventBus" has incompatible type "Callable[[domain.types.infrastructure_types.Event], Coroutine[Any, Any, None]]"; expected "Callable[[domain.types.messaging_types.Event], Awaitable[None] | None]"  [arg-type]
infrastructure\core\system_integration.py:431:34: error: Argument 1 to "subscribe" of "EventBus" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\system_integration.py:431:57: error: Argument 2 to "subscribe" of "EventBus" has incompatible type "Callable[[domain.types.infrastructure_types.Event], Coroutine[Any, Any, None]]"; expected "Callable[[domain.types.messaging_types.Event], Awaitable[None] | None]"  [arg-type]
infrastructure\core\system_integration.py:433:34: error: Argument 1 to "subscribe" of "EventBus" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\system_integration.py:433:52: error: Argument 2 to "subscribe" of "EventBus" has incompatible type "Callable[[domain.types.infrastructure_types.Event], Coroutine[Any, Any, None]]"; expected "Callable[[domain.types.messaging_types.Event], Awaitable[None] | None]"  [arg-type]
infrastructure\core\system_integration.py:435:34: error: Argument 1 to "subscribe" of "EventBus" has incompatible type "str"; expected "EventName"  [arg-type]
infrastructure\core\system_integration.py:435:61: error: Argument 2 to "subscribe" of "EventBus" has incompatible type "Callable[[domain.types.infrastructure_types.Event], Coroutine[Any, Any, None]]"; expected "Callable[[domain.types.messaging_types.Event], Awaitable[None] | None]"  [arg-type]
application\di_container_refactored.py:44:1: error: Module "domain.evolution" has no attribute "StrategyOptimizer"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "AnalysisConfig"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "BehaviorHistoryRepository"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "MarketMakerStorage"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "PatternAnalyzer"; maybe "IPatternAnalyzer"?  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "PatternMemoryRepository"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "SimilarityCalculator"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "StorageConfig"  [attr-defined]
application\di_container_refactored.py:129:1: error: Module "infrastructure.market_profiles" has no attribute "SuccessRateAnalyzer"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionAnalytics"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionCache"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionMetricsCalculator"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionMonitor"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionOptimizer"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionPatternRecognizer"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionPredictor"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionRepository"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionRiskAnalyzer"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionTransitionManager"  [attr-defined]
application\di_container_refactored.py:152:1: error: Module "infrastructure.sessions" has no attribute "SessionValidator"  [attr-defined]
application\di_container_refactored.py:214:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\di_container_refactored.py:263:23: error: Need type annotation for "spread_analyzer"  [var-annotated]
application\di_container_refactored.py:263:43: error: Name "SpreadAnalyzer" is not defined  [name-defined]
application\di_container_refactored.py:264:26: error: Need type annotation for "liquidity_analyzer"  [var-annotated]
application\di_container_refactored.py:265:9: error: Name "LiquidityAnalyzer" is not defined  [name-defined]
application\di_container_refactored.py:267:20: error: Need type annotation for "ml_predictor"  [var-annotated]
application\di_container_refactored.py:267:40: error: Name "MLPredictor" is not defined  [name-defined]
application\di_container_refactored.py:315:26: error: Need type annotation for "session_repository"  [var-annotated]
application\di_container_refactored.py:318:21: error: Need type annotation for "session_cache"  [var-annotated]
application\di_container_refactored.py:319:25: error: Need type annotation for "session_validator"  [var-annotated]
application\di_container_refactored.py:320:34: error: Need type annotation for "session_metrics_calculator"  [var-annotated]
application\di_container_refactored.py:321:34: error: Need type annotation for "session_pattern_recognizer"  [var-annotated]
application\di_container_refactored.py:322:34: error: Need type annotation for "session_transition_manager"  [var-annotated]
application\di_container_refactored.py:323:25: error: Need type annotation for "session_predictor"  [var-annotated]
application\di_container_refactored.py:324:25: error: Need type annotation for "session_optimizer"  [var-annotated]
application\di_container_refactored.py:325:23: error: Need type annotation for "session_monitor"  [var-annotated]
application\di_container_refactored.py:326:25: error: Need type annotation for "session_analytics"  [var-annotated]
application\di_container_refactored.py:327:29: error: Need type annotation for "session_risk_analyzer"  [var-annotated]
application\di_container_refactored.py:428:28: error: Need type annotation for "market_maker_storage"  [var-annotated]
application\di_container_refactored.py:431:33: error: Need type annotation for "pattern_memory_repository"  [var-annotated]
application\di_container_refactored.py:432:35: error: Need type annotation for "behavior_history_repository"  [var-annotated]
application\di_container_refactored.py:433:24: error: Need type annotation for "pattern_analyzer"  [var-annotated]
application\di_container_refactored.py:436:29: error: Need type annotation for "similarity_calculator"  [var-annotated]
application\di_container_refactored.py:437:29: error: Need type annotation for "success_rate_analyzer"  [var-annotated]
application\di_container_refactored.py:445:26: error: Need type annotation for "strategy_optimizer"  [var-annotated]
application\di_container_refactored.py:457:38: error: Need type annotation for "risk_analysis_service_external"  [var-annotated]
application\di_container_refactored.py:457:58: error: Name "RiskAnalysisServiceAdapter" is not defined  [name-defined]
application\di_container_refactored.py:458:43: error: Need type annotation for "technical_analysis_service_external"  [var-annotated]
application\di_container_refactored.py:459:9: error: Name "TechnicalAnalysisServiceAdapter" is not defined  [name-defined]
application\di_container_refactored.py:530:13: error: Name "RiskAnalysisServiceAdapter" is not defined  [name-defined]
application\di_container_refactored.py:531:13: error: Name "TechnicalAnalysisServiceAdapter" is not defined  [name-defined]
main.py:59:1: error: Module "infrastructure.simulation.backtester" has no attribute "Backtester"  [attr-defined]
main.py:118:5: error: Incompatible import of "MonitoringDashboard" (imported name has type "type[shared.monitoring_dashboard.MonitoringDashboard]", local name has type "type[infrastructure.monitoring.monitoring_dashboard.MonitoringDashboard]")  [assignment]
main.py:119:5: error: Module "shared.exception_handler" has no attribute "ExceptionHandler"; maybe "SafeExceptionHandler"?  [attr-defined]
tests\unit\test_module_integrations.py:8:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
tests\unit\test_module_integrations.py:13:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\integration\test_symbols_integration.py:7:1: error: Module "domain.symbols" has no attribute "SymbolCache"; maybe "MemorySymbolCache" or "SymbolCacheManager"?  [attr-defined]
tests\integration\test_symbols_integration.py:13:1: error: Module "application.use_cases.trading_orchestrator" has no attribute "DefaultTradingOrchestratorUseCase"  [attr-defined]
tests\integration\test_symbols_integration.py:34:16: error: Unexpected keyword argument "volume" for "SymbolProfile"  [call-arg]
tests\integration\test_symbols_integration.py:34:16: error: Unexpected keyword argument "spread" for "SymbolProfile"  [call-arg]
tests\integration\test_symbols_integration.py:34:16: error: Unexpected keyword argument "volatility" for "SymbolProfile"  [call-arg]
tests\integration\test_symbols_integration.py:34:16: error: Unexpected keyword argument "orderbook_metrics" for "SymbolProfile"; did you mean "order_book_metrics"?  [call-arg]
tests\integration\test_symbols_integration.py:37:26: error: "type[MarketPhase]" has no attribute "BULLISH"  [attr-defined]
tests\integration\test_symbols_integration.py:124:85: error: "type[MarketPhase]" has no attribute "BULLISH"  [attr-defined]
tests\integration\test_symbols_integration.py:148:25: error: "type[MarketPhase]" has no attribute "BULLISH"  [attr-defined]
tests\integration\test_symbols_integration.py:170:17: error: Incompatible types in "await" (actual type "MarketPhaseResult", expected type "Awaitable[Any]")  [misc]
tests\integration\test_symbols_integration.py:170:56: error: Argument 1 to "classify_market_phase" of "MarketPhaseClassifier" has incompatible type "str"; expected "MarketDataFrame"  [arg-type]
tests\integration\test_symbols_integration.py:173:17: error: Incompatible types in "await" (actual type "OpportunityScoreResult", expected type "Awaitable[Any]")  [misc]
tests\integration\test_symbols_integration.py:173:23: error: Missing positional arguments "market_data", "order_book" in call to "calculate_opportunity_score" of "OpportunityScoreCalculator"  [call-arg]
tests\integration\test_symbols_integration.py:186:9: error: Cannot assign to a method  [method-assign]
tests\integration\test_symbols_integration.py:201:52: error: "type[MarketPhase]" has no attribute "BULLISH"  [attr-defined]
tests\integration\test_symbols_integration.py:203:16: error: "SymbolProfile" has no attribute "volume"  [attr-defined]
tests\integration\test_symbols_integration.py:204:16: error: "SymbolProfile" has no attribute "spread"  [attr-defined]
tests\integration\test_symbols_integration.py:205:16: error: "SymbolProfile" has no attribute "volatility"  [attr-defined]
tests\integration\test_symbols_integration.py:209:16: error: "SymbolProfile" has no attribute "orderbook_metrics"; maybe "order_book_metrics"?  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionRepository"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionCache"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionValidator"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionMetricsCalculator"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionPatternRecognizer"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionTransitionManager"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionPredictor"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionOptimizer"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionMonitor"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionAnalytics"  [attr-defined]
tests\integration\test_sessions_di_integration.py:15:1: error: Module "infrastructure.sessions" has no attribute "SessionRiskAnalyzer"  [attr-defined]
tests\integration\test_sessions_di_integration.py:61:35: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_di_integration.py:63:16: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_di_integration.py:64:26: error: Name "pd" is not defined  [name-defined]
tests\integration\test_sessions_di_integration.py:76:27: error: "type[SessionPhase]" has no attribute "ACTIVE"  [attr-defined]
tests\integration\test_sessions_di_integration.py:78:24: error: Argument "confidence" to "SessionAnalysisResult" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
tests\integration\test_sessions_di_integration.py:79:21: error: Missing keys ("volume_change_percent", "volatility_change_percent", "price_direction_bias", "momentum_strength", "false_breakout_probability", "reversal_probability", "trend_continuation_probability", "influence_duration_minutes", "peak_influence_time_minutes", "spread_impact", "liquidity_impact", "correlation_with_other_sessions") for TypedDict "SessionMetrics"  [typeddict-item]
tests\integration\test_sessions_di_integration.py:79:21: error: Extra keys ("volatility", "volume_change", "price_change", "momentum", "trend_strength") for TypedDict "SessionMetrics"  [typeddict-unknown-key]
tests\integration\test_sessions_di_integration.py:86:31: error: Missing keys ("volatility", "volume", "spread", "liquidity", "momentum", "trend_strength", "session_intensity") for TypedDict "MarketConditions"  [typeddict-item]
tests\integration\test_sessions_di_integration.py:86:31: error: Extra keys ("liquidity_level", "spread_width", "volatility_regime") for TypedDict "MarketConditions"  [typeddict-unknown-key]
tests\integration\test_sessions_di_integration.py:87:31: error: Incompatible types (expression has type "str", TypedDict item "market_regime" has type "MarketRegime")  [typeddict-item]
tests\integration\test_sessions_di_integration.py:93:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
tests\integration\test_sessions_di_integration.py:97:26: error: Argument "risk_factors" to "SessionAnalysisResult" has incompatible type "dict[str, str]"; expected "list[str]"  [arg-type]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "MarketMakerStorage"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "PatternMemoryRepository"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "BehaviorHistoryRepository"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "PatternAnalyzer"; maybe "IPatternAnalyzer"?  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "SimilarityCalculator"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "SuccessRateAnalyzer"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "StorageConfig"  [attr-defined]
tests\integration\test_market_profiles_integration.py:7:1: error: Module "infrastructure.market_profiles" has no attribute "AnalysisConfig"  [attr-defined]
tests\integration\test_market_profiles_integration.py:31:16: error: Unexpected keyword argument "market_profiles_enabled" for "ContainerConfig"  [call-arg]
tests\integration\test_market_profiles_integration.py:31:16: error: Unexpected keyword argument "pattern_analysis_enabled" for "ContainerConfig"; did you mean "technical_analysis_enabled"?  [call-arg]
tests\integration\test_market_profiles_integration.py:31:16: error: Unexpected keyword argument "storage_enabled" for "ContainerConfig"  [call-arg]
tests\integration\test_market_profiles_integration.py:68:35: error: Extra keys ("depth_imbalance", "flow_imbalance") for TypedDict "MarketMicrostructure"  [typeddict-unknown-key]
tests\integration\test_market_profiles_integration.py:75:20: error: Argument "symbol" to "MarketMakerPattern" has incompatible type "str"; expected "Symbol"  [arg-type]
tests\integration\test_market_profiles_integration.py:79:21: error: Extra keys ("market_regime", "session") for TypedDict "PatternContext"  [typeddict-unknown-key]
tests\integration\test_market_profiles_integration.py:141:20: error: Argument "symbol" to "MarketMakerPattern" has incompatible type "str"; expected "Symbol"  [arg-type]
tests\integration\test_market_profiles_integration.py:145:21: error: Extra keys ("market_regime", "session") for TypedDict "PatternContext"  [typeddict-unknown-key]
tests\integration\test_market_profiles_integration.py:163:18: error: Unexpected keyword argument "price_change_1h" for "PatternResult"; did you mean "price_change_15min", "price_change_5min", or "price_change_30min"?  [call-arg]
tests\integration\test_market_profiles_integration.py:163:18: error: Unexpected keyword argument "execution_time" for "PatternResult"  [call-arg]
tests\integration\test_market_profiles_integration.py:163:18: error: Unexpected keyword argument "confidence" for "PatternResult"  [call-arg]
tests\integration\test_market_profiles_integration.py:184:9: error: Module "infrastructure.market_profiles.models" has no attribute "MarketMakerPatternType"  [attr-defined]
tests\integration\test_market_profiles_integration.py:223:9: error: Module "infrastructure.market_profiles.models" has no attribute "MarketMakerPatternType"  [attr-defined]
tests\integration\test_market_profiles_integration.py:270:24: error: Argument "symbol" to "MarketMakerPattern" has incompatible type "str"; expected "Symbol"  [arg-type]
tests\integration\test_market_profiles_integration.py:274:25: error: Extra key "test" for TypedDict "PatternContext"  [typeddict-unknown-key]
tests\integration\test_market_profiles_integration.py:300:16: error: "ContainerConfig" has no attribute "market_profiles_enabled"  [attr-defined]
tests\integration\test_market_profiles_integration.py:301:16: error: "ContainerConfig" has no attribute "pattern_analysis_enabled"; maybe "technical_analysis_enabled"?  [attr-defined]
tests\integration\test_market_profiles_integration.py:302:16: error: "ContainerConfig" has no attribute "storage_enabled"  [attr-defined]
tests\integration\test_market_profiles_integration.py:323:24: error: Argument "symbol" to "MarketMakerPattern" has incompatible type "str"; expected "Symbol"  [arg-type]
tests\integration\test_market_profiles_integration.py:327:25: error: Extra key "concurrent_test" for TypedDict "PatternContext"  [typeddict-unknown-key]
tests\integration\test_domain_services_integration.py:8:1: error: Module "domain.services.correlation_chain" has no attribute "CorrelationChainService"; maybe "CorrelationChain" or "ICorrelationChain"?  [attr-defined]
tests\e2e\test_orchestrator_session_integration.py:13:5: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\e2e\test_orchestrator_session_integration.py:14:5: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
tests\integration\test_evolution_integration.py:12:1: error: Module "main" has no attribute "Syntra"  [attr-defined]
scripts\start_atb.py:17:1: error: Module "main" has no attribute "Syntra"  [attr-defined]
Found 5234 errors in 393 files (checked 1092 source files)
