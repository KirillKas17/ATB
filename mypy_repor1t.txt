domain\entities\strategy_parameters.py:137:13: error: Dict entry 2 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_parameters.py:141:13: error: Dict entry 6 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_parameters.py:189:24: error: Argument "parameters" to "StrategyParameters" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_parameters.py:189:24: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_parameters.py:189:24: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\strategy_parameters.py:193:22: error: Argument "metadata" to "StrategyParameters" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_parameters.py:193:22: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_parameters.py:193:22: note: Consider using "Mapping" instead, which is covariant in the value type
domain\types\repository_types.py:249:34: error: A function returning TypeVar should receive at least one argument containing the same TypeVar  [type-var]
domain\types\repository_types.py:298:1: error: Cannot redefine "T" as a type variable  [misc]
domain\types\repository_types.py:298:1: error: Invalid assignment target  [misc]
domain\types\repository_types.py:321:1: error: Invariant type variable "T" used in protocol where contravariant one is expected  [misc]
domain\types\repository_types.py:321:1: error: Invariant type variable "R" used in protocol where covariant one is expected  [misc]
domain\types\repository_types.py:327:1: error: Invariant type variable "T" used in protocol where contravariant one is expected  [misc]
domain\types\repository_types.py:327:1: error: Invariant type variable "R" used in protocol where covariant one is expected  [misc]
domain\types\repository_types.py:333:1: error: Invariant type variable "T" used in protocol where contravariant one is expected  [misc]
domain\types\repository_types.py:333:1: error: Invariant type variable "R" used in protocol where covariant one is expected  [misc]
domain\value_objects\signal.py:103:5: error: Return type "ValidationResult" of "validate" incompatible with return type "bool" in supertype "ValueObject"  [override]
domain\value_objects\signal.py:244:33: error: Item "None" of "dict[str, Decimal] | None" has no attribute "items"  [union-attr]
domain\value_objects\signal.py:250:33: error: Item "None" of "dict[str, Decimal] | None" has no attribute "items"  [union-attr]
domain\value_objects\signal.py:271:16: error: "bool" not callable  [operator]
domain\value_objects\signal.py:275:35: error: "bool" not callable  [operator]
domain\value_objects\signal.py:279:38: error: "bool" not callable  [operator]
domain\value_objects\trading_pair.py:140:16: error: Incompatible return value type (got "Literal[''] | bool", expected "bool")  [return-value]
domain\value_objects\money_cache.py:25:88: error: "str" has no attribute "code"; maybe "encode"?  [attr-defined]
domain\value_objects\percentage.py:88:5: error: Return type "ValidationResult" of "validate" incompatible with return type "bool" in supertype "ValueObject"  [override]
domain\value_objects\money.py:87:5: error: Signature of "currency" incompatible with supertype "CurrencyValueObject"  [override]
domain\value_objects\money.py:87:5: note:      Superclass:
domain\value_objects\money.py:87:5: note:          CurrencyCode
domain\value_objects\money.py:87:5: note:      Subclass:
domain\value_objects\money.py:87:5: note:          str
domain\value_objects\volume.py:108:5: error: Return type "ValidationResult" of "validate" incompatible with return type "bool" in supertype "ValueObject"  [override]
domain\value_objects\factory.py:64:39: error: Incompatible types in assignment (expression has type "dict[str, type]", variable has type "ValueObjectFactory")  [assignment]
domain\value_objects\factory.py:77:37: error: Bad number of arguments for type alias, expected 0, given 1  [type-arg]
domain\value_objects\factory.py:82:84: error: Argument 1 to "len" has incompatible type "ValueObjectFactory"; expected "Sized"  [arg-type]
domain\value_objects\factory.py:220:39: error: "ValidationContext" has no attribute "max_precision"  [attr-defined]
domain\value_objects\factory.py:222:40: error: "ValidationContext" has no attribute "max_precision"  [attr-defined]
domain\value_objects\factory.py:353:16: error: Unsupported right operand type for in ("ValueObjectFactory")  [operator]
domain\value_objects\factory.py:356:34: error: Value of type "ValueObjectFactory" is not indexable  [index]
domain\value_objects\factory.py:370:20: error: Incompatible return value type (got "dict[str, Any]", expected "ValueObjectDict")  [return-value]
domain\value_objects\factory.py:377:16: error: Only protocols that don't have non-method members can be used with issubclass()  [misc]
domain\value_objects\factory.py:377:16: note: Protocol "ValueObject" has non-method member(s): hash, value
domain\value_objects\factory.py:380:9: error: Unsupported target for indexed assignment ("ValueObjectFactory")  [index]
domain\value_objects\factory.py:385:21: error: "ValueObjectFactory" has no attribute "keys"  [attr-defined]
domain\value_objects\factory.py:405:24: error: Incompatible return value type (got "Currency", expected "ValueObject")  [return-value]
domain\value_objects\factory.py:405:24: note: "Currency" is missing following "ValueObject" protocol members:
domain\value_objects\factory.py:405:24: note:     hash, to_dict
domain\value_objects\factory.py:421:23: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\value_objects\factory.py:421:23: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\value_objects\factory.py:431:20: error: "dict[str, Any]" has no attribute "is_expired"  [attr-defined]
domain\value_objects\factory.py:433:46: error: "dict[str, Any]" has no attribute "increment_access"  [attr-defined]
domain\value_objects\factory.py:434:24: error: "dict[str, Any]" has no attribute "value"; maybe "values"?  [attr-defined]
domain\value_objects\factory.py:437:24: error: callable? not callable  [misc]
domain\value_objects\factory.py:458:64: error: "dict[str, Any]" has no attribute "created_at"  [attr-defined]
domain\value_objects\factory.py:478:28: error: "dict[str, Any]" has no attribute "access_count"  [attr-defined]
domain\value_objects\factory.py:484:33: error: "dict[str, Any]" has no attribute "created_at"  [attr-defined]
domain\value_objects\factory.py:485:33: error: "dict[str, Any]" has no attribute "created_at"  [attr-defined]
domain\entities\signal.py:107:13: error: Dict entry 6 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:108:13: error: Dict entry 7 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:109:13: error: Dict entry 8 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:110:13: error: Dict entry 9 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:112:13: error: Dict entry 11 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:114:13: error: Dict entry 13 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\signal.py:213:16: error: Unexpected keyword argument "signal_id" for "Signal"  [call-arg]
domain\entities\signal.py:213:16: error: Unexpected keyword argument "entry_price" for "Signal"  [call-arg]
domain\entities\signal.py:221:23: error: Argument "stop_loss" to "Signal" has incompatible type "Decimal | None"; expected "Money | None"  [arg-type]
domain\entities\signal.py:222:25: error: Argument "take_profit" to "Signal" has incompatible type "Decimal | None"; expected "Money | None"  [arg-type]
domain\entities\signal.py:225:22: error: Argument "metadata" to "Signal" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\signal.py:225:22: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\signal.py:225:22: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\orderbook.py:56:20: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\orderbook.py:77:45: error: Argument "currency" to "Volume" has incompatible type "Currency | str | None"; expected "Currency | None"  [arg-type]
domain\entities\orderbook.py:83:45: error: Argument "currency" to "Volume" has incompatible type "Currency | str | None"; expected "Currency | None"  [arg-type]
domain\entities\orderbook.py:158:14: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\orderbook.py:158:50: error: Argument "currency" to "Price" has incompatible type "str"; expected "Currency"  [arg-type]
domain\entities\orderbook.py:158:97: error: Argument "currency" to "Volume" has incompatible type "str"; expected "Currency | None"  [arg-type]
domain\entities\orderbook.py:164:14: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\orderbook.py:164:50: error: Argument "currency" to "Price" has incompatible type "str"; expected "Currency"  [arg-type]
domain\entities\orderbook.py:164:97: error: Argument "currency" to "Volume" has incompatible type "str"; expected "Currency | None"  [arg-type]
shared\models\orderbook.py:27:20: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\value_objects\__init__.py:9:1: error: Module "domain.value_objects.currency" has no attribute "CurrencyPair"; maybe "Currency"?  [attr-defined]
domain\value_objects\__init__.py:27:1: error: Cannot find implementation or library stub for module named "domain.value_objects.confidence"  [import-not-found]
domain\value_objects\__init__.py:28:1: error: Cannot find implementation or library stub for module named "domain.value_objects.ratio"  [import-not-found]
domain\value_objects\__init__.py:29:1: error: Cannot find implementation or library stub for module named "domain.value_objects.duration"  [import-not-found]
domain\value_objects\__init__.py:30:1: error: Cannot find implementation or library stub for module named "domain.value_objects.frequency"  [import-not-found]
domain\value_objects\__init__.py:31:1: error: Cannot find implementation or library stub for module named "domain.value_objects.identifier"  [import-not-found]
domain\value_objects\__init__.py:32:1: error: Cannot find implementation or library stub for module named "domain.value_objects.status"  [import-not-found]
domain\value_objects\__init__.py:33:1: error: Cannot find implementation or library stub for module named "domain.value_objects.side"  [import-not-found]
domain\value_objects\__init__.py:34:1: error: Cannot find implementation or library stub for module named "domain.value_objects.type"  [import-not-found]
shared\cache.py:229:16: error: Incompatible return value type (got "CacheProtocol | None", expected "CacheProtocol")  [return-value]
domain\types\messaging_types.py:175:53: error: Argument "default_factory" to "field" has incompatible type "type[EventMetadata]"; expected "Callable[[], EventMetadata]"  [arg-type]
domain\types\messaging_types.py:240:53: error: Argument "default_factory" to "field" has incompatible type "type[EventMetadata]"; expected "Callable[[], EventMetadata]"  [arg-type]
infrastructure\shared\cache.py:18:1: error: Cannot find implementation or library stub for module named "aioredis"  [import-not-found]
infrastructure\shared\cache.py:22:1: error: Library stubs not installed for "aiofiles"  [import-untyped]
infrastructure\shared\cache.py:22:1: note: Hint: "python3 -m pip install types-aiofiles"
infrastructure\shared\cache.py:307:27: error: "None" has no attribute "get"  [attr-defined]
infrastructure\shared\cache.py:323:23: error: "None" has no attribute "set"  [attr-defined]
infrastructure\shared\cache.py:333:28: error: "None" has no attribute "delete"  [attr-defined]
infrastructure\shared\cache.py:341:26: error: "None" has no attribute "exists"  [attr-defined]
infrastructure\shared\cache.py:346:19: error: "None" has no attribute "flushdb"  [attr-defined]
infrastructure\shared\cache.py:492:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\shared\cache.py:493:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\shared\cache.py:544:17: error: Incompatible types in assignment (expression has type "RedisCache", variable has type "MemoryCache")  [assignment]
infrastructure\shared\cache.py:546:17: error: Incompatible types in assignment (expression has type "DiskCache", variable has type "MemoryCache")  [assignment]
infrastructure\shared\cache.py:548:17: error: Incompatible types in assignment (expression has type "HybridCache", variable has type "MemoryCache")  [assignment]
infrastructure\messaging\websocket_service.py:286:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:287:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:294:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:325:17: error: Unsupported operand types for - ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:332:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:368:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:403:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:449:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:455:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:476:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:481:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\websocket_service.py:575:17: error: Value of type "object" is not indexable  [index]
infrastructure\messaging\websocket_service.py:576:17: error: Value of type "object" is not indexable  [index]
infrastructure\messaging\websocket_service.py:578:17: error: Value of type "object" is not indexable  [index]
infrastructure\messaging\websocket_service.py:649:20: error: Unsupported operand types for < ("int" and "object")  [operator]
infrastructure\messaging\websocket_service.py:651:25: error: Unsupported operand types for / ("object" and "float")  [operator]
infrastructure\messaging\websocket_service.py:652:26: error: Unsupported operand types for / ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:188:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:196:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:227:30: error: Argument "priority" to "create_handler_config" has incompatible type "MessagePriority"; expected "EventPriority"  [arg-type]
infrastructure\messaging\message_queue.py:440:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:467:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:469:18: error: Unsupported operand types for * ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:469:61: error: Unsupported operand types for - ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:470:17: error: Unsupported operand types for / ("float" and "object")  [operator]
infrastructure\messaging\message_queue.py:475:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\message_queue.py:508:17: error: Argument 1 to "wait_for" has incompatible type "Awaitable[None] | None"; expected "Future[None] | Generator[Any, None, None] | Awaitable[None]"  [arg-type]
infrastructure\messaging\message_queue.py:590:23: error: Value of type "object" is not indexable  [index]
infrastructure\messaging\message_queue.py:639:20: error: Unsupported operand types for < ("int" and "object")  [operator]
infrastructure\messaging\message_queue.py:641:25: error: Unsupported operand types for / ("object" and "float")  [operator]
infrastructure\messaging\message_queue.py:642:26: error: Unsupported operand types for / ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:255:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:267:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:299:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:400:17: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:443:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:445:18: error: Unsupported operand types for * ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:445:61: error: Unsupported operand types for - ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:446:17: error: Unsupported operand types for / ("float" and "object")  [operator]
infrastructure\messaging\event_bus.py:451:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:469:21: error: Value of type "Coroutine[Any, Any, None]" must be used  [unused-coroutine]
infrastructure\messaging\event_bus.py:469:21: note: Are you missing an await?
infrastructure\messaging\event_bus.py:472:21: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:476:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:478:18: error: Unsupported operand types for * ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:478:61: error: Unsupported operand types for - ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:479:17: error: Unsupported operand types for / ("float" and "object")  [operator]
infrastructure\messaging\event_bus.py:486:13: error: Unsupported operand types for + ("object" and "int")  [operator]
infrastructure\messaging\event_bus.py:521:21: error: Argument 1 to "wait_for" has incompatible type "Awaitable[None] | None"; expected "Future[None] | Generator[Any, None, None] | Awaitable[None]"  [arg-type]
infrastructure\messaging\event_bus.py:525:17: error: Incompatible types in "await" (actual type "Awaitable[None] | None", expected type "Awaitable[Any]")  [misc]
infrastructure\messaging\event_bus.py:607:5: error: Name "_execute_sync_handler" already defined on line 569  [no-redef]
infrastructure\messaging\event_bus.py:647:23: error: Value of type "object" is not indexable  [index]
infrastructure\messaging\event_bus.py:683:20: error: Unsupported operand types for < ("int" and "object")  [operator]
infrastructure\messaging\event_bus.py:685:25: error: Unsupported operand types for / ("object" and "float")  [operator]
infrastructure\messaging\event_bus.py:686:26: error: Unsupported operand types for / ("object" and "int")  [operator]
infrastructure\ml_services\state_manager.py:61:97: error: Argument "default" to "__call__" of "_lru_cache_wrapper" has incompatible type "dict[Never, Never]"; expected "Hashable"  [arg-type]
infrastructure\ml_services\state_manager.py:61:97: note: Following member(s) of "dict[Never, Never]" have conflicts:
infrastructure\ml_services\state_manager.py:61:97: note:     __hash__: expected "Callable[[], int]", got "None"
infrastructure\ml_services\state_manager.py:62:103: error: Argument "default" to "__call__" of "_lru_cache_wrapper" has incompatible type "dict[Never, Never]"; expected "Hashable"  [arg-type]
infrastructure\ml_services\state_manager.py:62:103: note: Following member(s) of "dict[Never, Never]" have conflicts:
infrastructure\ml_services\state_manager.py:62:103: note:     __hash__: expected "Callable[[], int]", got "None"
infrastructure\ml_services\state_manager.py:63:91: error: Argument "default" to "__call__" of "_lru_cache_wrapper" has incompatible type "dict[Never, Never]"; expected "Hashable"  [arg-type]
infrastructure\ml_services\state_manager.py:63:91: note: Following member(s) of "dict[Never, Never]" have conflicts:
infrastructure\ml_services\state_manager.py:63:91: note:     __hash__: expected "Callable[[], int]", got "None"
infrastructure\ml_services\state_manager.py:65:40: error: Argument "default" to "__call__" of "_lru_cache_wrapper" has incompatible type "dict[str, str | int | float]"; expected "Hashable"  [arg-type]
infrastructure\ml_services\state_manager.py:65:40: note: Following member(s) of "dict[str, str | int | float]" have conflicts:
infrastructure\ml_services\state_manager.py:65:40: note:     __hash__: expected "Callable[[], int]", got "None"
infrastructure\ml_services\state_manager.py:113:48: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:113:48: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:123:48: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:123:48: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:143:45: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:143:45: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:148:44: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:148:44: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:180:47: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:180:47: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:181:47: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:181:47: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:183:45: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:183:45: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:187:44: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:187:44: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:193:24: error: "LockType" has no attribute "__aenter__"; maybe "__enter__"?  [attr-defined]
infrastructure\ml_services\state_manager.py:193:24: error: "LockType" has no attribute "__aexit__"; maybe "__exit__"?  [attr-defined]
infrastructure\ml_services\state_manager.py:196:47: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:196:47: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:201:44: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:201:44: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:229:45: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:229:45: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:246:17: error: Argument 1 to "append" of "list" has incompatible type "dict[str, str]"; expected "str"  [arg-type]
infrastructure\ml_services\state_manager.py:253:45: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:253:45: note: Left operand is of type "str | int | float"
infrastructure\ml_services\state_manager.py:266:45: error: Unsupported operand types for + ("str" and "int")  [operator]
infrastructure\ml_services\state_manager.py:266:45: note: Left operand is of type "str | int | float"
shared\logging.py:115:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
shared\logging.py:316:12: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
shared\logging.py:341:12: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Coroutine[Any, Any, Any]]", expected "F")  [return-value]
shared\logging.py:601:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\shared\__init__.py:5:1: error: Module "infrastructure.shared.exceptions" has no attribute "ConnectionError"  [attr-defined]
infrastructure\shared\__init__.py:5:1: error: Module "infrastructure.shared.exceptions" has no attribute "TimeoutError"  [attr-defined]
shared\config.py:12:1: error: Library stubs not installed for "yaml"  [import-untyped]
shared\config.py:12:1: note: Hint: "python3 -m pip install types-PyYAML"
infrastructure\ml_services\signal_aggregator.py:83:22: error: "type[ActionType]" has no attribute "BUY"  [attr-defined]
infrastructure\ml_services\signal_aggregator.py:85:22: error: "type[ActionType]" has no attribute "SELL"  [attr-defined]
infrastructure\ml_services\signal_aggregator.py:134:22: error: "type[ActionType]" has no attribute "BUY"  [attr-defined]
infrastructure\ml_services\signal_aggregator.py:137:22: error: "type[ActionType]" has no attribute "SELL"  [attr-defined]
infrastructure\ml_services\signal_aggregator.py:184:22: error: "type[ActionType]" has no attribute "BUY"  [attr-defined]
infrastructure\ml_services\signal_aggregator.py:186:22: error: "type[ActionType]" has no attribute "SELL"  [attr-defined]
domain\types\session_types.py:481:21: error: Missing keys ("volume_change_percent", "volatility_change_percent", "price_direction_bias", "momentum_strength", "false_breakout_probability", "reversal_probability", "trend_continuation_probability", "influence_duration_minutes", "peak_influence_time_minutes", "spread_impact", "liquidity_impact", "correlation_with_other_sessions") for TypedDict "SessionMetrics"  [typeddict-item]
domain\types\session_types.py:482:31: error: Missing keys ("volatility", "volume", "spread", "liquidity", "momentum", "trend_strength") for TypedDict "MarketConditions"  [typeddict-item]
domain\memory\types.py:209:29: error: Incompatible types (expression has type "str | None", TypedDict item "last_cleanup" has type "str")  [typeddict-item]
infrastructure\sessions\session_monitor.py:22:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\interfaces\signal_protocols.py:117:16: error: "type[MarketConditions]" has no attribute "NORMAL"  [attr-defined]
domain\memory\entities.py:234:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
domain\market_maker\mm_pattern.py:43:51: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MarketMicrostructure")  [assignment]
domain\market_maker\mm_pattern.py:67:38: error: Incompatible types (expression has type "dict[str, object]", TypedDict item "market_microstructure" has type "MarketMicrostructure")  [typeddict-item]
domain\market_maker\mm_pattern.py:127:38: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "PatternContext")  [assignment]
domain\market_maker\mm_pattern.py:143:31: error: Incompatible types (expression has type "dict[str, object]", TypedDict item "market_context" has type "PatternContext")  [typeddict-item]
domain\market_maker\mm_pattern.py:184:5: error: Incompatible types in assignment (expression has type "str", base class "MarketMakerPatternProtocol" defined the type as "Symbol")  [assignment]
domain\market_maker\mm_pattern.py:188:31: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "PatternContext")  [assignment]
domain\market_maker\mm_pattern.py:289:29: error: Argument 1 of "update_result" is incompatible with supertype "PatternMemoryProtocol"; supertype defines the argument type as "PatternResultProtocol"  [override]
domain\market_maker\mm_pattern.py:289:29: note: This violates the Liskov substitution principle
domain\market_maker\mm_pattern.py:289:29: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\market_maker\mm_pattern.py:398:9: error: Name "validate_similarity_score" is not defined  [name-defined]
domain\market_maker\mm_pattern.py:400:9: error: Name "validate_signal_strength" is not defined  [name-defined]
infrastructure\market_profiles\analysis\success_rate_analyzer.py:240:20: error: Incompatible return value type (got "floating[Any]", expected "float")  [return-value]
infrastructure\market_profiles\analysis\success_rate_analyzer.py:374:51: error: Incompatible types in assignment (expression has type "floating[Any]", target has type "float")  [assignment]
infrastructure\market_profiles\analysis\success_rate_analyzer.py:376:55: error: Incompatible types in assignment (expression has type "floating[Any]", target has type "float")  [assignment]
infrastructure\market_profiles\analysis\success_rate_analyzer.py:378:51: error: Incompatible types in assignment (expression has type "floating[Any]", target has type "float")  [assignment]
infrastructure\market_profiles\analysis\similarity_calculator.py:289:33: error: TypedDict key must be a string literal; expected one of ("symbol", "timestamp", "last_price", "volume_24h", "price_change_24h", ...)  [literal-required]
infrastructure\market_profiles\analysis\similarity_calculator.py:290:33: error: TypedDict key must be a string literal; expected one of ("symbol", "timestamp", "last_price", "volume_24h", "price_change_24h", ...)  [literal-required]
infrastructure\market_profiles\analysis\similarity_calculator.py:387:20: error: Incompatible return value type (got "SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
domain\sessions\session_marker.py:169:21: error: Name "transition" already defined on line 158  [no-redef]
domain\sessions\session_marker.py:304:25: error: Name "MarketRegime" is not defined  [name-defined]
domain\sessions\session_marker.py:305:29: error: Name "SessionIntensity" is not defined  [name-defined]
domain\sessions\session_marker.py:356:16: error: Incompatible return value type (got "dict[str, str | float | int]", expected "dict[str, object] | None")  [return-value]
domain\market_maker\mm_pattern_classifier.py:28:23: error: Incompatible types in assignment (expression has type "str", base class "OrderBookProtocol" defined the type as "Symbol")  [assignment]
domain\market_maker\mm_pattern_classifier.py:73:23: error: Incompatible types in assignment (expression has type "str", base class "TradeSnapshotProtocol" defined the type as "Symbol")  [assignment]
domain\market_maker\mm_pattern_classifier.py:158:27: error: Argument "book_pressure" to "PatternFeatures" has incompatible type "OrderImbalance"; expected "BookPressure"  [arg-type]
domain\market_maker\mm_pattern_classifier.py:186:16: error: Extra keys ("spread_percentage", "mid_price", "total_volume", "buy_volume", "sell_volume") for TypedDict "PatternContext"  [typeddict-unknown-key]
domain\market_maker\mm_pattern_memory.py:212:39: error: Argument "key" to "sort" of "list" has incompatible type "Callable[[dict[str, object]], object]"; expected "Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\market_maker\mm_pattern_memory.py:212:49: error: Incompatible return value type (got "object", expected "SupportsDunderLT[Any] | SupportsDunderGT[Any]")  [return-value]
domain\market_maker\mm_pattern_memory.py:220:44: error: Argument 1 to "from_dict" of "PatternMemory" has incompatible type "dict[str, Any]"; expected "PatternMemoryDict"  [arg-type]
domain\market_maker\mm_pattern_memory.py:465:21: error: Argument 2 to "run_in_executor" of "AbstractEventLoop" has incompatible type "Callable[[Path, list[dict[str, Any]]], None]"; expected "Callable[[Path, list[PatternMemoryDict]], None]"  [arg-type]
domain\market_maker\mm_pattern_memory.py:483:33: error: "object" has no attribute "isoformat"  [attr-defined]
infrastructure\market_data\base_connector.py:23:18: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
infrastructure\market_data\base_connector.py:181:44: error: Name "decimal" is not defined  [name-defined]
infrastructure\market_profiles\analysis\pattern_analyzer.py:74:38: error: Name "SimilarityCalculator" is not defined  [name-defined]
infrastructure\market_profiles\analysis\pattern_analyzer.py:75:38: error: Name "SuccessRateAnalyzer" is not defined  [name-defined]
infrastructure\market_profiles\analysis\pattern_analyzer.py:165:31: error: Argument 1 to "Confidence" has incompatible type "SupportsDunderLT[Any] | SupportsDunderGT[Any]"; expected "float"  [arg-type]
infrastructure\market_profiles\analysis\pattern_analyzer.py:201:31: error: No overload variant of "__sub__" of "datetime" matches argument type "None"  [operator]
infrastructure\market_profiles\analysis\pattern_analyzer.py:201:31: note: Possible overload variants:
infrastructure\market_profiles\analysis\pattern_analyzer.py:201:31: note:     def __sub__(self, datetime, /) -> timedelta
infrastructure\market_profiles\analysis\pattern_analyzer.py:201:31: note:     def __sub__(self, timedelta, /) -> datetime
infrastructure\market_profiles\analysis\pattern_analyzer.py:201:31: note: Right operand is of type "datetime | None"
infrastructure\market_profiles\analysis\pattern_analyzer.py:227:25: error: Argument 1 to "_calculate_context_similarity" of "PatternAnalyzer" has incompatible type "PatternContext"; expected "dict[str, Any]"  [arg-type]
infrastructure\market_profiles\analysis\pattern_analyzer.py:227:42: error: Argument 2 to "_calculate_context_similarity" of "PatternAnalyzer" has incompatible type "PatternContext"; expected "dict[str, Any]"  [arg-type]
application\market\mm_follow_controller.py:145:25: error: Argument 2 to "find_similar_patterns" of "IPatternMemoryRepository" has incompatible type "dict[str, Any] | PatternFeatures"; expected "dict[str, Any]"  [arg-type]
application\market\mm_follow_controller.py:157:26: error: Unexpected keyword argument "metadata" for "MatchedPattern"  [call-arg]
application\market\mm_follow_controller.py:158:32: error: Argument "pattern_memory" to "MatchedPattern" has incompatible type "Any | None"; expected "PatternMemory"  [arg-type]
application\market\mm_follow_controller.py:162:34: error: Argument "expected_outcome" to "MatchedPattern" has incompatible type "Any | None"; expected "PatternResult"  [arg-type]
infrastructure\core\efficiency_validator.py:166:46: error: Incompatible types in assignment (expression has type "floating[Any]", variable has type "float")  [assignment]
infrastructure\core\efficiency_validator.py:390:20: error: Incompatible return value type (got "tuple[floating[Any], float | floating[_64Bit | Any] | ndarray[Any, dtype[floating[Any]]]]", expected "tuple[float, float]")  [return-value]
infrastructure\core\efficiency_validator.py:422:20: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\core\technical.py:9:1: error: Skipping analyzing "pandas_ta": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\core\technical.py:10:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\core\technical.py:529:9: error: Item "ExtensionArray" of "ExtensionArray | ndarray[Any, Any]" has no attribute "reshape"  [union-attr]
infrastructure\core\technical.py:627:12: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:628:11: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:629:13: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:632:15: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical.py:635:14: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical.py:643:13: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical.py:644:15: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical.py:650:19: error: "ndarray[Any, Any]" has no attribute "shift"  [attr-defined]
infrastructure\core\technical.py:669:12: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:670:11: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:671:13: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical.py:674:18: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical.py:675:20: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\external_services\ml\feature_engineer.py:7:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml\feature_engineer.py:15:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\external_services\ml\feature_engineer.py:29:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\external_services\ml\feature_engineer.py:30:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
shared\unified_cache.py:207:17: error: "dict[str, CacheEntry]" has no attribute "move_to_end"  [attr-defined]
shared\unified_cache.py:339:25: error: Unsupported target for indexed assignment ("Collection[str]")  [index]
infrastructure\agents\market_regime\types.py:79:23: error: Item "ndarray[Any, dtype[floating[_64Bit]]]" of "Series[Any] | ndarray[Any, dtype[floating[_64Bit]]]" has no attribute "values"  [union-attr]
infrastructure\agents\market_regime\types.py:82:61: error: Argument 1 to "_calculate_trend_strength" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:83:53: error: Argument 1 to "_calculate_volatility" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:84:49: error: Argument 1 to "_calculate_momentum" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:85:61: error: Argument 1 to "_calculate_mean_reversion" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:86:57: error: Argument 1 to "_calculate_volume_trend" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any] | Any"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:87:55: error: Argument 1 to "_calculate_price_range" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:87:68: error: Argument 2 to "_calculate_price_range" of "DefaultIndicatorCalculator" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\agents\market_regime\types.py:307:20: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\ml_services\pattern_discovery.py:8:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:11:1: error: Skipping analyzing "ta": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:12:1: error: Skipping analyzing "umap": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:14:1: error: Skipping analyzing "mlxtend.frequent_patterns": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:15:1: error: Skipping analyzing "mlxtend.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:19:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:20:1: error: Skipping analyzing "sklearn.decomposition": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:21:1: error: Skipping analyzing "sklearn.feature_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:22:1: error: Skipping analyzing "sklearn.inspection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:23:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\pattern_discovery.py:167:17: error: Argument 1 to "find_peaks" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[generic, tuple[int, ...]] | Sequence[complex | bytes | str | generic | CanArray0D[generic]]"  [arg-type]
infrastructure\ml_services\pattern_discovery.py:173:17: error: Unsupported operand type for unary - ("ExtensionArray | ndarray[Any, Any]")  [operator]
infrastructure\ml_services\pattern_discovery.py:214:32: error: Argument 1 to "allclose" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
infrastructure\ml_services\pattern_discovery.py:231:23: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\pattern_discovery.py:237:53: error: Unsupported operand types for > ("list[Any]" and "int")  [operator]
infrastructure\ml_services\pattern_discovery.py:307:41: error: Incompatible types in assignment (expression has type "dict[str, dict[str, Any]]", target has type "list[Pattern]")  [assignment]
infrastructure\ml_services\pattern_discovery.py:310:40: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "PatternMetrics")  [assignment]
infrastructure\ml_services\pattern_discovery.py:362:49: error: "list[Pattern]" has no attribute "items"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:368:40: error: Argument 1 to "allclose" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
infrastructure\ml_services\pattern_discovery.py:407:20: error: Incompatible return value type (got "PatternMetrics | dict[Any, Any]", expected "dict[Any, Any]")  [return-value]
infrastructure\ml_services\pattern_discovery.py:438:5: error: Name "discover_patterns" already defined on line 250  [no-redef]
infrastructure\ml_services\pattern_discovery.py:469:13: error: Too many arguments for "_save_patterns" of "PatternDiscovery"  [call-arg]
infrastructure\ml_services\pattern_discovery.py:632:13: error: Need type annotation for "patterns" (hint: "patterns: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\pattern_discovery.py:696:5: error: Name "_save_patterns" already defined on line 89  [no-redef]
infrastructure\ml_services\pattern_discovery.py:735:27: error: "Pattern" has no attribute "conditions"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:736:13: error: "Pattern" has no attribute "conditions"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:755:32: error: "Pattern" has no attribute "conditions"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:756:29: error: "Pattern" has no attribute "conditions"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:759:25: error: No overload variant of "cdist" matches argument types "Series[Any]", "list[Series[float]]", "str"  [call-overload]
infrastructure\ml_services\pattern_discovery.py:759:25: note: Possible overload variants:
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def cdist(XA: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]], XB: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]], metric: Literal['braycurtis', 'canberra', 'chebychev', 'chebyshev', 'cheby', 'cheb', 'ch', 'cityblock', 'cblock', 'cb', 'c', 'correlation', 'co', 'cosine', 'cos', 'dice', 'euclidean', 'euclid', 'eu', 'e', 'hamming', 'hamm', 'ha', 'h', 'minkowski', 'mi', 'm', 'pnorm', 'jaccard', 'jacc', 'ja', 'j', 'jensenshannon', 'js', 'kulczynski1', 'mahalanobis', 'mahal', 'mah', 'rogerstanimoto', 'russellrao', 'seuclidean', 'se', 's', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'sqe', 'sqeuclid', 'yule'] = ..., *, out: None = ..., p: float = ..., w: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]] | None = ..., V: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., VI: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ...) -> ndarray[tuple[int, ...], dtype[floating[Any]]]
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def cdist(XA: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], XB: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], metric: Literal['braycurtis', 'canberra', 'chebychev', 'chebyshev', 'cheby', 'cheb', 'ch', 'cityblock', 'cblock', 'cb', 'c', 'correlation', 'co', 'cosine', 'cos', 'dice', 'euclidean', 'euclid', 'eu', 'e', 'hamming', 'hamm', 'ha', 'h', 'minkowski', 'mi', 'm', 'pnorm', 'jaccard', 'jacc', 'ja', 'j', 'jensenshannon', 'js', 'kulczynski1', 'mahalanobis', 'mahal', 'mah', 'rogerstanimoto', 'russellrao', 'seuclidean', 'se', 's', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'sqe', 'sqeuclid', 'yule'] = ..., *, out: None = ..., p: float = ..., w: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]] | None = ..., V: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., VI: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ...) -> ndarray[tuple[int, ...], dtype[inexact[Any]]]
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def [_ArrayT: ndarray[tuple[int, ...], dtype[number[Any]]]] cdist(XA: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], XB: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], metric: Literal['braycurtis', 'canberra', 'chebychev', 'chebyshev', 'cheby', 'cheb', 'ch', 'cityblock', 'cblock', 'cb', 'c', 'correlation', 'co', 'cosine', 'cos', 'dice', 'euclidean', 'euclid', 'eu', 'e', 'hamming', 'hamm', 'ha', 'h', 'minkowski', 'mi', 'm', 'pnorm', 'jaccard', 'jacc', 'ja', 'j', 'jensenshannon', 'js', 'kulczynski1', 'mahalanobis', 'mahal', 'mah', 'rogerstanimoto', 'russellrao', 'seuclidean', 'se', 's', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'sqe', 'sqeuclid', 'yule'] = ..., *, out: _ArrayT, p: float = ..., w: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]] | None = ..., V: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., VI: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ...) -> _ArrayT
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def cdist(XA: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]], XB: CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]], metric: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]]], float | floating[Any] | integer[Any] | bool_ | None], *, out: None = ..., **kwds: object) -> ndarray[tuple[int, ...], dtype[floating[Any]]]
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def cdist(XA: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], XB: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], metric: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]]], float | floating[Any] | integer[Any] | bool_ | None], *, out: None = ..., **kwds: object) -> ndarray[tuple[int, ...], dtype[inexact[Any]]]
infrastructure\ml_services\pattern_discovery.py:759:25: note:     def [_ArrayT: ndarray[tuple[int, ...], dtype[number[Any]]]] cdist(XA: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], XB: CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[number[Any] | bool_, tuple[int, ...]] | Sequence[complex | number[Any] | bool_ | CanArray0D[number[Any] | bool_]]], metric: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]]], float | floating[Any] | integer[Any] | bool_ | None], *, out: _ArrayT, **kwds: object) -> _ArrayT
infrastructure\ml_services\pattern_discovery.py:760:26: error: "Pattern" has no attribute "features"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:761:25: error: "Pattern" has no attribute "features"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:766:41: error: "Pattern" has no attribute "features"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:832:13: error: "PatternDiscovery" has no attribute "feature_cache"; maybe "_feature_cache"?  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:857:24: error: "PatternDiscovery" has no attribute "feature_cache"; maybe "_feature_cache"?  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:857:47: error: Name "symbol" is not defined  [name-defined]
infrastructure\ml_services\pattern_discovery.py:889:13: error: "PatternDiscovery" has no attribute "importance_cache"  [attr-defined]
infrastructure\ml_services\pattern_discovery.py:889:35: error: Name "symbol" is not defined  [name-defined]
infrastructure\ml_services\pattern_discovery.py:891:20: error: Incompatible return value type (got "dict[str, dict[Any, object]]", expected "dict[str, float]")  [return-value]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:75:5: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:83:5: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:84:19: error: "type[SentimentSource]" has no attribute "VOLUME"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:91:5: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:92:19: error: "type[SentimentSource]" has no attribute "VOLATILITY"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:98:52: error: Argument 1 to "combine_sentiment_sources" has incompatible type "object"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:422:9: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:423:9: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:440:9: error: "str" has no attribute "value"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:441:9: error: "str" has no attribute "value"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:442:9: error: "str" has no attribute "value"  [attr-defined]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:489:5: error: Need type annotation for "shifts" (hint: "shifts: list[<type>] = ...")  [var-annotated]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:673:32: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\services\enhanced_trading\sentiment_adjustment.py:674:33: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\market\market_data.py:52:36: error: Incompatible types in assignment (expression has type "dict[str, Collection[str]]", variable has type "MarketMetadataDict")  [assignment]
infrastructure\sessions\session_patterns.py:25:9: error: Need type annotation for "patterns" (hint: "patterns: list[<type>] = ...")  [var-annotated]
infrastructure\sessions\session_validator.py:56:27: error: "SessionMetrics" has no attribute "price_direction_bias"  [attr-defined]
infrastructure\core\technical_analysis.py:10:1: error: Skipping analyzing "pandas_ta": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\core\technical_analysis.py:11:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\core\technical_analysis.py:516:19: error: Item "ExtensionArray" of "ExtensionArray | ndarray[Any, Any]" has no attribute "reshape"  [union-attr]
infrastructure\core\technical_analysis.py:660:12: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:661:11: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:662:13: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:665:19: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:666:18: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:670:18: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:671:17: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:678:26: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:679:25: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:683:19: error: "ndarray[Any, Any]" has no attribute "shift"  [attr-defined]
infrastructure\core\technical_analysis.py:714:12: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:715:11: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:716:13: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, Any]")  [assignment]
infrastructure\core\technical_analysis.py:719:20: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\core\technical_analysis.py:720:18: error: "ndarray[Any, Any]" has no attribute "rolling"  [attr-defined]
infrastructure\ml_services\ml_models.py:7:1: error: Skipping analyzing "sklearn.ensemble": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:8:1: error: Skipping analyzing "sklearn.linear_model": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:9:1: error: Skipping analyzing "sklearn.svm": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:10:1: error: Skipping analyzing "sklearn.neural_network": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:11:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:12:1: error: Skipping analyzing "sklearn.model_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:13:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:16:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\ml_models.py:325:20: error: Incompatible return value type (got "dict[str, dict[str, float]]", expected "dict[str, float]")  [return-value]
infrastructure\ml_services\explanation.py:18:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\ml_services\explanation.py:19:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\ml_services\candle_patterns.py:16:9: error: Need type annotation for "patterns" (hint: "patterns: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\technical_indicators.py:27:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\ml_services\technical_indicators.py:28:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\ml_services\technical_indicators.py:123:19: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, dtype[Any]]")  [assignment]
infrastructure\ml_services\technical_indicators.py:124:20: error: Incompatible types in assignment (expression has type "Series[Any]", variable has type "ndarray[Any, dtype[Any]]")  [assignment]
infrastructure\ml_services\technical_indicators.py:128:26: error: "ndarray[Any, dtype[Any]]" has no attribute "rolling"  [attr-defined]
infrastructure\ml_services\technical_indicators.py:129:27: error: "ndarray[Any, dtype[Any]]" has no attribute "rolling"  [attr-defined]
infrastructure\ml_services\online_learning_reasoner.py:7:1: error: Skipping analyzing "sklearn.linear_model": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\online_learning_reasoner.py:8:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\market_regime_detector.py:7:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\market_regime_detector.py:8:1: error: Skipping analyzing "sklearn.decomposition": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\market_regime_detector.py:61:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\ml_services\market_regime_detector.py:62:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\types\strategy_types.py:93:34: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
domain\types\strategy_types.py:109:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
domain\types\strategy_types.py:110:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
domain\types\strategy_types.py:111:35: error: Incompatible types in assignment (expression has type "None", variable has type "StrategyType")  [assignment]
domain\types\strategy_types.py:112:35: error: Incompatible types in assignment (expression has type "None", variable has type "MarketRegime")  [assignment]
domain\types\strategy_types.py:140:29: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
domain\types\strategy_types.py:141:26: error: Incompatible types in assignment (expression has type "None", variable has type "list[str]")  [assignment]
domain\types\strategy_types.py:142:48: error: Incompatible types in assignment (expression has type "None", variable has type "list[MarketRegime]")  [assignment]
domain\types\strategy_types.py:145:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
domain\types\strategy_types.py:146:28: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
domain\types\strategy_types.py:174:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
domain\types\strategy_types.py:290:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
domain\types\strategy_types.py:320:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\base_strategy.py:271:28: error: "BaseStrategy" has no attribute "_calculate_max_drawdown"  [attr-defined]
infrastructure\strategies\base_strategy.py:272:28: error: "BaseStrategy" has no attribute "_calculate_sharpe_ratio"; maybe "_calculate_kappa_ratio", "_calculate_calmar_ratio", or "_calculate_treynor_ratio"?  [attr-defined]
infrastructure\strategies\base_strategy.py:273:29: error: "BaseStrategy" has no attribute "_calculate_sortino_ratio"; maybe "_calculate_information_ratio", "_calculate_gain_loss_ratio", or "_calculate_treynor_ratio"?  [attr-defined]
infrastructure\strategies\base_strategy.py:276:25: error: "BaseStrategy" has no attribute "_calculate_mar_ratio"; maybe "_calculate_calmar_ratio", "_calculate_kappa_ratio", or "_calculate_treynor_ratio"?  [attr-defined]
infrastructure\strategies\base_strategy.py:277:27: error: "BaseStrategy" has no attribute "_calculate_ulcer_index"  [attr-defined]
infrastructure\strategies\base_strategy.py:278:27: error: "BaseStrategy" has no attribute "_calculate_omega_ratio"; maybe "_calculate_calmar_ratio", "_calculate_kappa_ratio", or "_calculate_information_ratio"?  [attr-defined]
infrastructure\strategies\base_strategy.py:279:20: error: "BaseStrategy" has no attribute "_calculate_gini_coefficient"  [attr-defined]
infrastructure\strategies\base_strategy.py:280:26: error: "BaseStrategy" has no attribute "_calculate_tail_ratio"; maybe "_calculate_calmar_ratio", "_calculate_gain_loss_ratio", or "_calculate_kappa_ratio"?  [attr-defined]
infrastructure\strategies\base_strategy.py:289:33: error: "BaseStrategy" has no attribute "_calculate_drawdown_duration"  [attr-defined]
infrastructure\strategies\base_strategy.py:290:25: error: "BaseStrategy" has no attribute "_calculate_stability"  [attr-defined]
infrastructure\strategies\base_strategy.py:309:17: error: Dict entry 9 has incompatible type "str": "str | bytes | date | timedelta | datetime64 | <7 more items>"; expected "str": "float"  [dict-item]
infrastructure\strategies\base_strategy.py:310:17: error: Dict entry 10 has incompatible type "str": "str | bytes | date | timedelta | datetime64 | <7 more items>"; expected "str": "float"  [dict-item]
infrastructure\strategies\base_strategy.py:311:17: error: Dict entry 11 has incompatible type "str": "floating[Any]"; expected "str": "float"  [dict-item]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "str")  [operator]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "bytes")  [operator]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "date")  [operator]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "timedelta")  [operator]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "datetime64")  [operator]
infrastructure\strategies\base_strategy.py:338:20: error: Unsupported operand types for / ("float" and "timedelta64")  [operator]
infrastructure\strategies\base_strategy.py:338:20: note: Right operand is of type "str | bytes | date | timedelta | datetime64 | <7 more items>"
infrastructure\strategies\base_strategy.py:341:20: error: Incompatible return value type (got "float | Any | complex | floating[Any] | complexfloating[Any, Any]", expected "float")  [return-value]
domain\types\technical_types.py:357:1: error: Name "TechnicalIndicatorResult" already defined on line 213  [no-redef]
domain\types\technical_types.py:362:1: error: Name "BollingerBandsResult" already defined on line 116  [no-redef]
domain\types\technical_types.py:369:1: error: Name "MACDResult" already defined on line 139  [no-redef]
domain\types\technical_types.py:376:1: error: Name "VolumeProfileResult" already defined on line 160  [no-redef]
domain\types\technical_types.py:384:1: error: Name "MarketStructureResult" already defined on line 184  [no-redef]
domain\services\correlation_chain.py:14:1: error: Skipping analyzing "statsmodels.tsa.stattools": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\services\correlation_chain.py:356:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\services\liquidity_analyzer.py:152:37: error: Argument 1 to "mean" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
domain\services\liquidity_analyzer.py:153:34: error: Argument 1 to "mean" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
domain\services\liquidity_analyzer.py:157:21: error: Dict entry 0 has incompatible type "str": "float | floating[Any] | int"; expected "str": "float"  [dict-item]
domain\services\liquidity_analyzer.py:202:9: error: Need type annotation for "levels" (hint: "levels: list[<type>] = ...")  [var-annotated]
domain\services\liquidity_analyzer.py:217:26: error: "Hashable" has no attribute "mid"  [attr-defined]
domain\services\liquidity_analyzer.py:220:46: error: "Hashable" has no attribute "left"  [attr-defined]
domain\services\liquidity_analyzer.py:221:46: error: "Hashable" has no attribute "right"  [attr-defined]
domain\services\liquidity_analyzer.py:229:9: error: Need type annotation for "levels" (hint: "levels: list[<type>] = ...")  [var-annotated]
domain\types\risk_types.py:325:1: error: Name "RiskOptimizationResult" already defined on line 158  [no-redef]
infrastructure\ml_services\meta_learning.py:19:1: error: Skipping analyzing "sklearn.ensemble": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\meta_learning.py:20:1: error: Skipping analyzing "sklearn.linear_model": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\meta_learning.py:21:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\meta_learning.py:22:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\meta_learning.py:23:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\meta_learning.py:403:48: error: Argument 1 to "mean" has incompatible type "list[object]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
infrastructure\ml_services\meta_learning.py:404:37: error: Value of type variable "SupportsRichComparisonT" of "max" cannot be "object"  [type-var]
infrastructure\ml_services\meta_learning.py:418:32: error: Name "defaultdict" is not defined  [name-defined]
infrastructure\ml_services\meta_learning.py:438:33: error: Name "defaultdict" is not defined  [name-defined]
infrastructure\services\technical_analysis\utils.py:14:1: error: Module "domain.types.technical_types" has no attribute "TechnicalAnalysisResult"; maybe "TechnicalAnalysisReport"?  [attr-defined]
infrastructure\services\technical_analysis\utils.py:14:1: error: Module "domain.types.technical_types" has no attribute "IndicatorResult"; maybe "TechnicalIndicatorResult"?  [attr-defined]
infrastructure\services\technical_analysis\utils.py:240:20: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[bool_]]", variable has type "Series[bool]")  [assignment]
infrastructure\services\technical_analysis\indicators.py:313:32: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\services\technical_analysis\indicators.py:314:33: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\services\risk_analysis\recommendations.py:181:16: error: Need type annotation for "insights"  [var-annotated]
infrastructure\services\risk_analysis\recommendations.py:228:9: error: Item "dict[str, float]" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:228:9: error: Item "str" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:230:9: error: Item "dict[str, float]" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:230:9: error: Item "str" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:232:9: error: Item "dict[str, float]" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:232:9: error: Item "str" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:235:9: error: Item "dict[str, float]" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:235:9: error: Item "str" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:237:9: error: Item "dict[str, float]" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\recommendations.py:237:9: error: Item "str" of "list[Any] | dict[str, float] | str" has no attribute "append"  [union-attr]
infrastructure\services\risk_analysis\stress_testing.py:121:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\risk_analysis\stress_testing.py:124:8: error: "object" has no attribute "value"  [attr-defined]
infrastructure\services\risk_analysis\stress_testing.py:126:33: error: "object" has no attribute "value"  [attr-defined]
infrastructure\services\risk_analysis\portfolio_optimization.py:54:45: error: Argument 1 to "LinearConstraint" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | sparray[bool_ | integer[Any] | floating[_32Bit] | floating[_64Bit] | floating[Any] | complexfloating[Any, Any], tuple[int, Unpack[tuple[int, ...]]]] | spmatrix[bool_ | integer[Any] | floating[_32Bit] | floating[_64Bit] | floating[Any] | complexfloating[Any, Any]]"  [arg-type]
infrastructure\agents\base_agent.py:481:38: error: TypedDict key must be a string literal; expected one of ("name", "agent_type", "max_position_size", "max_portfolio_risk", "confidence_threshold", ...)  [literal-required]
infrastructure\agents\base_agent.py:538:25: error: Item "str" of "Literal['market_maker', 'whale_analyzer', 'risk_manager', 'portfolio_optimizer', 'order_executor', 'news_analyzer', 'market_regime', 'strategy_agent', 'meta_controller', 'evolutionary_agent', 'social_media', 'entanglement_detector']" has no attribute "value"  [union-attr]
infrastructure\agents\base_agent.py:687:30: error: Argument 1 to "len" has incompatible type "CacheManager"; expected "Sized"  [arg-type]
infrastructure\agents\market_regime\indicators.py:52:34: error: Incompatible types in assignment (expression has type "tuple[Series[Any], Series[Any]]", target has type "Series[Any]")  [assignment]
infrastructure\agents\market_regime\indicators.py:57:39: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", target has type "Series[Any]")  [assignment]
domain\interfaces\risk_protocols.py:163:33: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\interfaces\prediction_protocols.py:183:16: error: "type[SignalStrength]" has no attribute "MEDIUM"  [attr-defined]
infrastructure\ml_services\regime_discovery.py:16:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\regime_discovery.py:17:1: error: Skipping analyzing "sklearn.mixture": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\regime_discovery.py:18:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\regime_discovery.py:19:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\regime_discovery.py:20:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\regime_discovery.py:277:33: error: Item "None" of "Any | Any | Any | None" has no attribute "predict_proba"  [union-attr]
infrastructure\ml_services\regime_discovery.py:282:30: error: Item "None" of "Any | Any | Any | None" has no attribute "cluster_centers_"  [union-attr]
infrastructure\ml_services\regime_discovery.py:284:28: error: Incompatible return value type (got "SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\ml_services\regime_discovery.py:397:13: error: Need type annotation for "factors" (hint: "factors: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\regime_discovery.py:454:13: error: Need type annotation for "transition_patterns" (hint: "transition_patterns: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\regime_discovery.py:529:46: error: Argument 1 to "publish" of "EventBus" has incompatible type "domain.types.infrastructure_types.Event"; expected "domain.types.messaging_types.Event"  [arg-type]
infrastructure\ml_services\regime_discovery.py:620:13: error: Need type annotation for "transition_counts" (hint: "transition_counts: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\regime_discovery.py:632:57: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[str], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\sessions\repositories.py:113:17: error: Dict entry 6 has incompatible type "str": "floating[Any] | float"; expected "str": "str | float | int | dict[str, str | float | int]"  [dict-item]
domain\sessions\repositories.py:204:17: error: Dict entry 3 has incompatible type "str": "dict[str, dict[str, int | float]]"; expected "str": "str | float | int | dict[str, str | float | int | dict[str, str | float | int]]"  [dict-item]
domain\sessions\repositories.py:205:17: error: Dict entry 4 has incompatible type "str": "dict[str, int]"; expected "str": "str | float | int | dict[str, str | float | int | dict[str, str | float | int]]"  [dict-item]
domain\sessions\implementations.py:112:35: error: Argument 2 to "polyfit" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
domain\sessions\implementations.py:166:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\implementations.py:406:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\implementations.py:407:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\strategies\evolution\performance_tracker.py:19:9: error: Need type annotation for "performance_history" (hint: "performance_history: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\performance_tracker.py:20:9: error: Need type annotation for "metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\performance_tracker.py:89:13: error: Need type annotation for "strategy_performance" (hint: "strategy_performance: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\performance_tracker.py:133:26: error: Argument "win_rate" to "StrategyMetrics" has incompatible type "floating[Any]"; expected "float"  [arg-type]
infrastructure\strategies\evolution\evolution_manager.py:18:9: error: Need type annotation for "evolution_history" (hint: "evolution_history: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\evolution_manager.py:19:9: error: Need type annotation for "active_evolutions" (hint: "active_evolutions: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\evolution_manager.py:83:20: error: Unexpected keyword argument "total_evolutions" for "EvolutionMetrics"  [call-arg]
infrastructure\strategies\evolution\evolution_manager.py:83:20: error: Unexpected keyword argument "successful_evolutions" for "EvolutionMetrics"  [call-arg]
infrastructure\strategies\evolution\evolution_manager.py:83:20: error: Unexpected keyword argument "failed_evolutions" for "EvolutionMetrics"  [call-arg]
infrastructure\strategies\evolution\evolution_manager.py:83:20: error: Unexpected keyword argument "success_rate" for "EvolutionMetrics"  [call-arg]
infrastructure\strategies\evolution\evolution_manager.py:92:20: error: Missing positional arguments "generation", "best_fitness", "avg_fitness", "diversity", "convergence_rate", "improvement_rate", "adaptation_success" in call to "EvolutionMetrics"  [call-arg]
infrastructure\strategies\adaptive\strategy_selector.py:45:20: error: Incompatible return value type (got "str | None", expected "Callable[..., Any] | None")  [return-value]
infrastructure\strategies\adaptive\strategy_selector.py:75:60: error: Incompatible types in assignment (expression has type "float", target has type "list[str]")  [assignment]
infrastructure\strategies\pairs_trading_strategy.py:62:26: error: Argument 1 to "__init__" of "BaseStrategy" has incompatible type "dict[str, Any] | PairsTradingConfig | None"; expected "dict[str, Any] | None"  [arg-type]
infrastructure\strategies\pairs_trading_strategy.py:64:13: error: Incompatible types in assignment (expression has type "PairsTradingConfig | dict[str, Any]", variable has type "PairsTradingConfig")  [assignment]
infrastructure\strategies\pairs_trading_strategy.py:64:13: error: Incompatible types in assignment (expression has type "PairsTradingConfig", base class "BaseStrategy" defined the type as "dict[str, Any]")  [assignment]
infrastructure\strategies\pairs_trading_strategy.py:402:24: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:418:24: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:466:28: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:482:28: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:501:32: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:517:32: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:537:36: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:549:24: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
infrastructure\strategies\pairs_trading_strategy.py:591:44: error: Argument 1 to "append" of "list" has incompatible type "float | None"; expected "float"  [arg-type]
infrastructure\strategies\pairs_trading_strategy.py:614:28: error: Unsupported operand types for * ("None" and "float")  [operator]
infrastructure\strategies\pairs_trading_strategy.py:614:28: note: Left operand is of type "float | None"
infrastructure\strategies\pairs_trading_strategy.py:671:38: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\strategies\pairs_trading_strategy.py:676:39: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\strategies\pairs_trading_strategy.py:700:22: error: No overload variant of "concat" matches argument types "list[object]", "int"  [call-overload]
infrastructure\strategies\pairs_trading_strategy.py:700:22: note: Possible overload variants:
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[DataFrame] | Mapping[HashableT1, DataFrame], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any]] | Mapping[HashableT1, Series[Any]], *, axis: Literal['index', 0] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series[Any]
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | DataFrame] | Mapping[HashableT1, Series[Any] | DataFrame], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[None] | Mapping[HashableT1, None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Never
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[DataFrame | None] | Mapping[HashableT1, DataFrame | None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | None] | Mapping[HashableT1, Series[Any] | None], *, axis: Literal['index', 0] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series[Any]
infrastructure\strategies\pairs_trading_strategy.py:700:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | DataFrame | None] | Mapping[HashableT1, Series[Any] | DataFrame | None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\volatility_strategy.py:56:26: error: Argument 1 to "__init__" of "BaseStrategy" has incompatible type "dict[str, Any] | VolatilityConfig | None"; expected "dict[str, Any] | None"  [arg-type]
infrastructure\strategies\volatility_strategy.py:58:27: error: Incompatible types in assignment (expression has type "VolatilityConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\volatility_strategy.py:60:27: error: Incompatible types in assignment (expression has type "VolatilityConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\volatility_strategy.py:62:27: error: Incompatible types in assignment (expression has type "VolatilityConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\volatility_strategy.py:158:42: error: "dict[str, Any]" has no attribute "min_volume"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:162:43: error: "dict[str, Any]" has no attribute "min_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:169:25: error: "dict[str, Any]" has no attribute "max_spread"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:227:44: error: "dict[str, Any]" has no attribute "min_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:229:41: error: "dict[str, Any]" has no attribute "rsi_oversold"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:234:51: error: "dict[str, Any]" has no attribute "atr_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:235:53: error: "dict[str, Any]" has no attribute "atr_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:243:34: error: "dict[str, Any]" has no attribute "min_confidence"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:255:44: error: "dict[str, Any]" has no attribute "min_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:257:41: error: "dict[str, Any]" has no attribute "rsi_overbought"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:262:51: error: "dict[str, Any]" has no attribute "atr_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:263:53: error: "dict[str, Any]" has no attribute "atr_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:271:34: error: "dict[str, Any]" has no attribute "min_confidence"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:320:20: error: "dict[str, Any]" has no attribute "trailing_stop"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:321:57: error: "dict[str, Any]" has no attribute "trailing_step"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:335:20: error: "dict[str, Any]" has no attribute "partial_close"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:336:47: error: "dict[str, Any]" has no attribute "partial_close_levels"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:346:40: error: "dict[str, Any]" has no attribute "partial_close_sizes"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:362:20: error: "dict[str, Any]" has no attribute "trailing_stop"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:363:57: error: "dict[str, Any]" has no attribute "trailing_step"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:377:20: error: "dict[str, Any]" has no attribute "partial_close"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:378:47: error: "dict[str, Any]" has no attribute "partial_close_levels"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:388:40: error: "dict[str, Any]" has no attribute "partial_close_sizes"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:420:44: error: Argument 1 to "append" of "list" has incompatible type "float | None"; expected "float"  [arg-type]
infrastructure\strategies\volatility_strategy.py:438:49: error: "dict[str, Any]" has no attribute "volatility_window"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:441:54: error: "dict[str, Any]" has no attribute "bb_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:442:51: error: "dict[str, Any]" has no attribute "bb_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:443:46: error: "dict[str, Any]" has no attribute "bb_std"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:444:46: error: "dict[str, Any]" has no attribute "bb_std"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:450:22: error: No overload variant of "concat" matches argument types "list[object]", "int"  [call-overload]
infrastructure\strategies\volatility_strategy.py:450:22: note: Possible overload variants:
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[DataFrame] | Mapping[HashableT1, DataFrame], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any]] | Mapping[HashableT1, Series[Any]], *, axis: Literal['index', 0] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series[Any]
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | DataFrame] | Mapping[HashableT1, Series[Any] | DataFrame], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[None] | Mapping[HashableT1, None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Never
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[DataFrame | None] | Mapping[HashableT1, DataFrame | None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | None] | Mapping[HashableT1, Series[Any] | None], *, axis: Literal['index', 0] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> Series[Any]
infrastructure\strategies\volatility_strategy.py:450:22: note:     def [HashableT1: Hashable, HashableT2: Hashable, HashableT3: Hashable, HashableT4: Hashable] concat(objs: Iterable[Series[Any] | DataFrame | None] | Mapping[HashableT1, Series[Any] | DataFrame | None], *, axis: Literal['index', 0] | Literal['columns', 1] = ..., join: Literal['inner', 'outer'] = ..., ignore_index: bool = ..., keys: Iterable[HashableT2] = ..., levels: Sequence[list[HashableT3] | tuple[HashableT3, ...]] = ..., names: list[HashableT4] | None = ..., verify_integrity: bool = ..., sort: bool = ..., copy: bool = ...) -> DataFrame
infrastructure\strategies\volatility_strategy.py:452:45: error: "dict[str, Any]" has no attribute "atr_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:456:46: error: "dict[str, Any]" has no attribute "keltner_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:458:46: error: "dict[str, Any]" has no attribute "keltner_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:460:31: error: "dict[str, Any]" has no attribute "keltner_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:463:31: error: "dict[str, Any]" has no attribute "keltner_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:468:45: error: "dict[str, Any]" has no attribute "donchian_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:471:44: error: "dict[str, Any]" has no attribute "donchian_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:478:38: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\strategies\volatility_strategy.py:479:33: error: "dict[str, Any]" has no attribute "rsi_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:483:39: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\strategies\volatility_strategy.py:484:33: error: "dict[str, Any]" has no attribute "rsi_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:492:47: error: "dict[str, Any]" has no attribute "volume_ma_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:532:47: error: "dict[str, Any]" has no attribute "max_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:561:40: error: "dict[str, Any]" has no attribute "rsi_overbought"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:564:44: error: "dict[str, Any]" has no attribute "rsi_oversold"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:600:25: error: "dict[str, Any]" has no attribute "risk_per_trade"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:607:48: error: "dict[str, Any]" has no attribute "max_position_size"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:645:50: error: "dict[str, Any]" has no attribute "min_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:646:19: error: "dict[str, Any]" has no attribute "max_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:667:34: error: "dict[str, Any]" has no attribute "volatility_window"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:668:26: error: "dict[str, Any]" has no attribute "bb_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:669:23: error: "dict[str, Any]" has no attribute "bb_std"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:670:31: error: "dict[str, Any]" has no attribute "min_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:671:31: error: "dict[str, Any]" has no attribute "max_volatility"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:672:27: error: "dict[str, Any]" has no attribute "atr_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:673:31: error: "dict[str, Any]" has no attribute "atr_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:674:31: error: "dict[str, Any]" has no attribute "keltner_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:675:35: error: "dict[str, Any]" has no attribute "keltner_multiplier"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:676:32: error: "dict[str, Any]" has no attribute "donchian_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:677:27: error: "dict[str, Any]" has no attribute "rsi_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:678:31: error: "dict[str, Any]" has no attribute "rsi_overbought"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:679:29: error: "dict[str, Any]" has no attribute "rsi_oversold"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:680:33: error: "dict[str, Any]" has no attribute "volume_ma_period"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:681:31: error: "dict[str, Any]" has no attribute "risk_per_trade"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:682:34: error: "dict[str, Any]" has no attribute "max_position_size"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:683:30: error: "dict[str, Any]" has no attribute "trailing_stop"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:684:30: error: "dict[str, Any]" has no attribute "trailing_step"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:685:30: error: "dict[str, Any]" has no attribute "partial_close"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:686:37: error: "dict[str, Any]" has no attribute "partial_close_levels"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:687:36: error: "dict[str, Any]" has no attribute "partial_close_sizes"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:688:27: error: "dict[str, Any]" has no attribute "max_trades"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:689:27: error: "dict[str, Any]" has no attribute "min_volume"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:690:27: error: "dict[str, Any]" has no attribute "max_spread"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:691:31: error: "dict[str, Any]" has no attribute "min_confidence"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:692:24: error: "dict[str, Any]" has no attribute "symbols"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:693:27: error: "dict[str, Any]" has no attribute "timeframes"  [attr-defined]
infrastructure\strategies\volatility_strategy.py:694:24: error: "dict[str, Any]" has no attribute "log_dir"  [attr-defined]
infrastructure\strategies\sideways_strategies.py:47:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\sideways_strategies.py:141:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\sideways_strategies.py:427:34: error: "SidewaysStrategy" has no attribute "technical_analysis"  [attr-defined]
infrastructure\strategies\sideways_strategies.py:430:31: error: "SidewaysStrategy" has no attribute "technical_analysis"  [attr-defined]
infrastructure\strategies\sideways_strategies.py:542:30: error: "SidewaysStrategy" has no attribute "technical_analysis"  [attr-defined]
infrastructure\strategies\sideways_strategies.py:546:30: error: "SidewaysStrategy" has no attribute "technical_analysis"  [attr-defined]
domain\intelligence\mirror_detector.py:420:41: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
domain\sessions\session_influence_analyzer.py:121:13: error: Dict entry 4 has incompatible type "str": "dict[str, str | float | int]"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_influence_analyzer.py:126:13: error: Dict entry 9 has incompatible type "str": "dict[str, str | float | int]"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_influence_analyzer.py:127:13: error: Dict entry 10 has incompatible type "str": "list[dict[str, str | float | int]]"; expected "str": "str | float | int"  [dict-item]
domain\sessions\session_influence_analyzer.py:372:57: error: Item "None" of "SessionState | None" has no attribute "phase"  [union-attr]
domain\sessions\session_influence_analyzer.py:446:51: error: Item "None" of "SessionState | None" has no attribute "phase"  [union-attr]
domain\sessions\session_influence_analyzer.py:517:35: error: Argument 2 to "polyfit" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
domain\sessions\session_influence_analyzer.py:542:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
domain\sessions\session_influence_analyzer.py:543:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\prediction\reversal_signal.py:286:27: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:294:27: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:358:17: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:362:17: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:366:17: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:371:21: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:373:13: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceScore")  [assignment]
domain\prediction\reversal_signal.py:374:36: error: Incompatible types in assignment (expression has type "float", variable has type "SignalStrengthScore")  [assignment]
domain\types\__init__.py:354:1: error: Incompatible import of "VolumeValue" (imported name has type "type[domain.types.symbol_types.VolumeValue]", local name has type "type[domain.types.VolumeValue]")  [assignment]
domain\types\__init__.py:354:1: error: Incompatible import of "PriceValue" (imported name has type "type[domain.types.symbol_types.PriceValue]", local name has type "type[domain.types.PriceValue]")  [assignment]
domain\types\__init__.py:354:1: error: Incompatible import of "VolatilityValue" (imported name has type "type[domain.types.symbol_types.VolatilityValue]", local name has type "type[domain.types.VolatilityValue]")  [assignment]
domain\types\__init__.py:354:1: error: Incompatible import of "TrendStrengthValue" (imported name has type "type[domain.types.symbol_types.TrendStrengthValue]", local name has type "type[domain.types.TrendStrengthValue]")  [assignment]
domain\entities\trading.py:104:19: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:242:19: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:256:56: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:257:58: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:264:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\entities\trading.py:324:25: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:325:27: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:328:23: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\trading.py:329:25: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\entities\strategy_execution.py:119:13: error: Dict entry 5 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_execution.py:120:13: error: Dict entry 6 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_execution.py:121:25: error: List comprehension has incompatible type List[dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]]; expected List[str]  [misc]
domain\entities\strategy_execution.py:122:24: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]
domain\entities\strategy_execution.py:123:13: error: Dict entry 9 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_execution.py:124:13: error: Dict entry 10 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_execution.py:125:13: error: Dict entry 11 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_execution.py:188:9: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
domain\entities\strategy_execution.py:200:9: error: Need type annotation for "trades" (hint: "trades: list[<type>] = ...")  [var-annotated]
domain\entities\strategy_execution.py:215:61: error: Argument 1 to "from_dict" of "StrategyPerformance" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_execution.py:215:61: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_execution.py:215:61: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\strategy_execution.py:238:20: error: Argument "config" to "StrategyExecution" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_execution.py:238:20: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_execution.py:238:20: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\strategy_execution.py:242:22: error: Argument "metadata" to "StrategyExecution" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_execution.py:242:22: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_execution.py:242:22: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\strategy_execution.py:243:27: error: Argument "error_message" to "StrategyExecution" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool] | None"; expected "str | None"  [arg-type]
domain\exceptions\__init__.py:5:1: error: Module "domain.exceptions.base_exceptions" has no attribute "ValidationError"; maybe "EvaluationError"?  [attr-defined]
domain\exceptions\__init__.py:5:1: error: Module "domain.exceptions.base_exceptions" has no attribute "EntityNotFoundError"  [attr-defined]
domain\exceptions\__init__.py:5:1: error: Module "domain.exceptions.base_exceptions" has no attribute "InvalidOperationError"; maybe "InvalidPositionError" or "InvalidPortfolioError"?  [attr-defined]
domain\exceptions\__init__.py:49:1: error: Module "domain.exceptions.protocol_exceptions" has no attribute "InterfaceError"  [attr-defined]
domain\exceptions\__init__.py:49:1: error: Module "domain.exceptions.protocol_exceptions" has no attribute "ContractViolationError"  [attr-defined]
domain\exceptions\__init__.py:83:59: error: Incompatible default for argument "analysis_type" (default has type "None", argument has type "str")  [assignment]
domain\exceptions\__init__.py:83:59: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
domain\exceptions\__init__.py:83:59: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
domain\exceptions\__init__.py:83:79: error: Incompatible default for argument "symbol" (default has type "None", argument has type "str")  [assignment]
domain\exceptions\__init__.py:92:54: error: Incompatible default for argument "currency" (default has type "None", argument has type "str")  [assignment]
domain\exceptions\__init__.py:92:54: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
domain\exceptions\__init__.py:92:54: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
domain\exceptions\__init__.py:100:52: error: Incompatible default for argument "symbol" (default has type "None", argument has type "str")  [assignment]
domain\exceptions\__init__.py:100:52: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
domain\exceptions\__init__.py:100:52: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
domain\services\risk_analysis.py:295:62: error: Argument 1 to "calculate_portfolio_risk" of "DefaultRiskAnalysisService" has incompatible type "DataFrame"; expected "Series[Any]"  [arg-type]
domain\services\risk_analysis.py:328:18: error: No overload variant of "minimize" matches argument types "Callable[[Any], Any]", "ndarray[Any, dtype[Any]]", "str", "tuple[tuple[int, int], ...]", "tuple[dict[str, object]]"  [call-overload]
domain\services\risk_analysis.py:328:18: note: Possible overload variants:
domain\services\risk_analysis.py:328:18: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], float | floating[Any] | integer[Any] | bool_], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., jac: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | Literal['2-point', '3-point', 'cs'] | Literal[False, 0] | None = ..., hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\services\risk_analysis.py:328:18: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...], method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\services\risk_analysis.py:328:18: note:     def minimize(fun: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], tuple[float | floating[Any] | integer[Any] | bool_, CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]], x0: float | floating[Any] | integer[Any] | bool_ | CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]], args: tuple[object, ...] = ..., method: Literal['Nelder-Mead', 'nelder-mead', 'Powell', 'powell', 'CG', 'cg', 'BFGS', 'bfgs', 'Newton-CG', 'newton-cg', 'L-BFGS-B', 'l-bfgs-b', 'TNC', 'tnc', 'COBYLA', 'cobyla', 'COBYQA', 'cobyqa', 'SLSQP', 'slsqp', 'Trust-Constr', 'trust-constr', 'Dogleg', 'dogleg', 'Trust-NCG', 'trust-ncg', 'Trust-Exact', 'trust-exact', 'Trust-Krylov', 'trust-krylov'] | _MinimizeMethodFun | None = ..., *, jac: Literal[True, 1], hess: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]]] | Literal['2-point', '3-point', 'cs'] | HessianUpdateStrategy | None = ..., hessp: Callable[[ndarray[tuple[int], dtype[floating[_64Bit]]], ndarray[tuple[int], dtype[floating[_64Bit]]], VarArg(Any), KwArg(Any)], CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | Sequence[float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]] | None = ..., bounds: Sequence[tuple[float | floating[Any] | integer[Any] | bool_ | None, float | floating[Any] | integer[Any] | bool_ | None]] | Bounds | None = ..., constraints: LinearConstraint | NonlinearConstraint | _ConstraintDict | Sequence[LinearConstraint | NonlinearConstraint | _ConstraintDict] = ..., tol: float | floating[Any] | integer[Any] | bool_ | None = ..., callback: _CallbackResult | _CallbackVector | None = ..., options: _MinimizeOptions | None = ...) -> OptimizeResult
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "str")  [operator]
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "bytes")  [operator]
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "date")  [operator]
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "timedelta")  [operator]
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "datetime64")  [operator]
domain\services\risk_analysis.py:389:28: error: Unsupported operand types for / ("float" and "timedelta64")  [operator]
domain\services\risk_analysis.py:389:28: note: Right operand is of type "str | bytes | date | timedelta | datetime64 | <7 more items>"
domain\services\risk_analysis.py:389:61: error: Unsupported operand types for < ("int" and "complex")  [operator]
domain\services\risk_analysis.py:389:61: note: Left operand is of type "str | bytes | date | timedelta | datetime64 | <7 more items>"
domain\services\risk_analysis.py:389:79: error: Unsupported operand types for > ("str" and "int")  [operator]
domain\services\risk_analysis.py:389:79: error: Unsupported operand types for > ("bytes" and "int")  [operator]
domain\services\risk_analysis.py:389:79: error: Unsupported operand types for > ("date" and "int")  [operator]
domain\services\risk_analysis.py:389:79: error: Unsupported operand types for > ("timedelta" and "int")  [operator]
domain\services\risk_analysis.py:441:36: error: Argument 1 to "float" has incompatible type "str | bytes | date | timedelta | datetime64 | <7 more items>"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\risk_analysis.py:550:33: error: "RiskMetrics" has no attribute "volatility"  [attr-defined]
domain\services\risk_analysis.py:551:32: error: "RiskMetrics" has no attribute "var_95"  [attr-defined]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "portfolio_id" for "RiskMetrics"; did you mean "portfolio_risk" or "portfolio_beta"?  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "var_95" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "var_99" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "volatility" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "beta" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "alpha" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "skewness" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "kurtosis" for "RiskMetrics"  [call-arg]
domain\services\risk_analysis.py:553:16: error: Unexpected keyword argument "correlation" for "RiskMetrics"; did you mean "avg_correlation" or "max_correlation"?  [call-arg]
domain\services\risk_analysis.py:554:26: error: "RiskMetrics" has no attribute "portfolio_id"; maybe "portfolio_risk" or "portfolio_beta"?  [attr-defined]
domain\services\risk_analysis.py:556:20: error: "RiskMetrics" has no attribute "var_99"  [attr-defined]
domain\services\risk_analysis.py:561:18: error: "RiskMetrics" has no attribute "beta"  [attr-defined]
domain\services\risk_analysis.py:562:19: error: "RiskMetrics" has no attribute "alpha"  [attr-defined]
domain\services\risk_analysis.py:563:22: error: "RiskMetrics" has no attribute "skewness"  [attr-defined]
domain\services\risk_analysis.py:564:22: error: "RiskMetrics" has no attribute "kurtosis"  [attr-defined]
domain\services\risk_analysis.py:565:25: error: "RiskMetrics" has no attribute "correlation"; maybe "avg_correlation" or "max_correlation"?  [attr-defined]
domain\entities\strategy_new.py:170:13: error: Dict entry 9 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:171:13: error: Dict entry 10 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:172:13: error: Dict entry 11 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:247:50: error: Slice index must be an integer, SupportsIndex or None  [misc]
domain\entities\strategy_new.py:286:24: error: Argument "confidence" to "Signal" has incompatible type "Decimal | int"; expected "Decimal"  [arg-type]
domain\entities\strategy_new.py:291:17: error: Dict entry 2 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:316:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:341:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:366:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:391:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:406:28: error: Argument 1 to "range" has incompatible type "Decimal | int"; expected "SupportsIndex"  [arg-type]
domain\entities\strategy_new.py:418:21: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:444:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:469:17: error: Dict entry 3 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:488:17: error: Dict entry 1 has incompatible type "str": "str | None"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:764:13: error: Dict entry 3 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:766:13: error: Dict entry 5 has incompatible type "str": "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"; expected "str": "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"  [dict-item]
domain\entities\strategy_new.py:810:20: error: Argument "config" to "AbstractStrategy" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_new.py:810:20: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_new.py:810:20: note: Consider using "Mapping" instead, which is covariant in the value type
domain\entities\strategy_new.py:817:57: error: Argument 1 to "from_dict" of "StrategyPerformance" has incompatible type "dict[str, str | int | float | Decimal | bool]"; expected "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]"  [arg-type]
domain\entities\strategy_new.py:817:57: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\entities\strategy_new.py:817:57: note: Consider using "Mapping" instead, which is covariant in the value type
domain\evolution\strategy_model.py:62:39: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "IndicatorParameters")  [assignment]
domain\evolution\strategy_model.py:76:25: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_model.py:150:36: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "FilterParameters")  [assignment]
domain\evolution\strategy_model.py:164:25: error: TypedDict key must be a string literal; expected one of ("min_atr", "max_atr", "min_width", "max_width", "min_volume", ...)  [literal-required]
domain\evolution\strategy_model.py:532:9: error: Incompatible types in assignment (expression has type "ExitRule", variable has type "EntryRule")  [assignment]
domain\evolution\strategy_model.py:533:27: error: "EntryRule" has no attribute "validate_parameters"  [attr-defined]
domain\evolution\strategy_model.py:593:9: error: Incompatible types in assignment (expression has type "ExitRule", variable has type "EntryRule")  [assignment]
domain\evolution\strategy_model.py:594:41: error: Argument 1 to "append" of "list" has incompatible type "EntryRule"; expected "ExitRule"  [arg-type]
domain\evolution\strategy_fitness.py:255:12: error: Unsupported operand types for < ("int" and "object")  [operator]
domain\evolution\strategy_fitness.py:256:59: error: Unsupported operand types for / ("Decimal" and "object")  [operator]
domain\evolution\strategy_fitness.py:256:59: error: Unsupported operand types for / ("Literal[0]" and "object")  [operator]
domain\evolution\strategy_fitness.py:256:59: note: Left operand is of type "Decimal | Literal[0]"
domain\evolution\strategy_fitness.py:668:42: error: Argument 1 to "_evaluate_conditions" of "StrategyFitnessEvaluator" has incompatible type "list[EntryCondition]"; expected "list[dict[str, Any]]"  [arg-type]
domain\evolution\strategy_fitness.py:692:42: error: Argument 1 to "_evaluate_conditions" of "StrategyFitnessEvaluator" has incompatible type "list[ExitCondition]"; expected "list[dict[str, Any]]"  [arg-type]
domain\evolution\strategy_fitness.py:733:16: error: Missing keys ("current_price", "unrealized_pnl", "holding_time") for TypedDict "TradePosition"  [typeddict-item]
domain\intelligence\entanglement_detector.py:77:9: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:173:17: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:179:17: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:188:13: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:221:17: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:254:21: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:314:21: error: Name "logger" is not defined  [name-defined]
domain\intelligence\entanglement_detector.py:459:9: error: Name "logger" is not defined  [name-defined]
infrastructure\services\technical_analysis\signal_generation.py:360:28: error: "type[PatternType]" has no attribute "DOUBLE_BOTTOM"  [attr-defined]
infrastructure\services\technical_analysis\signal_generation.py:371:30: error: "type[PatternType]" has no attribute "DOUBLE_TOP"  [attr-defined]
infrastructure\services\technical_analysis\signal_generation.py:382:30: error: "type[PatternType]" has no attribute "HEAD_AND_SHOULDERS"  [attr-defined]
infrastructure\services\technical_analysis\signal_generation.py:393:30: error: "type[PatternType]" has no attribute "INVERSE_HEAD_AND_SHOULDERS"  [attr-defined]
infrastructure\services\technical_analysis\signal_generation.py:440:16: error: Incompatible return value type (got "None", expected "TradingSignal")  [return-value]
infrastructure\services\technical_analysis\signal_generation.py:456:16: error: Incompatible return value type (got "None", expected "TradingSignal")  [return-value]
infrastructure\services\technical_analysis\signal_generation.py:477:15: error: Argument "price" to "TradingSignal" has incompatible type "Decimal | float"; expected "Decimal"  [arg-type]
infrastructure\services\technical_analysis\market_structure.py:75:9: error: Unexpected keyword argument "last_touch" for "SupportResistanceLevel"  [call-arg]
infrastructure\services\technical_analysis\market_structure.py:75:9: error: Unexpected keyword argument "volume_confirmation" for "SupportResistanceLevel"  [call-arg]
infrastructure\services\technical_analysis\market_structure.py:76:19: error: Argument "price" to "SupportResistanceLevel" has incompatible type "Decimal"; expected "float"  [arg-type]
infrastructure\services\technical_analysis\market_structure.py:86:9: error: Unexpected keyword argument "last_touch" for "SupportResistanceLevel"  [call-arg]
infrastructure\services\technical_analysis\market_structure.py:86:9: error: Unexpected keyword argument "volume_confirmation" for "SupportResistanceLevel"  [call-arg]
infrastructure\services\technical_analysis\market_structure.py:87:19: error: Argument "price" to "SupportResistanceLevel" has incompatible type "Decimal"; expected "float"  [arg-type]
infrastructure\services\technical_analysis\market_structure.py:201:60: error: Name "close" is not defined  [name-defined]
infrastructure\services\technical_analysis\market_structure.py:295:28: error: "type[PatternType]" has no attribute "DOUBLE_TOP"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:330:28: error: "type[PatternType]" has no attribute "DOUBLE_BOTTOM"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:370:28: error: "type[PatternType]" has no attribute "HEAD_AND_SHOULDERS"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:412:28: error: "type[PatternType]" has no attribute "INVERSE_HEAD_AND_SHOULDERS"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:444:24: error: "type[PatternType]" has no attribute "SYMMETRICAL_TRIANGLE"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:453:24: error: "type[PatternType]" has no attribute "DESCENDING_TRIANGLE"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:462:24: error: "type[PatternType]" has no attribute "ASCENDING_TRIANGLE"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:504:28: error: "type[PatternType]" has no attribute "FLAG"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:510:28: error: "type[PatternType]" has no attribute "PENNANT"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:534:35: error: "SupportResistanceLevel" has no attribute "volume_confirmation"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:535:56: error: "SupportResistanceLevel" has no attribute "volume_confirmation"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:550:35: error: "SupportResistanceLevel" has no attribute "volume_confirmation"  [attr-defined]
infrastructure\services\technical_analysis\market_structure.py:551:56: error: "SupportResistanceLevel" has no attribute "volume_confirmation"  [attr-defined]
infrastructure\agents\market_regime\agent.py:24:47: error: Argument 2 to "__init__" of "BaseAgent" has incompatible type "dict[str, Any] | None"; expected "Literal['market_maker', 'whale_analyzer', 'risk_manager', 'portfolio_optimizer', 'order_executor', 'news_analyzer', 'market_regime', 'strategy_agent', 'meta_controller', 'evolutionary_agent', 'social_media', 'entanglement_detector']"  [arg-type]
infrastructure\agents\market_regime\agent.py:26:9: error: Property "config" defined in "BaseAgent" is read-only  [misc]
infrastructure\agents\market_regime\agent.py:26:23: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "AgentConfig")  [assignment]
infrastructure\agents\market_regime\agent.py:57:13: error: Property "status" defined in "AgentState" is read-only  [misc]
infrastructure\agents\market_regime\agent.py:68:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "process" incompatible with return type "Coroutine[Any, Any, ProcessingResult]" in supertype "BaseAgent"  [override]
infrastructure\agents\market_regime\agent.py:143:37: error: TypedDict key must be a string literal; expected one of ("name", "agent_type", "max_position_size", "max_portfolio_risk", "confidence_threshold", ...)  [literal-required]
infrastructure\agents\market_regime\agent.py:194:50: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[MarketRegime], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
infrastructure\agents\market_regime\agent.py:264:47: error: TypedDict "AgentConfig" has no key "adx_threshold"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:284:53: error: TypedDict "AgentConfig" has no key "adx_threshold"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:301:34: error: TypedDict "AgentConfig" has no key "rsi_overbought"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:301:73: error: TypedDict "AgentConfig" has no key "rsi_oversold"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:323:47: error: TypedDict "AgentConfig" has no key "obv_threshold"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:338:42: error: TypedDict "AgentConfig" has no key "volatility_threshold"  [typeddict-item]
infrastructure\agents\market_regime\agent.py:374:9: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
domain\protocols\ml_protocol.py:17:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\protocols\ml_protocol.py:18:1: error: Skipping analyzing "sklearn.model_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\protocols\ml_protocol.py:19:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\protocols\ml_protocol.py:191:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\ml_protocol.py:192:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\ml_protocol.py:193:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\ml_protocol.py:194:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\ml_protocol.py:921:29: error: "type[UUID]" has no attribute "uuid4"  [attr-defined]
domain\protocols\ml_protocol.py:931:28: error: Invalid index type "UUID" for "dict[ModelId, Model]"; expected type "ModelId"  [index]
domain\types\external_service_types.py:281:34: error: Incompatible types in assignment (expression has type "float", variable has type "ConnectionTimeout")  [assignment]
domain\types\external_service_types.py:282:38: error: Incompatible types in assignment (expression has type "int", variable has type "ReconnectAttempts")  [assignment]
domain\types\external_service_types.py:284:29: error: Incompatible types in assignment (expression has type "int", variable has type "RateLimit")  [assignment]
domain\types\external_service_types.py:285:42: error: Incompatible types in assignment (expression has type "int", variable has type "RateLimitWindow")  [assignment]
domain\entities\trade.py:70:12: error: "Price" has no attribute "is_zero"  [attr-defined]
domain\entities\trade.py:73:12: error: "Volume" has no attribute "is_zero"  [attr-defined]
domain\entities\trade.py:80:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
shared\exception_handler.py:268:9: error: "ExceptionContext" has no attribute "logger"  [attr-defined]
shared\exception_handler.py:273:9: error: "ExceptionContext" has no attribute "logger"  [attr-defined]
shared\exception_handler.py:278:9: error: "ExceptionContext" has no attribute "logger"  [attr-defined]
shared\exception_handler.py:283:9: error: "ExceptionContext" has no attribute "logger"  [attr-defined]
domain\strategies\utils.py:102:39: error: Unsupported operand types for - ("float" and "Decimal")  [operator]
domain\strategies\utils.py:102:39: note: Left operand is of type "Decimal | float"
domain\strategies\utils.py:112:32: error: Generator has incompatible item type "Decimal | Any"; expected "bool"  [misc]
domain\strategies\utils.py:112:33: error: Unsupported operand types for - ("Decimal" and "float")  [operator]
domain\strategies\utils.py:112:33: note: Right operand is of type "Decimal | float"
domain\strategies\utils.py:115:28: error: "float" has no attribute "sqrt"  [attr-defined]
domain\strategies\utils.py:354:16: error: Cannot use isinstance() with NewType type  [misc]
domain\strategies\utils.py:391:39: error: Incompatible types in assignment (expression has type "str", target has type "Decimal")  [assignment]
domain\strategies\utils.py:393:35: error: Incompatible types in assignment (expression has type "str", target has type "Decimal")  [assignment]
domain\strategies\utils.py:607:30: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\strategies\utils.py:607:30: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\strategies\utils.py:634:30: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\strategies\utils.py:634:30: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\strategies\utils.py:650:25: error: callable? not callable  [misc]
domain\strategies\utils.py:663:30: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\strategies\utils.py:663:30: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\strategies\utils.py:685:33: error: callable? not callable  [misc]
domain\strategies\utils.py:701:30: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\strategies\utils.py:701:30: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\strategies\utils.py:717:25: error: callable? not callable  [misc]
domain\strategies\utils.py:884:19: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
domain\strategies\utils.py:888:12: error: Incompatible return value type (got "list[int]", expected "list[float]")  [return-value]
domain\strategies\utils.py:888:12: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\strategies\utils.py:888:12: note: Consider using "Sequence" instead, which is covariant
domain\strategies\utils.py:888:12: note: Perhaps you need a type annotation for "rsi_values"? Suggestion: "list[float]"
domain\strategies\utils.py:955:12: error: Incompatible return value type (got "tuple[list[floating[Any]], list[float], list[floating[Any]]]", expected "tuple[list[float], list[float], list[float]]")  [return-value]
domain\strategies\utils.py:1062:12: error: Incompatible return value type (got "list[floating[Any]]", expected "list[float]")  [return-value]
domain\strategies\strategy_types.py:384:1: error: Name "StrategyConfig" already defined (possibly by an import)  [no-redef]
domain\strategies\strategy_types.py:443:16: error: Incompatible return value type (got "domain.strategies.strategy_types.StrategyConfig", expected "domain.types.StrategyConfig")  [return-value]
domain\repositories\base_repository.py:348:6: error: Argument 1 to "asynccontextmanager" has incompatible type "Callable[[BaseRepository[T]], Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]]"; expected "Callable[[BaseRepository[T]], AsyncIterator[Never]]"  [arg-type]
domain\repositories\base_repository.py:361:20: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\repositories\base_repository.py:361:20: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\repositories\base_repository.py:754:1: error: Library stubs not installed for "psutil"  [import-untyped]
domain\repositories\base_repository.py:781:1: error: Name "EntityNotFoundError" already defined (possibly by an import)  [no-redef]
domain\repositories\base_repository.py:785:1: error: Name "ValidationError" already defined (possibly by an import)  [no-redef]
domain\symbols\validators.py:271:42: error: Argument 1 to "validate_pattern_memory" of "SymbolDataValidator" has incompatible type "PatternMemoryData | None"; expected "PatternMemoryData"  [arg-type]
domain\symbols\symbol_profile.py:29:35: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:30:34: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:31:34: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:32:35: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:33:33: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:34:41: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceValue")  [assignment]
domain\symbols\symbol_profile.py:51:28: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "current_volume" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:52:27: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "avg_volume_1m" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:53:27: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "avg_volume_5m" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:54:28: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "avg_volume_15m" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:55:26: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "volume_trend" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:65:33: error: Incompatible types in assignment (expression has type "float", variable has type "PriceValue")  [assignment]
domain\symbols\symbol_profile.py:66:21: error: Incompatible types in assignment (expression has type "float", variable has type "ATRValue")  [assignment]
domain\symbols\symbol_profile.py:68:23: error: Incompatible types in assignment (expression has type "float", variable has type "VWAPValue")  [assignment]
domain\symbols\symbol_profile.py:73:35: error: Incompatible types in assignment (expression has type "float", variable has type "EntropyValue")  [assignment]
domain\symbols\symbol_profile.py:74:47: error: Incompatible types in assignment (expression has type "float", variable has type "VolatilityValue")  [assignment]
domain\symbols\symbol_profile.py:102:27: error: Incompatible types (expression has type "domain.types.PriceValue", TypedDict item "current_price" has type "domain.types.symbol_types.PriceValue")  [typeddict-item]
domain\symbols\symbol_profile.py:107:27: error: Incompatible types (expression has type "domain.types.PriceValue | None", TypedDict item "support_level" has type "domain.types.symbol_types.PriceValue | None")  [typeddict-item]
domain\symbols\symbol_profile.py:108:30: error: Incompatible types (expression has type "domain.types.PriceValue | None", TypedDict item "resistance_level" has type "domain.types.symbol_types.PriceValue | None")  [typeddict-item]
domain\symbols\symbol_profile.py:109:25: error: Incompatible types (expression has type "domain.types.PriceValue | None", TypedDict item "pivot_point" has type "domain.types.symbol_types.PriceValue | None")  [typeddict-item]
domain\symbols\symbol_profile.py:111:36: error: Incompatible types (expression has type "domain.types.VolatilityValue", TypedDict item "volatility_compression" has type "domain.types.symbol_types.VolatilityValue")  [typeddict-item]
domain\symbols\symbol_profile.py:116:1: error: Name "OrderBookMetrics" already defined (possibly by an import)  [no-redef]
domain\symbols\symbol_profile.py:119:35: error: Incompatible types in assignment (expression has type "float", variable has type "SpreadValue")  [assignment]
domain\symbols\symbol_profile.py:121:31: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:122:31: error: Incompatible types in assignment (expression has type "float", variable has type "VolumeValue")  [assignment]
domain\symbols\symbol_profile.py:152:24: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "bid_volume" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:153:24: error: Incompatible types (expression has type "domain.types.VolumeValue", TypedDict item "ask_volume" has type "domain.types.symbol_types.VolumeValue")  [typeddict-item]
domain\symbols\symbol_profile.py:162:1: error: Name "PatternMetrics" already defined (possibly by an import)  [no-redef]
domain\symbols\symbol_profile.py:168:50: error: Incompatible types in assignment (expression has type "float", variable has type "PatternConfidenceValue")  [assignment]
domain\symbols\symbol_profile.py:200:1: error: Name "SessionMetrics" already defined (possibly by an import)  [no-redef]
domain\symbols\symbol_profile.py:203:48: error: Incompatible types in assignment (expression has type "float", variable has type "SessionAlignmentValue")  [assignment]
domain\symbols\symbol_profile.py:205:43: error: Incompatible types in assignment (expression has type "float", variable has type "VolatilityValue")  [assignment]
domain\symbols\symbol_profile.py:206:39: error: Incompatible types in assignment (expression has type "float", variable has type "MomentumValue")  [assignment]
domain\symbols\symbol_profile.py:225:32: error: Incompatible types (expression has type "domain.types.VolatilityValue", TypedDict item "session_volatility" has type "domain.types.symbol_types.VolatilityValue")  [typeddict-item]
domain\symbols\symbol_profile.py:242:35: error: Incompatible types in assignment (expression has type "float", variable has type "ConfidenceValue")  [assignment]
domain\symbols\symbol_profile.py:247:66: error: Argument "default_factory" to "field" has incompatible type "type[OrderBookMetrics]"; expected "Callable[[], OrderBookMetrics]"  [arg-type]
domain\symbols\symbol_profile.py:248:61: error: Argument "default_factory" to "field" has incompatible type "type[PatternMetrics]"; expected "Callable[[], PatternMetrics]"  [arg-type]
domain\symbols\symbol_profile.py:249:61: error: Argument "default_factory" to "field" has incompatible type "type[SessionMetrics]"; expected "Callable[[], SessionMetrics]"  [arg-type]
domain\symbols\symbol_profile.py:295:31: error: "OrderBookMetrics" has no attribute "spread_percent"  [attr-defined]
domain\symbols\symbol_profile.py:296:35: error: "PatternMetrics" has no attribute "pattern_confidence"  [attr-defined]
domain\symbols\symbol_profile.py:297:34: error: "SessionMetrics" has no attribute "session_alignment"  [attr-defined]
domain\symbols\symbol_profile.py:332:35: error: "OrderBookMetrics" has no attribute "bid_ask_spread"  [attr-defined]
domain\symbols\symbol_profile.py:333:35: error: "OrderBookMetrics" has no attribute "spread_percent"  [attr-defined]
domain\symbols\symbol_profile.py:334:31: error: "OrderBookMetrics" has no attribute "bid_volume"  [attr-defined]
domain\symbols\symbol_profile.py:335:31: error: "OrderBookMetrics" has no attribute "ask_volume"  [attr-defined]
domain\symbols\symbol_profile.py:336:37: error: "OrderBookMetrics" has no attribute "volume_imbalance"  [attr-defined]
domain\symbols\symbol_profile.py:337:40: error: "OrderBookMetrics" has no attribute "order_book_symmetry"  [attr-defined]
domain\symbols\symbol_profile.py:338:36: error: "OrderBookMetrics" has no attribute "liquidity_depth"  [attr-defined]
domain\symbols\symbol_profile.py:339:37: error: "OrderBookMetrics" has no attribute "absorption_ratio"  [attr-defined]
domain\symbols\symbol_profile.py:342:40: error: "PatternMetrics" has no attribute "mirror_neuron_score"  [attr-defined]
domain\symbols\symbol_profile.py:343:42: error: "PatternMetrics" has no attribute "gravity_anomaly_score"  [attr-defined]
domain\symbols\symbol_profile.py:344:41: error: "PatternMetrics" has no attribute "reversal_setup_score"  [attr-defined]
domain\symbols\symbol_profile.py:345:39: error: "PatternMetrics" has no attribute "pattern_confidence"  [attr-defined]
domain\symbols\symbol_profile.py:346:45: error: "PatternMetrics" has no attribute "historical_pattern_match"  [attr-defined]
domain\symbols\symbol_profile.py:347:39: error: "PatternMetrics" has no attribute "pattern_complexity"  [attr-defined]
domain\symbols\symbol_profile.py:350:38: error: "SessionMetrics" has no attribute "session_alignment"  [attr-defined]
domain\symbols\symbol_profile.py:351:37: error: "SessionMetrics" has no attribute "session_activity"  [attr-defined]
domain\symbols\symbol_profile.py:352:39: error: "SessionMetrics" has no attribute "session_volatility"  [attr-defined]
domain\symbols\symbol_profile.py:353:37: error: "SessionMetrics" has no attribute "session_momentum"  [attr-defined]
domain\symbols\symbol_profile.py:354:44: error: "SessionMetrics" has no attribute "session_influence_score"  [attr-defined]
domain\symbols\symbol_profile.py:401:35: error: "OrderBookMetrics" has no attribute "to_metrics"  [attr-defined]
domain\symbols\symbol_profile.py:402:32: error: "PatternMetrics" has no attribute "to_metrics"  [attr-defined]
domain\symbols\symbol_profile.py:403:32: error: "SessionMetrics" has no attribute "to_metrics"  [attr-defined]
domain\symbols\symbol_profile.py:411:36: error: "OrderBookMetrics" has no attribute "bid_ask_spread"  [attr-defined]
domain\symbols\symbol_profile.py:412:33: error: "PatternMetrics" has no attribute "pattern_confidence"  [attr-defined]
domain\symbols\symbol_profile.py:413:33: error: "SessionMetrics" has no attribute "session_alignment"  [attr-defined]
domain\symbols\symbol_profile.py:419:13: error: Dict entry 0 has incompatible type "str": "VolatilityValue"; expected "str": "float"  [dict-item]
domain\symbols\symbol_profile.py:420:37: error: "OrderBookMetrics" has no attribute "liquidity_depth"  [attr-defined]
domain\symbols\symbol_profile.py:421:35: error: "PatternMetrics" has no attribute "pattern_confidence"  [attr-defined]
domain\symbols\symbol_profile.py:422:35: error: "SessionMetrics" has no attribute "session_alignment"  [attr-defined]
domain\symbols\symbol_profile.py:424:63: error: Unsupported operand types for * ("VolatilityValue" and "float")  [operator]
domain\symbols\symbol_profile.py:425:24: error: "OrderBookMetrics" has no attribute "liquidity_depth"  [attr-defined]
domain\symbols\symbol_profile.py:426:24: error: "PatternMetrics" has no attribute "pattern_confidence"  [attr-defined]
domain\symbols\symbol_profile.py:427:24: error: "SessionMetrics" has no attribute "session_alignment"  [attr-defined]
domain\types\service_types.py:207:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:219:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:229:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:241:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:253:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:264:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:274:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:284:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\types\service_types.py:297:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\sessions\__init__.py:41:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:41:14: error: Name "Any" is not defined  [name-defined]
domain\sessions\__init__.py:41:14: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
domain\sessions\__init__.py:42:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:42:17: error: Name "Any" is not defined  [name-defined]
domain\sessions\__init__.py:42:17: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
domain\sessions\__init__.py:43:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:43:20: error: Name "Any" is not defined  [name-defined]
domain\sessions\__init__.py:43:20: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
domain\sessions\__init__.py:44:5: error: Cannot assign to a type  [misc]
domain\sessions\__init__.py:44:23: error: Name "Any" is not defined  [name-defined]
domain\sessions\__init__.py:44:23: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
domain\services\pattern_service.py:16:1: error: Cannot find implementation or library stub for module named "domain.entities.pattern"  [import-not-found]
domain\services\pattern_service.py:19:1: error: Module "domain.types" has no attribute "PatternId"  [attr-defined]
domain\services\pattern_service.py:19:1: error: Module "domain.types" has no attribute "TradingPairId"  [attr-defined]
domain\services\pattern_service.py:93:20: error: "type[UUID]" has no attribute "uuid4"  [attr-defined]
domain\services\pattern_service.py:114:20: error: "type[UUID]" has no attribute "uuid4"  [attr-defined]
domain\services\pattern_service.py:252:40: error: Incompatible types in assignment (expression has type "str", target has type "dict[str, float]")  [assignment]
domain\types\protocol_types.py:425:1: error: Argument 2 to NewType(...) must be subclassable (got "str | int | float | bool | dict[str, Any]")  [valid-newtype]
domain\types\protocol_types.py:435:1: error: Argument 2 to NewType(...) must be subclassable (got "int | float | Decimal")  [valid-newtype]
domain\types\protocol_types.py:452:1: error: Cannot redefine "ConnectionStatus" as a NewType  [misc]
domain\types\protocol_types.py:452:1: error: Name "ConnectionStatus" already defined on line 38  [no-redef]
domain\types\protocol_types.py:486:1: error: Argument 2 to NewType(...) must be subclassable (got "int | float | str | bool")  [valid-newtype]
domain\types\protocol_types.py:491:1: error: Argument 2 to NewType(...) must be subclassable (got "int | float | str")  [valid-newtype]
domain\types\protocol_types.py:519:1: error: Argument 2 to NewType(...) must be subclassable (got "int | float | str")  [valid-newtype]
domain\types\protocol_types.py:547:1: error: Argument 2 to NewType(...) must be subclassable (got "Any")  [valid-newtype]
domain\types\protocol_types.py:566:1: error: Argument 2 to NewType(...) must be subclassable (got "Any")  [valid-newtype]
infrastructure\sessions\session_repository.py:169:13: error: Dict entry 8 has incompatible type "str": "str | None"; expected "str": "str | int | float"  [dict-item]
infrastructure\sessions\session_repository.py:170:13: error: Dict entry 9 has incompatible type "str": "str | None"; expected "str": "str | int | float"  [dict-item]
infrastructure\sessions\session_repository.py:237:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:338:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:404:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:410:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, str, str, str, float, str, str, str, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:416:32: error: "SessionMetrics" has no attribute "to_dict"  [attr-defined]
infrastructure\sessions\session_repository.py:417:32: error: "MarketConditions" has no attribute "to_dict"  [attr-defined]
infrastructure\sessions\session_repository.py:466:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:477:52: error: Argument 2 to "execute" of "Connection" has incompatible type "list[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:483:66: error: Argument 1 to "_row_to_session_analysis" of "SessionRepository" has incompatible type "Row[Any] | Any"; expected "tuple[Any, ...]"  [arg-type]
infrastructure\sessions\session_repository.py:507:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:514:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, str, str, str, str, float, float, str, float, str, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:574:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:595:52: error: Argument 2 to "execute" of "Connection" has incompatible type "list[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:601:74: error: Argument 1 to "_row_to_influence_result" of "SessionRepository" has incompatible type "Row[Any] | Any"; expected "tuple[Any, ...]"  [arg-type]
infrastructure\sessions\session_repository.py:625:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:632:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[Any, Any, Any, float, SessionType, Any, str, Any, Any, Any, Any, Any, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:633:21: error: "SessionInfluenceSignal" has no attribute "symbol"  [attr-defined]
infrastructure\sessions\session_repository.py:634:21: error: "SessionInfluenceSignal" has no attribute "score"  [attr-defined]
infrastructure\sessions\session_repository.py:635:21: error: "SessionInfluenceSignal" has no attribute "tendency"  [attr-defined]
infrastructure\sessions\session_repository.py:638:21: error: "SessionInfluenceSignal" has no attribute "session_phase"; maybe "session_type"?  [attr-defined]
infrastructure\sessions\session_repository.py:640:21: error: "SessionInfluenceSignal" has no attribute "volatility_impact"  [attr-defined]
infrastructure\sessions\session_repository.py:641:21: error: "SessionInfluenceSignal" has no attribute "volume_impact"  [attr-defined]
infrastructure\sessions\session_repository.py:642:21: error: "SessionInfluenceSignal" has no attribute "momentum_impact"  [attr-defined]
infrastructure\sessions\session_repository.py:643:21: error: "SessionInfluenceSignal" has no attribute "reversal_probability"  [attr-defined]
infrastructure\sessions\session_repository.py:644:21: error: "SessionInfluenceSignal" has no attribute "false_breakout_probability"  [attr-defined]
infrastructure\sessions\session_repository.py:694:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:715:52: error: Argument 2 to "execute" of "Connection" has incompatible type "list[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:721:54: error: Argument 1 to "_row_to_signal" of "SessionRepository" has incompatible type "Row[Any] | Any"; expected "tuple[Any, ...]"  [arg-type]
infrastructure\sessions\session_repository.py:770:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:779:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:791:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:802:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:839:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:853:115: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:855:105: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:857:106: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:859:108: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:861:109: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:885:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:913:47: error: Value of type "Row[Any] | Any | None" is not indexable  [index]
infrastructure\sessions\session_repository.py:921:52: error: Value of type "Row[Any] | Any | None" is not indexable  [index]
infrastructure\sessions\session_repository.py:927:31: error: Value of type "Row[Any] | Any | None" is not indexable  [index]
infrastructure\sessions\session_repository.py:949:15: error: Function "builtins.callable" is not valid as a type  [valid-type]
infrastructure\sessions\session_repository.py:949:15: note: Perhaps you meant "typing.Callable" instead of "callable"?
infrastructure\sessions\session_repository.py:960:26: error: callable? not callable  [misc]
infrastructure\sessions\session_repository.py:996:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:1001:23: error: Argument 2 to "execute" of "Connection" has incompatible type "tuple[str, float, bool, str | None]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:1044:23: error: Missing keys ("volume_change_percent", "volatility_change_percent", "price_direction_bias", "momentum_strength", "false_breakout_probability", "reversal_probability", "trend_continuation_probability", "influence_duration_minutes", "peak_influence_time_minutes", "spread_impact", "liquidity_impact", "correlation_with_other_sessions") for TypedDict "SessionMetrics"  [typeddict-item]
infrastructure\sessions\session_repository.py:1045:33: error: Missing keys ("volatility", "volume", "spread", "liquidity", "momentum", "trend_strength", "market_regime", "session_intensity") for TypedDict "MarketConditions"  [typeddict-item]
infrastructure\sessions\session_repository.py:1051:28: error: Argument "confidence" to "SessionAnalysisResult" has incompatible type "float"; expected "ConfidenceScore"  [arg-type]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "symbol" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "score" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "tendency" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "session_phase" for "SessionInfluenceSignal"; did you mean "session_type"?  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "volatility_impact" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "volume_impact" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "momentum_impact" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "reversal_probability" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1090:20: error: Unexpected keyword argument "false_breakout_probability" for "SessionInfluenceSignal"  [call-arg]
infrastructure\sessions\session_repository.py:1113:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:1142:18: error: Item "None" of "Engine | None" has no attribute "connect"  [union-attr]
infrastructure\sessions\session_repository.py:1163:52: error: Argument 2 to "execute" of "Connection" has incompatible type "list[str]"; expected "Sequence[Mapping[str, Any]] | Mapping[str, Any] | None"  [arg-type]
infrastructure\sessions\session_repository.py:1179:24: error: Incompatible return value type (got "dict[Any, dict[str, Any]]", expected "dict[str, str | float | int]")  [return-value]
domain\sessions\services.py:117:24: error: Incompatible return value type (got "object", expected "SessionContext")  [return-value]
domain\sessions\services.py:126:20: error: Incompatible return value type (got "dict[str, object]", expected "SessionContext")  [return-value]
domain\sessions\services.py:154:24: error: Incompatible return value type (got "object", expected "SessionAnalysisResult | None")  [return-value]
domain\sessions\services.py:194:24: error: Incompatible return value type (got "object", expected "SessionPrediction")  [return-value]
domain\sessions\services.py:260:24: error: Incompatible return value type (got "object", expected "list[str]")  [return-value]
domain\sessions\services.py:285:24: error: Incompatible return value type (got "object", expected "dict[str, Any]")  [return-value]
domain\sessions\services.py:318:21: error: List comprehension has incompatible type List[SessionTransition]; expected List[dict[str, Any]]  [misc]
domain\entities\portfolio_fixed.py:16:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
shared\abstractions\base_service.py:18:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
shared\abstractions\base_service.py:19:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\entities\portfolio.py:169:22: error: Name "ast" is not defined  [name-defined]
domain\entities\market.py:173:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\entities\market.py:248:82: error: Name "CurrencyCode" is not defined  [name-defined]
domain\entities\market.py:253:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\entities\market.py:277:56: error: "Price" has no attribute "base_currency"; maybe "currency"?  [attr-defined]
domain\entities\market.py:281:63: error: "Price" has no attribute "base_currency"; maybe "currency"?  [attr-defined]
domain\entities\market.py:285:80: error: "Price" has no attribute "base_currency"; maybe "currency"?  [attr-defined]
domain\entities\market.py:289:79: error: "Price" has no attribute "base_currency"; maybe "currency"?  [attr-defined]
domain\entities\market.py:369:22: error: Argument "metadata" to "MarketData" has incompatible type "dict[Any, Any]"; expected "MetadataDict"  [arg-type]
domain\entities\market.py:422:30: error: Argument "metadata" to "MarketData" has incompatible type "dict[Any, Any]"; expected "MetadataDict"  [arg-type]
domain\entities\market.py:450:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\entities\market.py:616:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\market.py:622:13: error: Name "CurrencyPair" is not defined  [name-defined]
domain\entities\market.py:625:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\market.py:659:1: error: Name "MarketData" already defined on line 237  [no-redef]
domain\entities\market.py:661:13: error: Name "CurrencyPair" is not defined  [name-defined]
domain\entities\market.py:667:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\market.py:695:13: error: Name "CurrencyPair" is not defined  [name-defined]
domain\entities\market.py:699:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\market.py:708:13: error: Name "CurrencyPair" is not defined  [name-defined]
domain\entities\market.py:709:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\market.py:717:1: error: Name "MarketState" already defined on line 430  [no-redef]
domain\entities\market.py:719:13: error: Name "CurrencyPair" is not defined  [name-defined]
domain\entities\market.py:720:16: error: Name "Timestamp" is not defined  [name-defined]
domain\entities\trading_pair.py:149:16: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
domain\prediction\reversal_predictor.py:15:1: error: Module "domain.types.prediction_types" has no attribute "CandlestickPattern"; maybe "CandlestickPatternType"?  [attr-defined]
domain\prediction\reversal_predictor.py:15:1: error: Module "domain.types.prediction_types" has no attribute "DivergenceSignal"; maybe "DivergenceAnalysis"?  [attr-defined]
domain\prediction\reversal_predictor.py:15:1: error: Module "domain.types.prediction_types" has no attribute "MeanReversionBand"; maybe "MeanReversionData"?  [attr-defined]
domain\prediction\reversal_predictor.py:15:1: error: Module "domain.types.prediction_types" has no attribute "MomentumAnalysis"  [attr-defined]
domain\prediction\reversal_predictor.py:15:1: error: Module "domain.types.prediction_types" has no attribute "ReversalSignal"  [attr-defined]
domain\prediction\reversal_predictor.py:27:1: error: Cannot find implementation or library stub for module named "domain.value_objects.volume_profile"  [import-not-found]
domain\prediction\reversal_predictor.py:41:33: error: Name "PricePatternExtractor" is not defined  [name-defined]
domain\prediction\reversal_predictor.py:73:60: error: Argument 1 to "_analyze_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:134:60: error: Argument 1 to "_detect_rsi_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:136:62: error: Argument 1 to "_detect_macd_divergences" of "ReversalPredictor" has incompatible type "DataFrame"; expected "OHLCVData"  [arg-type]
domain\prediction\reversal_predictor.py:201:44: error: Argument 1 to "_find_peaks" of "ReversalPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
domain\prediction\reversal_predictor.py:202:30: error: Argument 1 to "_find_peaks" of "ReversalPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
domain\prediction\reversal_predictor.py:203:43: error: Argument 1 to "_find_peaks" of "ReversalPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
domain\prediction\reversal_predictor.py:204:30: error: Argument 1 to "_find_peaks" of "ReversalPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
domain\prediction\reversal_predictor.py:296:28: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\prediction\reversal_predictor.py:297:28: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\prediction\reversal_predictor.py:298:29: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\prediction\reversal_predictor.py:358:22: error: Argument 1 to "Price" has incompatible type "float"; expected "Decimal"  [arg-type]
domain\prediction\reversal_predictor.py:374:16: error: Incompatible return value type (got "float", expected "ConfidenceScore")  [return-value]
domain\prediction\reversal_predictor.py:390:16: error: Incompatible return value type (got "float", expected "SignalStrengthScore")  [return-value]
domain\prediction\reversal_predictor.py:397:41: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
domain\prediction\reversal_predictor.py:398:42: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\evolution\strategy_selection.py:180:9: error: Need type annotation for "selected_candidates" (hint: "selected_candidates: list[<type>] = ...")  [var-annotated]
domain\evolution\strategy_selection.py:186:17: error: Argument 1 has incompatible type "list[tuple[StrategyCandidate, StrategyEvaluationResult]]"; expected "_SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes]"  [arg-type]
domain\evolution\strategy_selection.py:385:9: error: Need type annotation for "strategy_groups" (hint: "strategy_groups: dict[<type>, <type>] = ...")  [var-annotated]
domain\evolution\strategy_selection.py:450:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\evolution\strategy_selection.py:486:9: error: Need type annotation for "strategy_types" (hint: "strategy_types: dict[<type>, <type>] = ...")  [var-annotated]
domain\evolution\strategy_generator.py:263:28: error: Argument "parameters" to "IndicatorConfig" has incompatible type "dict[str, Any]"; expected "IndicatorParameters"  [arg-type]
domain\evolution\strategy_generator.py:278:28: error: Argument "parameters" to "FilterConfig" has incompatible type "dict[str, Any]"; expected "FilterParameters"  [arg-type]
domain\evolution\strategy_generator.py:474:28: error: Argument "parameters" to "IndicatorConfig" has incompatible type "dict[str, Any]"; expected "IndicatorParameters"  [arg-type]
domain\evolution\strategy_generator.py:486:36: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "IndicatorParameters")  [assignment]
domain\evolution\strategy_generator.py:486:60: error: Argument 1 to "_mutate_parameters" of "StrategyGenerator" has incompatible type "IndicatorParameters"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_generator.py:504:28: error: Argument "parameters" to "FilterConfig" has incompatible type "dict[str, Any]"; expected "FilterParameters"  [arg-type]
domain\evolution\strategy_generator.py:516:40: error: Incompatible types in assignment (expression has type "dict[str, Any]", variable has type "FilterParameters")  [assignment]
domain\evolution\strategy_generator.py:516:64: error: Argument 1 to "_mutate_parameters" of "StrategyGenerator" has incompatible type "FilterParameters"; expected "dict[str, Any]"  [arg-type]
application\strategy_advisor\mirror_map_builder.py:13:1: error: Module "domain.intelligence.mirror_detector" has no attribute "CorrelationMethod"; maybe "CorrelationMetrics" or "CorrelationMatrix"?  [attr-defined]
application\strategy_advisor\mirror_map_builder.py:530:17: error: "object" has no attribute "append"  [attr-defined]
application\signal\session_signal_engine.py:68:22: error: Argument "registry" to "SessionInfluenceAnalyzer" has incompatible type "dict[Never, Never]"; expected "SessionRegistry"  [arg-type]
application\signal\session_signal_engine.py:245:13: error: Name "tendency" already defined on line 243  [no-redef]
application\signal\session_signal_engine.py:247:13: error: Name "tendency" already defined on line 243  [no-redef]
application\signal\session_signal_engine.py:285:33: error: "SessionInfluenceAnalyzer" has no attribute "get_influence_summary"  [attr-defined]
application\signal\session_signal_engine.py:337:13: error: Name "tendency" already defined on line 335  [no-redef]
application\signal\session_signal_engine.py:339:13: error: Name "tendency" already defined on line 335  [no-redef]
application\signal\session_signal_engine.py:372:20: error: Incompatible return value type (got "None", expected "SessionInfluenceResult")  [return-value]
application\signal\session_signal_engine.py:379:20: error: Incompatible return value type (got "None", expected "SessionInfluenceResult")  [return-value]
application\filters\orderbook_filter.py:75:18: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\filters\orderbook_filter.py:81:18: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\filters\orderbook_filter.py:144:56: error: Argument 1 to "analyze_noise" of "NoiseAnalyzer" has incompatible type "domain.entities.orderbook.OrderBookSnapshot"; expected "domain.types.intelligence_types.OrderBookSnapshot"  [arg-type]
application\filters\orderbook_filter.py:161:13: error: Name "metadata" already defined on line 115  [no-redef]
application\filters\orderbook_filter.py:170:13: error: Name "metrics" already defined on line 124  [no-redef]
application\filters\orderbook_filter.py:217:13: error: Unsupported operand types for + ("None" and "int")  [operator]
application\filters\orderbook_filter.py:217:13: note: Left operand is of type "int | None"
application\filters\orderbook_filter.py:218:46: error: Incompatible types in assignment (expression has type "TimestampValue", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:221:17: error: Unsupported operand types for + ("None" and "int")  [operator]
application\filters\orderbook_filter.py:221:17: note: Left operand is of type "int | None"
application\filters\orderbook_filter.py:222:17: error: Unsupported operand types for + ("None" and "int")  [operator]
application\filters\orderbook_filter.py:222:17: note: Left operand is of type "int | None"
application\filters\orderbook_filter.py:390:40: error: Unsupported operand types for / ("None" and "int")  [operator]
application\filters\orderbook_filter.py:390:40: note: Left operand is of type "int | None"
application\filters\orderbook_filter.py:390:40: error: Incompatible types in assignment (expression has type "float", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:391:49: error: Unsupported operand types for / ("None" and "int")  [operator]
application\filters\orderbook_filter.py:391:49: note: Left operand is of type "int | None"
application\filters\orderbook_filter.py:391:49: error: Incompatible types in assignment (expression has type "float", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:393:40: error: Incompatible types in assignment (expression has type "float", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:394:49: error: Incompatible types in assignment (expression has type "float", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:397:31: error: Incompatible types in assignment (expression has type "dict[str, object]", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:409:43: error: Incompatible types in assignment (expression has type "dict[str, Any]", target has type "int | None")  [assignment]
application\filters\orderbook_filter.py:411:43: error: Incompatible types in assignment (expression has type "dict[str, str]", target has type "int | None")  [assignment]
application\entanglement\stream_manager.py:304:43: error: Argument 1 to "len" has incompatible type "Callable[[str, Any], None]"; expected "Sized"  [arg-type]
infrastructure\external_services\ml\model_manager.py:12:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml\model_manager.py:39:28: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml\model_manager.py:44:24: error: Argument "model_type" to "Model" has incompatible type "str"; expected "ModelType"  [arg-type]
infrastructure\external_services\ml\model_manager.py:46:29: error: Argument "prediction_type" to "Model" has incompatible type "str"; expected "PredictionType"  [arg-type]
infrastructure\external_services\ml\model_manager.py:48:22: error: Argument "features" to "Model" has incompatible type "list[FeatureName]"; expected "list[str]"  [arg-type]
infrastructure\external_services\ml\model_manager.py:48:22: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
infrastructure\external_services\ml\model_manager.py:48:22: note: Consider using "Sequence" instead, which is covariant
infrastructure\external_services\ml\model_manager.py:51:20: error: Name "ModelStatusType" is not defined  [name-defined]
infrastructure\external_services\ml\model_manager.py:185:32: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\exchanges\rate_limiter.py:15:73: error: Incompatible default for argument "window" (default has type "int", argument has type "RateLimitWindow")  [assignment]
infrastructure\external_services\ml_services.py:20:1: error: Skipping analyzing "sklearn.ensemble": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:21:1: error: Skipping analyzing "sklearn.linear_model": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:22:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:23:1: error: Skipping analyzing "sklearn.model_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:24:1: error: Skipping analyzing "sklearn.neural_network": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:25:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:26:1: error: Skipping analyzing "sklearn.svm": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:27:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\ml_services.py:78:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\external_services\ml_services.py:92:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\external_services\ml_services.py:93:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\external_services\ml_services.py:234:28: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:241:29: error: Argument "prediction_type" to "Model" has incompatible type "str"; expected "PredictionType"  [arg-type]
infrastructure\external_services\ml_services.py:243:22: error: Argument "features" to "Model" has incompatible type "list[FeatureName]"; expected "list[str]"  [arg-type]
infrastructure\external_services\ml_services.py:243:22: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
infrastructure\external_services\ml_services.py:243:22: note: Consider using "Sequence" instead, which is covariant
infrastructure\external_services\ml_services.py:246:20: error: "type[ModelStatus]" has no attribute "CREATED"  [attr-defined]
infrastructure\external_services\ml_services.py:311:43: error: Argument 1 to "ModelManager" has incompatible type "MLServiceConfig | None"; expected "MLServiceConfig"  [arg-type]
infrastructure\external_services\ml_services.py:383:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:383:13: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:385:17: error: Unsupported operand types for / ("float" and "None")  [operator]
infrastructure\external_services\ml_services.py:385:17: note: Right operand is of type "float | None"
infrastructure\external_services\ml_services.py:385:18: error: Unsupported operand types for * ("None" and "float")  [operator]
infrastructure\external_services\ml_services.py:385:18: error: Unsupported operand types for * ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:385:18: note: Both left and right operands are unions
infrastructure\external_services\ml_services.py:385:59: error: Unsupported operand types for - ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:385:59: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:393:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:393:13: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:394:42: error: Incompatible types in assignment (expression has type "str", target has type "float | None")  [assignment]
infrastructure\external_services\ml_services.py:514:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:514:13: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:516:17: error: Unsupported operand types for / ("float" and "None")  [operator]
infrastructure\external_services\ml_services.py:516:17: note: Right operand is of type "float | None"
infrastructure\external_services\ml_services.py:516:18: error: Unsupported operand types for * ("None" and "float")  [operator]
infrastructure\external_services\ml_services.py:516:18: error: Unsupported operand types for * ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:516:18: note: Both left and right operands are unions
infrastructure\external_services\ml_services.py:516:61: error: Unsupported operand types for - ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:516:61: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:523:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\ml_services.py:523:13: note: Left operand is of type "float | None"
infrastructure\external_services\ml_services.py:524:42: error: Incompatible types in assignment (expression has type "str", target has type "float | None")  [assignment]
infrastructure\external_services\ml_services.py:690:5: error: Signature of "train_model" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:690:5: note:      Superclass:
infrastructure\external_services\ml_services.py:690:5: note:          def train_model(self, model_id: ModelId, training_data: DataFrame, config: TrainingConfig, validation_data: DataFrame | None = ...) -> Coroutine[Any, Any, Model]
infrastructure\external_services\ml_services.py:690:5: note:      Subclass:
infrastructure\external_services\ml_services.py:690:5: note:          def train_model(self, model_type: ModelType, training_data: dict[str, Any], hyperparameters: dict[str, Any]) -> Coroutine[Any, Any, Model]
infrastructure\external_services\ml_services.py:699:22: error: Incompatible types (expression has type "str", TypedDict item "name" has type "ModelName")  [typeddict-item]
infrastructure\external_services\ml_services.py:701:30: error: Incompatible types (expression has type "str", TypedDict item "trading_pair" has type "Symbol")  [typeddict-item]
infrastructure\external_services\ml_services.py:703:27: error: List item 0 has incompatible type "str"; expected "FeatureName"  [list-item]
infrastructure\external_services\ml_services.py:703:36: error: List item 1 has incompatible type "str"; expected "FeatureName"  [list-item]
infrastructure\external_services\ml_services.py:704:24: error: Incompatible types (expression has type "str", TypedDict item "target" has type "TargetName")  [typeddict-item]
infrastructure\external_services\ml_services.py:712:20: error: Incompatible return value type (got "Model | None", expected "Model")  [return-value]
infrastructure\external_services\ml_services.py:717:5: error: Signature of "predict" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:717:5: note:      Superclass:
infrastructure\external_services\ml_services.py:717:5: note:          def predict(self, model_id: ModelId, features: dict[str, Any], config: PredictionConfig | None = ...) -> Coroutine[Any, Any, Prediction | None]
infrastructure\external_services\ml_services.py:717:5: note:      Subclass:
infrastructure\external_services\ml_services.py:717:5: note:          def predict(self, model_id: str, features: dict[str, Any]) -> Coroutine[Any, Any, Prediction]
infrastructure\external_services\ml_services.py:721:34: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:722:26: error: Argument "features" to "MLPredictionRequest" has incompatible type "dict[str, Any]"; expected "dict[FeatureName, float]"  [arg-type]
infrastructure\external_services\ml_services.py:727:26: error: Unexpected keyword argument "prediction" for "Prediction"; did you mean "prediction_type"?  [call-arg]
infrastructure\external_services\ml_services.py:728:34: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:740:5: error: Signature of "evaluate_model" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:740:5: note:      Superclass:
infrastructure\external_services\ml_services.py:740:5: note:          def evaluate_model(self, model_id: ModelId, test_data: DataFrame, metrics: list[str] | None = ...) -> Coroutine[Any, Any, ModelMetrics]
infrastructure\external_services\ml_services.py:740:5: note:      Subclass:
infrastructure\external_services\ml_services.py:740:5: note:          def evaluate_model(self, model_id: str, test_data: dict[str, Any]) -> Coroutine[Any, Any, dict[str, float]]
infrastructure\external_services\ml_services.py:745:65: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:749:32: error: Argument 1 of "save_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:749:32: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:749:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:752:61: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:752:72: error: Argument 2 to "save_model" of "ProductionMLService" has incompatible type "str"; expected "ModelPath"  [arg-type]
infrastructure\external_services\ml_services.py:756:32: error: Argument 1 of "load_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:756:32: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:756:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:759:64: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:759:75: error: Argument 2 to "load_model" of "ProductionMLService" has incompatible type "str"; expected "ModelPath"  [arg-type]
infrastructure\external_services\ml_services.py:761:79: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:762:24: error: Incompatible return value type (got "Model | None", expected "Model")  [return-value]
infrastructure\external_services\ml_services.py:768:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_model_status" incompatible with return type "Coroutine[Any, Any, ModelStatus]" in supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:768:38: error: Argument 1 of "get_model_status" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:768:38: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:768:38: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:771:67: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:781:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\external_services\ml_services.py:782:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\external_services\ml_services.py:784:5: error: Signature of "train_model" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:784:5: note:      Superclass:
infrastructure\external_services\ml_services.py:784:5: note:          def train_model(self, model_id: ModelId, training_data: DataFrame, config: TrainingConfig, validation_data: DataFrame | None = ...) -> Coroutine[Any, Any, Model]
infrastructure\external_services\ml_services.py:784:5: note:      Subclass:
infrastructure\external_services\ml_services.py:784:5: note:          def train_model(self, model_type: ModelType, training_data: dict[str, Any], hyperparameters: dict[str, Any]) -> Coroutine[Any, Any, Model]
infrastructure\external_services\ml_services.py:792:18: error: Incompatible types (expression has type "str", TypedDict item "name" has type "ModelName")  [typeddict-item]
infrastructure\external_services\ml_services.py:794:26: error: Incompatible types (expression has type "str", TypedDict item "trading_pair" has type "Symbol")  [typeddict-item]
infrastructure\external_services\ml_services.py:796:23: error: List item 0 has incompatible type "str"; expected "FeatureName"  [list-item]
infrastructure\external_services\ml_services.py:796:32: error: List item 1 has incompatible type "str"; expected "FeatureName"  [list-item]
infrastructure\external_services\ml_services.py:797:20: error: Incompatible types (expression has type "str", TypedDict item "target" has type "TargetName")  [typeddict-item]
infrastructure\external_services\ml_services.py:808:5: error: Signature of "predict" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:808:5: note:      Superclass:
infrastructure\external_services\ml_services.py:808:5: note:          def predict(self, model_id: ModelId, features: dict[str, Any], config: PredictionConfig | None = ...) -> Coroutine[Any, Any, Prediction | None]
infrastructure\external_services\ml_services.py:808:5: note:      Subclass:
infrastructure\external_services\ml_services.py:808:5: note:          def predict(self, model_id: str, features: dict[str, Any]) -> Coroutine[Any, Any, Prediction]
infrastructure\external_services\ml_services.py:811:30: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:812:22: error: Argument "features" to "MLPredictionRequest" has incompatible type "dict[str, Any]"; expected "dict[FeatureName, float]"  [arg-type]
infrastructure\external_services\ml_services.py:817:22: error: Unexpected keyword argument "prediction" for "Prediction"; did you mean "prediction_type"?  [call-arg]
infrastructure\external_services\ml_services.py:818:30: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:831:5: error: Signature of "evaluate_model" incompatible with supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:831:5: note:      Superclass:
infrastructure\external_services\ml_services.py:831:5: note:          def evaluate_model(self, model_id: ModelId, test_data: DataFrame, metrics: list[str] | None = ...) -> Coroutine[Any, Any, ModelMetrics]
infrastructure\external_services\ml_services.py:831:5: note:      Subclass:
infrastructure\external_services\ml_services.py:831:5: note:          def evaluate_model(self, model_id: str, test_data: dict[str, Any]) -> Coroutine[Any, Any, dict[str, float]]
infrastructure\external_services\ml_services.py:835:61: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:837:32: error: Argument 1 of "save_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:837:32: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:837:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:839:57: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:841:32: error: Argument 1 of "load_model" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:841:32: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:841:32: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:843:60: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:845:75: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\ml_services.py:851:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_model_status" incompatible with return type "Coroutine[Any, Any, ModelStatus]" in supertype "MLProtocol"  [override]
infrastructure\external_services\ml_services.py:851:38: error: Argument 1 of "get_model_status" is incompatible with supertype "MLProtocol"; supertype defines the argument type as "ModelId"  [override]
infrastructure\external_services\ml_services.py:851:38: note: This violates the Liskov substitution principle
infrastructure\external_services\ml_services.py:851:38: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\ml_services.py:853:63: error: Argument 1 to "ModelId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\repositories\trading\config.py:10:1: error: Library stubs not installed for "yaml"  [import-untyped]
infrastructure\repositories\trading\validators.py:578:9: error: Need type annotation for "errors" (hint: "errors: list[<type>] = ...")  [var-annotated]
infrastructure\repositories\trading\validators.py:587:9: error: Need type annotation for "errors" (hint: "errors: list[<type>] = ...")  [var-annotated]
infrastructure\repositories\trading\validators.py:596:9: error: Need type annotation for "errors" (hint: "errors: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\dataset_manager.py:17:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\dataset_manager.py:219:14: error: No overload variant of "fillna" of "DataFrame" matches argument type "Any"  [call-overload]
infrastructure\ml_services\dataset_manager.py:219:14: note: Possible overload variants:
infrastructure\ml_services\dataset_manager.py:219:14: note:     def fillna(self, value: str | bytes | date | datetime | timedelta | <7 more items> | complex | integer[Any] | floating[Any] | complexfloating[Any, Any] | NAType | dict[Any, Any] | Series[Any] | DataFrame | None = ..., *, axis: Literal['index', 0] | Literal['columns', 1] | None = ..., limit: int = ..., inplace: Literal[True]) -> None
infrastructure\ml_services\dataset_manager.py:219:14: note:     def fillna(self, value: str | bytes | date | datetime | timedelta | <15 more items> | None = ..., *, axis: Literal['index', 0, 'columns', 1] | None = ..., limit: int = ..., inplace: Literal[False] = ...) -> DataFrame
infrastructure\ml_services\dataset_manager.py:222:14: error: No overload variant of "fillna" of "DataFrame" matches argument type "str"  [call-overload]
infrastructure\ml_services\dataset_manager.py:222:14: note: Possible overload variants:
infrastructure\ml_services\dataset_manager.py:222:14: note:     def fillna(self, value: str | bytes | date | datetime | timedelta | <7 more items> | complex | integer[Any] | floating[Any] | complexfloating[Any, Any] | NAType | dict[Any, Any] | Series[Any] | DataFrame | None = ..., *, axis: Literal['index', 0] | Literal['columns', 1] | None = ..., limit: int = ..., inplace: Literal[True]) -> None
infrastructure\ml_services\dataset_manager.py:222:14: note:     def fillna(self, value: str | bytes | date | datetime | timedelta | <15 more items> | None = ..., *, axis: Literal['index', 0, 'columns', 1] | None = ..., limit: int = ..., inplace: Literal[False] = ...) -> DataFrame
infrastructure\ml_services\dataset_manager.py:262:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\ml_services\dataset_manager.py:263:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\ml_services\dataset_manager.py:337:22: error: "Index[Any]" has no attribute "hour"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:338:29: error: "Index[Any]" has no attribute "dayofweek"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:339:30: error: "Index[Any]" has no attribute "day"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:340:23: error: "Index[Any]" has no attribute "month"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:341:25: error: "Index[Any]" has no attribute "quarter"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:434:17: error: "object" has no attribute "append"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:439:17: error: "object" has no attribute "append"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:444:17: error: "object" has no attribute "append"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:452:21: error: "object" has no attribute "append"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:454:17: error: Unsupported target for indexed assignment ("object")  [index]
infrastructure\ml_services\dataset_manager.py:457:13: error: "object" has no attribute "update"  [attr-defined]
infrastructure\ml_services\dataset_manager.py:476:13: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\utils.py:360:20: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[bool_]]", variable has type "Series[bool]")  [assignment]
infrastructure\services\enhanced_trading\utils.py:421:32: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
infrastructure\services\enhanced_trading\utils.py:422:33: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
infrastructure\services\enhanced_trading\order_creation.py:173:23: error: "type[OrderType]" has no attribute "TWAP"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:205:23: error: "type[OrderType]" has no attribute "VWAP"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:238:23: error: "type[OrderType]" has no attribute "ICEBERG"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:272:23: error: "type[OrderType]" has no attribute "BRACKET"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:375:9: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:379:9: error: "object" has no attribute "append"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:486:24: error: "type[OrderType]" has no attribute "TWAP"  [attr-defined]
infrastructure\services\enhanced_trading\order_creation.py:489:24: error: "type[OrderType]" has no attribute "VWAP"  [attr-defined]
infrastructure\services\risk_analysis_service.py:159:38: error: Name "asyncio" is not defined  [name-defined]
infrastructure\services\risk_analysis_service.py:201:33: error: "CacheManager" has no attribute "get"  [attr-defined]
infrastructure\services\risk_analysis_service.py:214:17: error: "CacheManager" has no attribute "set"  [attr-defined]
infrastructure\services\risk_analysis_service.py:246:33: error: "CacheManager" has no attribute "get"  [attr-defined]
infrastructure\services\risk_analysis_service.py:254:17: error: "CacheManager" has no attribute "set"  [attr-defined]
infrastructure\services\risk_analysis_service.py:286:33: error: "CacheManager" has no attribute "get"  [attr-defined]
infrastructure\services\risk_analysis_service.py:294:17: error: "CacheManager" has no attribute "set"  [attr-defined]
infrastructure\services\risk_analysis_service.py:455:5: error: Signature of "calculate_portfolio_risk" incompatible with supertype "RiskAnalysisService"  [override]
infrastructure\services\risk_analysis_service.py:455:5: note:      Superclass:
infrastructure\services\risk_analysis_service.py:455:5: note:          def calculate_portfolio_risk(self, returns: Series[Any], weights: ndarray[Any, Any] | None = ...) -> RiskMetrics
infrastructure\services\risk_analysis_service.py:455:5: note:      Subclass:
infrastructure\services\risk_analysis_service.py:455:5: note:          def calculate_portfolio_risk(self, positions: list[PositionRisk], market_data: DataFrame) -> PortfolioRisk
infrastructure\services\risk_analysis_service.py:455:5: error: Signature of "calculate_portfolio_risk" incompatible with supertype "RiskAnalysisProtocol"  [override]
infrastructure\services\risk_analysis_service.py:455:5: note:      Superclass:
infrastructure\services\risk_analysis_service.py:455:5: note:          def calculate_portfolio_risk(self, returns: Series[Any], weights: ndarray[Any, Any] | None = ...) -> RiskMetrics
infrastructure\services\risk_analysis_service.py:455:5: note:      Subclass:
infrastructure\services\risk_analysis_service.py:455:5: note:          def calculate_portfolio_risk(self, positions: list[PositionRisk], market_data: DataFrame) -> PortfolioRisk
infrastructure\services\risk_analysis_service.py:475:20: error: Too many arguments for "validate_portfolio_data"  [call-arg]
infrastructure\services\risk_analysis_service.py:491:31: error: "PositionRisk" has no attribute "current_value"  [attr-defined]
infrastructure\services\risk_analysis_service.py:492:32: error: "PositionRisk" has no attribute "weight"  [attr-defined]
infrastructure\services\risk_analysis_service.py:497:21: error: "PositionRisk" has no attribute "_replace"  [attr-defined]
infrastructure\services\risk_analysis_service.py:497:41: error: "PositionRisk" has no attribute "weight"  [attr-defined]
infrastructure\services\risk_analysis_service.py:503:20: error: Unexpected keyword argument "positions" for "PortfolioRisk"; did you mean "position_risks"?  [call-arg]
infrastructure\services\risk_analysis_service.py:503:20: error: Unexpected keyword argument "total_weight" for "PortfolioRisk"  [call-arg]
infrastructure\services\risk_analysis_service.py:503:20: error: Unexpected keyword argument "last_updated" for "PortfolioRisk"  [call-arg]
infrastructure\services\risk_analysis_service.py:503:20: error: Unexpected keyword argument "risk_level" for "PortfolioRisk"  [call-arg]
infrastructure\services\risk_analysis_service.py:503:20: error: Unexpected keyword argument "diversification_score" for "PortfolioRisk"; did you mean "diversification_ratio"?  [call-arg]
infrastructure\services\risk_analysis_service.py:510:46: error: Argument 1 to "assess_risk_level" has incompatible type "RiskMetrics"; expected "PortfolioRisk"  [arg-type]
infrastructure\services\risk_analysis_service.py:512:36: error: Argument "concentration_risk" to "PortfolioRisk" has incompatible type "float"; expected "Decimal"  [arg-type]
infrastructure\services\risk_analysis_service.py:519:5: error: Signature of "optimize_portfolio" incompatible with supertype "RiskAnalysisService"  [override]
infrastructure\services\risk_analysis_service.py:519:5: note:      Superclass:
infrastructure\services\risk_analysis_service.py:519:5: note:          def optimize_portfolio(self, returns: DataFrame, risk_free_rate: float = ...) -> tuple[ndarray[Any, Any], RiskMetrics]
infrastructure\services\risk_analysis_service.py:519:5: note:      Subclass:
infrastructure\services\risk_analysis_service.py:519:5: note:          def optimize_portfolio(self, returns_df: DataFrame, target_return: Decimal | None = ..., risk_free_rate: Decimal | None = ..., method: PortfolioOptimizationMethod = ...) -> RiskOptimizationResult
infrastructure\services\risk_analysis_service.py:519:5: error: Signature of "optimize_portfolio" incompatible with supertype "RiskAnalysisProtocol"  [override]
infrastructure\services\risk_analysis_service.py:519:5: note:      Superclass:
infrastructure\services\risk_analysis_service.py:519:5: note:          def optimize_portfolio(self, returns: DataFrame, risk_free_rate: float = ...) -> tuple[ndarray[Any, Any], RiskMetrics]
infrastructure\services\risk_analysis_service.py:519:5: note:      Subclass:
infrastructure\services\risk_analysis_service.py:519:5: note:          def optimize_portfolio(self, returns_df: DataFrame, target_return: Decimal | None = ..., risk_free_rate: Decimal | None = ..., method: PortfolioOptimizationMethod = ...) -> RiskOptimizationResult
infrastructure\services\risk_analysis_service.py:551:35: error: Missing positional argument "covariance_matrix" in call to "optimize_portfolio_weights"  [call-arg]
infrastructure\services\risk_analysis_service.py:551:35: error: Incompatible types in assignment (expression has type "tuple[ndarray[Any, Any], bool, float]", variable has type "dict[str, float]")  [assignment]
infrastructure\services\risk_analysis_service.py:552:21: error: Argument 1 to "optimize_portfolio_weights" has incompatible type "DataFrame"; expected "Series[Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:554:32: error: Argument "max_weight" to "optimize_portfolio_weights" has incompatible type "Decimal"; expected "float"  [arg-type]
infrastructure\services\risk_analysis_service.py:555:32: error: Argument "min_weight" to "optimize_portfolio_weights" has incompatible type "Decimal"; expected "float"  [arg-type]
infrastructure\services\risk_analysis_service.py:559:54: error: Argument 1 to "calc_portfolio_return" has incompatible type "dict[str, float]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:559:71: error: Argument 2 to "calc_portfolio_return" has incompatible type "DataFrame"; expected "Series[Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:560:58: error: Argument 1 to "calc_portfolio_variance" has incompatible type "dict[str, float]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:567:20: error: Unexpected keyword argument "expected_volatility" for "RiskOptimizationResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:567:20: error: Unexpected keyword argument "constraints_satisfied" for "RiskOptimizationResult"; did you mean "constraints_applied"?  [call-arg]
infrastructure\services\risk_analysis_service.py:568:33: error: Argument "optimal_weights" to "RiskOptimizationResult" has incompatible type "dict[str, float]"; expected "dict[str, Decimal]"  [arg-type]
infrastructure\services\risk_analysis_service.py:575:82: error: Argument 1 to "generate_rebalancing_recommendations" has incompatible type "dict[str, float]"; expected "dict[str, Decimal]"  [arg-type]
infrastructure\services\risk_analysis_service.py:598:20: error: "PortfolioRisk" has no attribute "positions"; maybe "position_risks"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:615:67: error: Argument 2 to "calc_scenario_impact" has incompatible type "StressTestResult"; expected "dict[str, Any]"  [arg-type]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "scenario_description" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "portfolio_value_before" for "StressTestResult"; did you mean "portfolio_value_change"?  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "portfolio_value_after" for "StressTestResult"; did you mean "portfolio_value_change"?  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "value_change" for "StressTestResult"; did you mean "var_change"?  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "percentage_change" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "risk_metrics_before" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "risk_metrics_after" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "scenario_applied_at" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:617:30: error: Unexpected keyword argument "scenario_parameters" for "StressTestResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:621:47: error: "StressTestResult" has no attribute "total_value"  [attr-defined]
infrastructure\services\risk_analysis_service.py:625:44: error: "StressTestResult" has no attribute "risk_metrics"  [attr-defined]
infrastructure\services\risk_analysis_service.py:661:66: error: Argument 1 to "generate_risk_recommendations" has incompatible type "RiskMetrics"; expected "PortfolioRisk"  [arg-type]
infrastructure\services\risk_analysis_service.py:662:72: error: "PortfolioRisk" has no attribute "positions"; maybe "position_risks"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:668:41: error: "PortfolioRisk" has no attribute "positions"; maybe "position_risks"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:671:67: error: "PortfolioRisk" has no attribute "positions"; maybe "position_risks"?  [attr-defined]
infrastructure\services\risk_analysis_service.py:685:20: error: Unexpected keyword argument "portfolio_insights" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:685:20: error: Unexpected keyword argument "report_generated_at" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:685:20: error: Unexpected keyword argument "report_version" for "RiskReport"; did you mean "report_period"?  [call-arg]
infrastructure\services\risk_analysis_service.py:699:20: error: Unexpected keyword argument "portfolio_insights" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:699:20: error: Unexpected keyword argument "report_generated_at" for "RiskReport"  [call-arg]
infrastructure\services\risk_analysis_service.py:699:20: error: Unexpected keyword argument "report_version" for "RiskReport"; did you mean "report_period"?  [call-arg]
infrastructure\services\risk_analysis_service.py:779:38: error: "PositionRisk" has no attribute "weight"  [attr-defined]
infrastructure\services\risk_analysis_service.py:819:24: error: "PositionRisk" has no attribute "weight"  [attr-defined]
infrastructure\services\risk_analysis_service.py:868:24: error: Name "hashlib" is not defined  [name-defined]
infrastructure\services\risk_analysis_service.py:872:53: error: Name "time" is not defined  [name-defined]
infrastructure\services\risk_analysis_service.py:876:16: error: Unexpected keyword argument "expected_volatility" for "RiskOptimizationResult"  [call-arg]
infrastructure\services\risk_analysis_service.py:876:16: error: Unexpected keyword argument "constraints_satisfied" for "RiskOptimizationResult"; did you mean "constraints_applied"?  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:365:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:577:16: error: Incompatible return value type (got "SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
infrastructure\services\enhanced_trading_service_refactored.py:630:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:645:23: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:653:85: error: Argument 4 to "create_vwap_order" of "AdvancedOrderCreator" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service_refactored.py:666:88: error: Argument 4 to "create_bracket_order" of "AdvancedOrderCreator" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service_refactored.py:666:101: error: Argument 5 to "create_bracket_order" of "AdvancedOrderCreator" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service_refactored.py:666:114: error: Argument 6 to "create_bracket_order" of "AdvancedOrderCreator" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service_refactored.py:672:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:689:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:705:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\services\enhanced_trading_service_refactored.py:732:19: error: Missing positional argument "service_name" in call to "ServiceError"  [call-arg]
infrastructure\evolution\storage.py:560:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
infrastructure\evolution\storage.py:565:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
infrastructure\evolution\storage.py:570:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
domain\protocols\security.py:32:1: error: Cannot find implementation or library stub for module named "bcrypt"  [import-not-found]
domain\protocols\security.py:46:5: error: Cannot assign to a type  [misc]
domain\protocols\security.py:46:14: error: Incompatible types in assignment (expression has type "None", variable has type "type[Fernet]")  [assignment]
domain\protocols\security.py:47:14: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
domain\protocols\security.py:48:21: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
domain\protocols\security.py:49:11: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
domain\protocols\security.py:50:15: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
domain\protocols\security.py:51:5: error: Cannot assign to a type  [misc]
domain\protocols\security.py:51:18: error: Incompatible types in assignment (expression has type "None", variable has type "type[PBKDF2HMAC]")  [assignment]
domain\protocols\security.py:242:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:243:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:244:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:290:23: error: Missing positional argument "auth_issue" in call to "ProtocolAuthenticationError"  [call-arg]
domain\protocols\security.py:298:23: error: Missing positional argument "auth_issue" in call to "ProtocolAuthenticationError"  [call-arg]
domain\protocols\security.py:399:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:400:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:401:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:436:19: error: Missing positional argument "auth_issue" in call to "ProtocolAuthorizationError"  [call-arg]
domain\protocols\security.py:463:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:464:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:574:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\security.py:598:19: error: Missing positional argument "auth_issue" in call to "ProtocolAuthenticationError"  [call-arg]
domain\protocols\security.py:631:19: error: Missing positional argument "auth_issue" in call to "ProtocolAuthenticationError"  [call-arg]
domain\protocols\performance.py:40:1: error: Library stubs not installed for "psutil"  [import-untyped]
domain\protocols\performance.py:47:1: error: Cannot find implementation or library stub for module named "memory_profiler"  [import-not-found]
domain\protocols\performance.py:138:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\performance.py:139:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\performance.py:229:26: error: Argument "avg_time" to "PerformanceProfile" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:232:26: error: Argument "std_time" to "PerformanceProfile" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:233:26: error: Argument "p95_time" to "PerformanceProfile" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:234:26: error: Argument "p99_time" to "PerformanceProfile" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:237:27: error: Argument "cpu_usage" to "PerformanceProfile" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:255:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\performance.py:277:9: error: Need type annotation for "memory_usage" (hint: "memory_usage: list[<type>] = ...")  [var-annotated]
domain\protocols\performance.py:313:22: error: Argument "avg_time" to "BenchmarkResult" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:316:22: error: Argument "std_time" to "BenchmarkResult" has incompatible type "floating[Any]"; expected "float"  [arg-type]
domain\protocols\performance.py:371:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\performance.py:448:9: error: Need type annotation for "cache" (hint: "cache: dict[<type>, <type>] = ...")  [var-annotated]
domain\protocols\monitoring.py:123:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:124:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:125:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:126:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:243:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:244:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:309:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:310:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\monitoring.py:369:40: error: Incompatible types in assignment (expression has type "HealthCheck | BaseException | None", target has type "HealthCheck")  [assignment]
domain\protocols\monitoring.py:402:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\decorators.py:131:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\decorators.py:132:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\decorators.py:133:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\decorators.py:134:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\decorators.py:192:34: error: Unsupported operand types for - ("float" and "None")  [operator]
domain\protocols\decorators.py:195:27: error: Missing positional argument "state" in call to "ProtocolCircuitBreakerError"  [call-arg]
domain\protocols\decorators.py:208:34: error: Incompatible types in assignment (expression has type "float", variable has type "None")  [assignment]
domain\protocols\decorators.py:215:34: error: Incompatible types in assignment (expression has type "float", variable has type "None")  [assignment]
domain\protocols\decorators.py:237:27: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
domain\protocols\decorators.py:339:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:414:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:447:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:537:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:643:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:681:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:723:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:771:16: error: Incompatible return value type (got "_Wrapped[[VarArg(Any), KwArg(Any)], Any, [VarArg(Any), KwArg(Any)], Any]", expected "F")  [return-value]
domain\protocols\decorators.py:815:1: error: Library stubs not installed for "psutil"  [import-untyped]
infrastructure\market_profiles\storage\pattern_memory_repository.py:498:25: error: Argument "context" to "MarketMakerPattern" has incompatible type "Any | dict[Any, Any]"; expected "PatternContext"  [arg-type]
infrastructure\market_profiles\storage\pattern_memory_repository.py:527:42: error: Argument 1 to "from_dict" of "PatternFeatures" has incompatible type "dict[str, Any]"; expected "PatternFeaturesDict"  [arg-type]
infrastructure\market_profiles\storage\pattern_memory_repository.py:659:43: error: Item "None" of "datetime | None" has no attribute "isoformat"  [union-attr]
infrastructure\market_profiles\storage\pattern_memory_repository.py:791:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_storage_statistics" incompatible with return type "Coroutine[Any, Any, StorageStatistics]" in supertype "IPatternStorage"  [override]
infrastructure\market_profiles\storage\market_maker_storage.py:264:13: error: Argument 2 to "run_in_executor" of "AbstractEventLoop" has incompatible type "Callable[[dict[str, Any]], bytes]"; expected "Callable[[PatternFeaturesDict], bytes]"  [arg-type]
infrastructure\market_profiles\storage\market_maker_storage.py:520:25: error: Argument "context" to "MarketMakerPattern" has incompatible type "Any | dict[Any, Any]"; expected "PatternContext"  [arg-type]
infrastructure\market_profiles\storage\market_maker_storage.py:549:42: error: Argument 1 to "from_dict" of "PatternFeatures" has incompatible type "dict[str, Any]"; expected "PatternFeaturesDict"  [arg-type]
infrastructure\market_profiles\storage\market_maker_storage.py:827:43: error: Item "None" of "datetime | None" has no attribute "isoformat"  [union-attr]
domain\services\order_validation_service.py:17:1: error: Module "domain.exceptions" has no attribute "OrderValidationError"  [attr-defined]
domain\services\order_validation_service.py:17:1: error: Module "domain.exceptions" has no attribute "BusinessRuleViolationError"; maybe "BusinessRuleError"?  [attr-defined]
domain\services\order_validation_service.py:26:25: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:26:25: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:47:31: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:47:31: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:65:31: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:65:31: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:115:59: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:115:59: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:121:46: error: any? has no attribute "get"  [attr-defined]
domain\services\order_validation_service.py:147:52: error: Unsupported operand types for / ("Money" and "Money")  [operator]
domain\services\order_validation_service.py:148:27: error: Unsupported operand types for > ("Money" and "int")  [operator]
domain\services\order_validation_service.py:156:43: error: Argument 1 to "float" has incompatible type "Money"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\order_validation_service.py:166:63: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:166:63: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:169:9: error: Need type annotation for "warnings" (hint: "warnings: list[<type>] = ...")  [var-annotated]
domain\services\order_validation_service.py:196:59: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:196:59: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:225:61: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:225:61: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:227:9: error: Need type annotation for "errors" (hint: "errors: list[<type>] = ...")  [var-annotated]
domain\services\order_validation_service.py:228:9: error: Need type annotation for "warnings" (hint: "warnings: list[<type>] = ...")  [var-annotated]
domain\services\order_validation_service.py:253:57: error: Function "builtins.any" is not valid as a type  [valid-type]
domain\services\order_validation_service.py:253:57: note: Perhaps you meant "typing.Any" instead of "any"?
domain\services\order_validation_service.py:256:9: error: Need type annotation for "warnings" (hint: "warnings: list[<type>] = ...")  [var-annotated]
infrastructure\repositories\trading\analyzers.py:33:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "analyze_liquidity" incompatible with return type "Coroutine[Any, Any, LiquidityAnalysisResult]" in supertype "LiquidityAnalyzer"  [override]
infrastructure\repositories\trading\analyzers.py:33:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "analyze_liquidity" incompatible with return type "Coroutine[Any, Any, LiquidityAnalysisResult]" in supertype "ILiquidityAnalyzer"  [override]
infrastructure\repositories\trading\analyzers.py:63:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\analyzers.py:71:31: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\analyzers.py:75:32: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\repositories\trading\analyzers.py:76:30: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\analyzers.py:81:32: error: "TradingPair" has no attribute "symbol"  [attr-defined]
domain\strategies\validators.py:12:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
domain\strategies\validators.py:63:29: error: "type[StrategyValidator]" has no attribute "_validate_parameters"  [attr-defined]
domain\strategies\validators.py:299:14: error: Cannot use isinstance() with NewType type  [misc]
domain\strategies\strategy_interface.py:400:16: error: Incompatible return value type (got "dict[str, Any]", expected "MetadataDict")  [return-value]
domain\strategies\strategy_interface.py:586:23: error: Name "SignalType" is not defined  [name-defined]
domain\strategies\strategy_interface.py:587:27: error: Name "SignalStrength" is not defined  [name-defined]
domain\strategies\strategy_interface.py:590:27: error: Name "SignalType" is not defined  [name-defined]
domain\strategies\strategy_interface.py:592:31: error: Name "SignalType" is not defined  [name-defined]
domain\strategies\strategy_interface.py:593:35: error: Name "SignalStrength" is not defined  [name-defined]
domain\strategies\strategy_interface.py:595:27: error: Name "SignalType" is not defined  [name-defined]
domain\strategies\strategy_interface.py:597:31: error: Name "SignalType" is not defined  [name-defined]
domain\strategies\strategy_interface.py:598:35: error: Name "SignalStrength" is not defined  [name-defined]
infrastructure\ml_services\visualization.py:6:1: error: Library stubs not installed for "seaborn"  [import-untyped]
infrastructure\services\enhanced_trading\strategy_execution.py:58:16: error: No overload variant of "get" of "dict" matches argument types "StrategyType", "list[Never]"  [call-overload]
infrastructure\services\enhanced_trading\strategy_execution.py:58:16: note: Possible overload variants:
infrastructure\services\enhanced_trading\strategy_execution.py:58:16: note:     def get(self, str, None = ..., /) -> list[str] | None
infrastructure\services\enhanced_trading\strategy_execution.py:58:16: note:     def get(self, str, list[str], /) -> list[str]
infrastructure\services\enhanced_trading\strategy_execution.py:58:16: note:     def [_T] get(self, str, _T, /) -> list[str] | _T
infrastructure\services\enhanced_trading\strategy_execution.py:67:29: error: Incompatible default for argument "risk_level" (default has type "str", argument has type "RiskLevel")  [assignment]
infrastructure\services\enhanced_trading\strategy_execution.py:83:23: error: No overload variant of "get" of "dict" matches argument types "RiskLevel", "Decimal"  [call-overload]
infrastructure\services\enhanced_trading\strategy_execution.py:83:23: note: Possible overload variants:
infrastructure\services\enhanced_trading\strategy_execution.py:83:23: note:     def get(self, str, None = ..., /) -> Decimal | None
infrastructure\services\enhanced_trading\strategy_execution.py:83:23: note:     def get(self, str, Decimal, /) -> Decimal
infrastructure\services\enhanced_trading\strategy_execution.py:83:23: note:     def [_T] get(self, str, _T, /) -> Decimal | _T
infrastructure\services\enhanced_trading\strategy_execution.py:173:5: error: Need type annotation for "symbol_exposure" (hint: "symbol_exposure: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\services\enhanced_trading\strategy_execution.py:340:27: error: "Index[Any]" has no attribute "hour"  [attr-defined]
domain\symbols\opportunity_score.py:45:51: error: Incompatible types in assignment (expression has type "None", variable has type "dict[MarketPhase, float]")  [assignment]
domain\symbols\opportunity_score.py:102:40: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, float]")  [assignment]
domain\symbols\opportunity_score.py:103:39: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, float]")  [assignment]
domain\symbols\opportunity_score.py:104:41: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, float]")  [assignment]
domain\symbols\opportunity_score.py:107:32: error: Incompatible types in assignment (expression has type "None", variable has type "dict[str, Any]")  [assignment]
domain\symbols\opportunity_score.py:145:13: error: Dict entry 7 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
domain\symbols\opportunity_score.py:216:29: error: Incompatible types (expression has type "float", TypedDict item "total_score" has type "OpportunityScoreValue")  [typeddict-item]
domain\symbols\opportunity_score.py:217:28: error: Incompatible types (expression has type "float", TypedDict item "confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\opportunity_score.py:219:34: error: Incompatible types (expression has type "float", TypedDict item "phase_confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\opportunity_score.py:556:25: error: Incompatible types (expression has type "float", TypedDict item "total_score" has type "OpportunityScoreValue")  [typeddict-item]
domain\symbols\opportunity_score.py:557:24: error: Incompatible types (expression has type "float", TypedDict item "confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\opportunity_score.py:559:30: error: Incompatible types (expression has type "float", TypedDict item "phase_confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\opportunity_score.py:594:39: error: No overload variant of "polyfit" matches argument types "ndarray[Any, dtype[signedinteger[Any]]]", "ExtensionArray | ndarray[Any, Any]", "int", "bool"  [call-overload]
domain\symbols\opportunity_score.py:594:39: note: Possible overload variants:
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[False] = ...) -> ndarray[Any, dtype[floating[_64Bit]]]
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]]
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[True, 'unscaled'] = ...) -> tuple[ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[True, 'unscaled'] = ...) -> tuple[ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]], ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]]]
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[True] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: bool | Literal['unscaled'] = ...) -> tuple[ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[signedinteger[_32Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\opportunity_score.py:594:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[True] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: bool | Literal['unscaled'] = ...) -> tuple[ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[signedinteger[_32Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\opportunity_score.py:683:39: error: No overload variant of "polyfit" matches argument types "ndarray[Any, dtype[signedinteger[Any]]]", "ExtensionArray | ndarray[Any, Any]", "int", "bool"  [call-overload]
domain\symbols\opportunity_score.py:683:39: note: Possible overload variants:
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[False] = ...) -> ndarray[Any, dtype[floating[_64Bit]]]
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[False] = ...) -> ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]]
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[True, 'unscaled'] = ...) -> tuple[ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[False] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: Literal[True, 'unscaled'] = ...) -> tuple[ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]], ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]]]
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[True] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: bool | Literal['unscaled'] = ...) -> tuple[ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[signedinteger[_32Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\opportunity_score.py:683:39: note:     def polyfit(x: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], y: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any] | complexfloating[Any, Any]]]] | bool | int | float | complex | _NestedSequence[bool | int | float | complex], deg: SupportsIndex | SupportsInt, rcond: float | None = ..., full: Literal[True] = ..., w: _SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float] | None = ..., cov: bool | Literal['unscaled'] = ...) -> tuple[ndarray[Any, dtype[complexfloating[_64Bit, _64Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[signedinteger[_32Bit]]], ndarray[Any, dtype[floating[_64Bit]]], ndarray[Any, dtype[floating[_64Bit]]]]
domain\symbols\market_phase_classifier.py:95:32: error: Incompatible types (expression has type "float", TypedDict item "confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\market_phase_classifier.py:119:28: error: Incompatible types (expression has type "float", TypedDict item "confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\market_phase_classifier.py:132:28: error: Incompatible types (expression has type "float", TypedDict item "confidence" has type "ConfidenceValue")  [typeddict-item]
domain\symbols\market_phase_classifier.py:347:42: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[MarketPhase], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\symbols\market_phase_classifier.py:418:35: error: Unsupported operand type for unary - ("ExtensionArray | ndarray[Any, Any]")  [operator]
domain\symbols\market_phase_classifier.py:441:35: error: Argument 1 to "find_peaks" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[generic, tuple[int, ...]] | Sequence[complex | bytes | str | generic | CanArray0D[generic]]"  [arg-type]
domain\symbols\market_phase_classifier.py:465:59: error: Argument 2 to "linregress" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
domain\symbols\market_phase_classifier.py:484:59: error: Argument 2 to "linregress" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
domain\symbols\market_phase_classifier.py:546:59: error: Argument 2 to "linregress" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
domain\entities\__init__.py:8:1: error: Module "domain.entities.models" has no attribute "MarketData"  [attr-defined]
domain\entities\__init__.py:8:1: error: Module "domain.entities.models" has no attribute "Model"  [attr-defined]
domain\entities\__init__.py:8:1: error: Module "domain.entities.models" has no attribute "Prediction"  [attr-defined]
infrastructure\evolution\cache.py:88:40: error: Incompatible types in assignment (expression has type "CacheEntry", target has type "dict[Any, Any]")  [assignment]
infrastructure\evolution\cache.py:90:28: error: Invalid index type "CacheKey" for "dict[UUID, dict[Any, Any]]"; expected type "UUID"  [index]
infrastructure\evolution\cache.py:90:33: error: Incompatible types in assignment (expression has type "CacheEntry", target has type "dict[Any, Any]")  [assignment]
infrastructure\evolution\cache.py:92:24: error: Invalid index type "CacheKey" for "dict[UUID, dict[Any, Any]]"; expected type "UUID"  [index]
infrastructure\evolution\cache.py:92:29: error: Incompatible types in assignment (expression has type "CacheEntry", target has type "dict[Any, Any]")  [assignment]
infrastructure\evolution\strategy_storage.py:436:29: error: "ScalarResult[StrategyCandidateModel]" has no attribute "count"  [attr-defined]
infrastructure\evolution\strategy_storage.py:444:37: error: "ScalarResult[StrategyEvaluationModel]" has no attribute "count"  [attr-defined]
infrastructure\evolution\strategy_storage.py:445:40: error: "ScalarResult[StrategyEvaluationModel]" has no attribute "count"  [attr-defined]
infrastructure\evolution\strategy_storage.py:452:34: error: "ScalarResult[EvolutionContextModel]" has no attribute "count"  [attr-defined]
infrastructure\evolution\strategy_storage.py:480:38: error: Incompatible types (expression has type "datetime | None", TypedDict item "last_backup_time" has type "str | None")  [typeddict-item]
infrastructure\evolution\strategy_storage.py:558:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
infrastructure\evolution\strategy_storage.py:563:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
infrastructure\evolution\strategy_storage.py:568:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
infrastructure\evolution\strategy_storage.py:686:17: error: Need type annotation for "_query_times" (hint: "_query_times: list[<type>] = ...")  [var-annotated]
domain\sessions\factories.py:41:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:42:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:43:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\sessions\factories.py:48:30: error: Incompatible types in assignment (expression has type "SessionProfileRegistry", variable has type "SessionRegistry | None")  [assignment]
domain\sessions\factories.py:50:16: error: Incompatible return value type (got "SessionRegistry | None", expected "SessionRegistry")  [return-value]
domain\sessions\factories.py:88:24: error: Incompatible types in assignment (expression has type "SessionProfileRegistry", variable has type "SessionRegistry | None")  [assignment]
domain\sessions\factories.py:89:30: error: Argument 1 to "SessionMarker" has incompatible type "SessionRegistry"; expected "SessionProfileRegistry | None"  [arg-type]
domain\sessions\factories.py:160:41: error: Name "SessionService" is not defined  [name-defined]
domain\sessions\factories.py:178:80: error: Name "SessionDataRepository" is not defined  [name-defined]
domain\sessions\factories.py:183:87: error: Name "SessionConfigurationRepository" is not defined  [name-defined]
domain\sessions\factories.py:194:30: error: Name "SessionService" is not defined  [name-defined]
domain\services\strategy_service.py:28:1: error: Name "StrategyValidationResult" already defined (possibly by an import)  [no-redef]
domain\services\strategy_service.py:37:1: error: Name "StrategyOptimizationResult" already defined (possibly by an import)  [no-redef]
domain\services\strategy_service.py:47:1: error: Name "StrategyPerformanceResult" already defined (possibly by an import)  [no-redef]
domain\services\strategy_service.py:96:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\strategy_service.py:260:39: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:260:39: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:260:83: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:260:83: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:260:83: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:261:37: error: Unsupported operand types for - ("str" and "int")  [operator]
domain\services\strategy_service.py:261:37: error: Unsupported operand types for - ("list[str]" and "int")  [operator]
domain\services\strategy_service.py:261:37: error: Unsupported operand types for - ("dict[str, str | int | float | Decimal | bool]" and "int")  [operator]
domain\services\strategy_service.py:261:37: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:263:32: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:263:32: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:263:74: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:263:74: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:263:74: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:267:49: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:267:49: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:267:103: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:267:103: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:267:103: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:268:40: error: Unsupported operand types for - ("str" and "int")  [operator]
domain\services\strategy_service.py:268:40: error: Unsupported operand types for - ("list[str]" and "int")  [operator]
domain\services\strategy_service.py:268:40: error: Unsupported operand types for - ("dict[str, str | int | float | Decimal | bool]" and "int")  [operator]
domain\services\strategy_service.py:268:40: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:270:32: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:270:32: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:270:74: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:270:74: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:270:74: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:274:43: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:274:43: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:274:91: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:274:91: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:274:91: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:275:42: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:275:42: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:275:89: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:275:89: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:275:89: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:277:32: error: Unsupported operand types for * ("dict[str, str | int | float | Decimal | bool]" and "float")  [operator]
domain\services\strategy_service.py:277:32: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:277:74: error: Unsupported operand types for * ("str" and "float")  [operator]
domain\services\strategy_service.py:277:74: error: Unsupported operand types for * ("Decimal" and "float")  [operator]
domain\services\strategy_service.py:277:74: error: Unsupported operand types for * ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:280:32: error: Incompatible types in assignment (expression has type "dict[str, str | int | float | Decimal | bool | list[str] | dict[str, str | int | float | Decimal | bool]]", variable has type "dict[str, Any | float | int | SupportsDunderLT[Any] | SupportsDunderGT[Any] | str | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]]")  [assignment]
domain\services\strategy_service.py:280:32: note: "dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\services\strategy_service.py:280:32: note: Consider using "Mapping" instead, which is covariant in the value type
domain\services\strategy_service.py:282:16: error: Extra key "performance_gain" for TypedDict "StrategyOptimizationResult"  [typeddict-unknown-key]
domain\services\strategy_service.py:311:58: error: Argument 1 to "_generate_recommendations" of "DefaultStrategyService" has incompatible type "dict[str, int | float | str | list[str]]"; expected "Strategy"  [arg-type]
domain\services\strategy_service.py:313:16: error: Extra keys ("total_trades", "winning_trades", "losing_trades", "win_rate", "profit_factor", "sharpe_ratio", "max_drawdown", "total_pnl", "average_trade", "best_trade", "worst_trade", "quality_score", "risk_level", "recommendations") for TypedDict "StrategyPerformanceResult"  [typeddict-unknown-key]
domain\services\strategy_service.py:365:12: error: Unsupported operand types for < ("float" and "dict[str, str | int | float | Decimal | bool]")  [operator]
domain\services\strategy_service.py:365:12: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:365:41: error: Unsupported operand types for > ("str" and "float")  [operator]
domain\services\strategy_service.py:365:41: error: Unsupported operand types for > ("list[str]" and "float")  [operator]
domain\services\strategy_service.py:367:12: error: Unsupported operand types for > ("float" and "dict[str, str | int | float | Decimal | bool]")  [operator]
domain\services\strategy_service.py:367:12: note: Left operand is of type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"
domain\services\strategy_service.py:367:43: error: Unsupported operand types for < ("str" and "float")  [operator]
domain\services\strategy_service.py:367:43: error: Unsupported operand types for < ("list[str]" and "float")  [operator]
domain\services\pattern_discovery.py:12:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\services\pattern_discovery.py:13:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\services\pattern_discovery.py:86:5: error: Signature of "discover_patterns" incompatible with supertype "PatternAnalysisProtocol"  [override]
domain\services\pattern_discovery.py:86:5: note:      Superclass:
domain\services\pattern_discovery.py:86:5: note:          def discover_patterns(self, data: MarketDataFrame, config: AnalysisConfig) -> Coroutine[Any, Any, list[Any]]
domain\services\pattern_discovery.py:86:5: note:      Subclass:
domain\services\pattern_discovery.py:86:5: note:          def discover_patterns(self, data: DataFrame) -> list[Pattern]
domain\services\pattern_discovery.py:223:31: error: Argument 1 to "find_peaks" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[generic, tuple[int, ...]] | Sequence[complex | bytes | str | generic | CanArray0D[generic]]"  [arg-type]
domain\services\pattern_discovery.py:224:33: error: Unsupported operand type for unary - ("ExtensionArray | ndarray[Any, Any]")  [operator]
domain\repositories\strategy_repository.py:26:5: error: Signature of "get_all" incompatible with supertype "BaseRepository"  [override]
domain\repositories\strategy_repository.py:26:5: note:      Superclass:
domain\repositories\strategy_repository.py:26:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Strategy]]
domain\repositories\strategy_repository.py:26:5: note:      Subclass:
domain\repositories\strategy_repository.py:26:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Strategy]]
domain\repositories\strategy_repository.py:30:28: error: Argument 1 of "delete" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\strategy_repository.py:30:28: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:30:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\strategy_repository.py:99:28: error: Argument 1 of "exists" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\strategy_repository.py:99:28: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:99:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\strategy_repository.py:104:27: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
domain\repositories\strategy_repository.py:104:27: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:104:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\strategy_repository.py:114:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\strategy_repository.py:115:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\strategy_repository.py:116:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\strategy_repository.py:116:57: error: Incompatible types in assignment (expression has type "dict[EntityId, dict[str, Any]]", base class "BaseRepository" defined the type as "RepositoryMetrics")  [assignment]
domain\repositories\strategy_repository.py:125:5: error: Signature of "get_all" incompatible with supertype "BaseRepository"  [override]
domain\repositories\strategy_repository.py:125:5: note:      Superclass:
domain\repositories\strategy_repository.py:125:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Strategy]]
domain\repositories\strategy_repository.py:125:5: note:      Subclass:
domain\repositories\strategy_repository.py:125:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Strategy]]
domain\repositories\strategy_repository.py:128:28: error: Argument 1 of "delete" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\strategy_repository.py:128:28: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:128:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\strategy_repository.py:180:28: error: Argument 1 of "exists" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\strategy_repository.py:180:28: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:180:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\strategy_repository.py:183:27: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
domain\repositories\strategy_repository.py:183:27: note: This violates the Liskov substitution principle
domain\repositories\strategy_repository.py:183:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:14:1: error: Incompatible import of "TradingPair" (imported name has type "type[domain.types.TradingPair]", local name has type "type[domain.entities.trading_pair.TradingPair]")  [assignment]
domain\repositories\order_repository.py:42:31: error: Argument 1 of "get_by_id" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "EntityId"  [override]
domain\repositories\order_repository.py:42:31: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:42:31: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:191:28: error: Argument 1 of "delete" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\order_repository.py:191:28: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:191:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:207:28: error: Argument 1 of "exists" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\order_repository.py:207:28: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:207:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:225:9: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
domain\repositories\order_repository.py:225:9: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:225:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:398:5: error: Signature of "get_all" incompatible with supertype "BaseRepository"  [override]
domain\repositories\order_repository.py:398:5: note:      Superclass:
domain\repositories\order_repository.py:398:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Order]]
domain\repositories\order_repository.py:398:5: note:      Subclass:
domain\repositories\order_repository.py:398:5: note:          def get_all(self, filters: dict[str, Any] | None = ..., limit: int | None = ..., offset: int | None = ..., sort_by: str | None = ..., sort_order: str | None = ...) -> Coroutine[Any, Any, list[Order]]
domain\repositories\order_repository.py:445:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\order_repository.py:451:31: error: Argument 1 of "get_by_id" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "EntityId"  [override]
domain\repositories\order_repository.py:451:31: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:451:31: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:487:35: error: Unsupported operand types for <= ("datetime" and "Timestamp")  [operator]
domain\repositories\order_repository.py:487:55: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:498:28: error: Argument 1 of "delete" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\order_repository.py:498:28: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:498:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:504:28: error: Argument 1 of "exists" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\order_repository.py:504:28: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:504:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:507:27: error: Argument 1 of "count" is incompatible with supertype "BaseRepository"; supertype defines the argument type as "list[QueryFilter] | None"  [override]
domain\repositories\order_repository.py:507:27: note: This violates the Liskov substitution principle
domain\repositories\order_repository.py:507:27: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\order_repository.py:513:31: error: Incompatible types in assignment (expression has type "list[Order]", variable has type "dict_values[OrderId, Order]")  [assignment]
domain\repositories\order_repository.py:522:72: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:524:72: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:532:72: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:534:72: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:542:72: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:544:72: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:552:72: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:554:72: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:569:48: error: Unsupported operand types for < ("Timestamp" and "datetime")  [operator]
domain\repositories\order_repository.py:606:5: error: Signature of "get_all" incompatible with supertype "BaseRepository"  [override]
domain\repositories\order_repository.py:606:5: note:      Superclass:
domain\repositories\order_repository.py:606:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Order]]
domain\repositories\order_repository.py:606:5: note:      Subclass:
domain\repositories\order_repository.py:606:5: note:          def get_all(self, filters: dict[str, Any] | None = ..., limit: int | None = ..., offset: int | None = ..., sort_by: str | None = ..., sort_order: str | None = ...) -> Coroutine[Any, Any, list[Order]]
domain\services\market_analysis.py:98:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\market_analysis.py:190:9: error: Need type annotation for "volume_profile" (hint: "volume_profile: dict[<type>, <type>] = ...")  [var-annotated]
domain\services\market_analysis.py:199:45: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[Any], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\services\signal_service.py:122:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\signal_service.py:123:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\signal_service.py:128:13: error: Dict entry 0 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:129:13: error: Dict entry 1 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:130:13: error: Dict entry 2 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:131:13: error: Dict entry 3 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:132:13: error: Dict entry 4 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:133:13: error: Dict entry 5 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:134:13: error: Dict entry 6 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:135:13: error: Dict entry 7 has incompatible type "str": "Callable[[Strategy, MarketDataFrame], Coroutine[Any, Any, list[Signal]]]"; expected "str": "Callable[[Strategy, MarketDataFrame], list[Signal]]"  [dict-item]
domain\services\signal_service.py:156:19: error: Incompatible types in "await" (actual type "list[Signal]", expected type "Awaitable[Any]")  [misc]
domain\services\signal_service.py:169:32: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:170:28: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:236:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:237:24: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:276:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:277:29: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:341:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:342:24: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:376:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:377:30: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:410:22: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:411:25: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:443:22: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:444:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:478:22: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:479:27: error: Argument 1 to "float" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\services\signal_service.py:511:27: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:512:31: error: Argument 1 to "int" has incompatible type "str | int | float | Decimal | list[str] | dict[str, str | int | float | Decimal | bool]"; expected "str | Buffer | SupportsInt | SupportsIndex | SupportsTrunc"  [arg-type]
domain\services\signal_service.py:521:32: error: "datetime" has no attribute "datetime"  [attr-defined]
domain\services\signal_service.py:546:16: error: "Signal" has no attribute "symbol"  [attr-defined]
domain\services\signal_service.py:578:20: error: Extra key "signal" for TypedDict "SignalAggregationResult"  [typeddict-unknown-key]
domain\services\signal_service.py:587:20: error: Extra key "signal" for TypedDict "SignalAggregationResult"  [typeddict-unknown-key]
domain\services\signal_service.py:601:48: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[SignalType], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\services\signal_service.py:643:29: error: Unexpected keyword argument "symbol" for "Signal"  [call-arg]
domain\services\signal_service.py:644:20: error: "Signal" has no attribute "symbol"  [attr-defined]
domain\services\signal_service.py:647:24: error: Argument "confidence" to "Signal" has incompatible type "Decimal | float"; expected "Decimal"  [arg-type]
domain\services\signal_service.py:655:16: error: Extra key "signal" for TypedDict "SignalAggregationResult"  [typeddict-unknown-key]
domain\services\signal_service.py:670:20: error: Extra keys ("total_signals", "signal_distribution", "average_confidence", "strength_distribution") for TypedDict "SignalAnalysisResult"  [typeddict-unknown-key]
domain\services\signal_service.py:700:34: error: "datetime" has no attribute "datetime"  [attr-defined]
domain\services\signal_service.py:708:16: error: Extra keys ("total_signals", "recent_signals", "signal_distribution", "average_confidence", "strength_distribution", "period_analysis") for TypedDict "SignalAnalysisResult"  [typeddict-unknown-key]
domain\services\market_metrics.py:39:20: error: Extra keys ("current_volatility", "historical_volatility", "volatility_percentile", "volatility_trend") for TypedDict "VolatilityMetrics"  [typeddict-unknown-key]
domain\services\market_metrics.py:58:16: error: Extra keys ("current_volatility", "historical_volatility", "volatility_percentile", "volatility_trend") for TypedDict "VolatilityMetrics"  [typeddict-unknown-key]
domain\services\market_metrics.py:67:20: error: Extra keys ("trend_duration", "support_resistance") for TypedDict "TrendMetrics"  [typeddict-unknown-key]
domain\services\market_metrics.py:76:20: error: Extra keys ("trend_duration", "support_resistance") for TypedDict "TrendMetrics"  [typeddict-unknown-key]
domain\services\market_metrics.py:95:16: error: Extra keys ("trend_duration", "support_resistance") for TypedDict "TrendMetrics"  [typeddict-unknown-key]
domain\services\market_metrics.py:274:12: error: Unsupported operand types for < ("int" and "object")  [operator]
domain\services\market_metrics.py:274:16: error: Argument 1 to "abs" has incompatible type "str | bytes | date | timedelta | datetime64 | <7 more items>"; expected "SupportsAbs[object]"  [arg-type]
domain\services\market_metrics.py:276:12: error: Unsupported operand types for < ("int" and "object")  [operator]
domain\services\market_metrics.py:276:16: error: Argument 1 to "abs" has incompatible type "str | bytes | date | timedelta | datetime64 | <7 more items>"; expected "SupportsAbs[object]"  [arg-type]
domain\services\market_metrics.py:293:20: error: Extra keys ("volatility", "trend", "volume", "liquidity", "momentum", "stress", "timestamp") for TypedDict "MarketMetricsResult"  [typeddict-unknown-key]
domain\services\technical_analysis.py:21:1: error: Cannot find implementation or library stub for module named "talib"  [import-not-found]
domain\services\technical_analysis.py:24:5: error: Name "talib" already defined (possibly by an import)  [no-redef]
domain\services\technical_analysis.py:71:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\services\technical_analysis.py:74:5: error: Name "StandardScaler" already defined (possibly by an import)  [no-redef]
domain\services\technical_analysis.py:76:13: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\technical_analysis.py:77:13: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\technical_analysis.py:94:1: error: Name "TechnicalAnalysisError" already defined (possibly by an import)  [no-redef]
domain\services\technical_analysis.py:177:27: error: Incompatible types in assignment (expression has type "None", variable has type "datetime")  [assignment]
domain\services\technical_analysis.py:229:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\technical_analysis.py:242:37: error: Unsupported operand types for > ("Series[type[object]]" and "int")  [operator]
domain\services\technical_analysis.py:243:38: error: Unsupported operand types for < ("Series[type[object]]" and "int")  [operator]
domain\services\technical_analysis.py:281:16: error: "ndarray[Any, dtype[Any]]" has no attribute "rolling"  [attr-defined]
domain\services\technical_analysis.py:340:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:340:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:347:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:347:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:354:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:354:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:361:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:361:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:368:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:368:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:375:45: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:375:45: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:380:52: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:380:52: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:385:55: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:385:55: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:392:56: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:392:56: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:397:57: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:397:57: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:402:56: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:402:56: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:409:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:409:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:416:53: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:416:53: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:421:53: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:421:53: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:428:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:428:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:435:48: error: Unexpected keyword argument "values" for "TechnicalIndicator"; did you mean "value"?  [call-arg]
domain\services\technical_analysis.py:435:48: error: Unexpected keyword argument "timestamp" for "TechnicalIndicator"  [call-arg]
domain\services\technical_analysis.py:443:23: error: Argument "timeframe" to "TechnicalAnalysisResult" has incompatible type "Timeframe | str"; expected "str"  [arg-type]
domain\services\technical_analysis.py:541:28: error: Argument "indicators" to "TechnicalAnalysisResult" has incompatible type "dict[Hashable, Any]"; expected "dict[str, TechnicalIndicator]"  [arg-type]
domain\services\technical_analysis.py:570:49: error: Argument "key" to "max" has incompatible type overloaded function; expected "Callable[[float], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
domain\services\technical_analysis.py:584:17: error: Incompatible types in assignment (expression has type "float", variable has type "int")  [assignment]
domain\services\technical_analysis.py:588:20: error: Unexpected keyword argument "value_area" for "VolumeProfileResult"; did you mean "value_area_low" or "value_area_high"?  [call-arg]
domain\services\technical_analysis.py:592:22: error: Argument "bins" to "VolumeProfileResult" has incompatible type "list[float]"; expected "int"  [arg-type]
domain\services\technical_analysis.py:625:20: error: Incompatible return value type (got "MarketStructureData", expected "MarketStructureResult")  [return-value]
domain\services\technical_analysis.py:697:49: error: Argument 3 to "calculate_bollinger_bands" of "TechnicalAnalysisService" has incompatible type "float"; expected "int"  [arg-type]
domain\entities\position.py:59:12: error: "Volume" has no attribute "is_zero"  [attr-defined]
domain\entities\position.py:107:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:114:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:125:12: error: "Volume" has no attribute "is_zero"  [attr-defined]
domain\entities\position.py:130:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:134:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:168:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:172:17: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:196:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:198:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:204:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:206:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:212:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:213:22: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:215:20: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:216:22: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:228:32: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:229:34: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:239:30: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\entities\position.py:240:32: error: "Price" has no attribute "to_decimal"  [attr-defined]
domain\memory\pattern_memory.py:16:1: error: Skipping analyzing "sklearn.cluster": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\memory\pattern_memory.py:17:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
domain\memory\pattern_memory.py:77:20: error: Incompatible return value type (got "float | SupportsDunderLT[Any] | SupportsDunderGT[Any]", expected "float")  [return-value]
domain\memory\pattern_memory.py:108:31: error: "MarketFeatures" has no attribute "price_data"  [attr-defined]
domain\memory\pattern_memory.py:109:32: error: "MarketFeatures" has no attribute "volume_data"  [attr-defined]
domain\memory\pattern_memory.py:120:27: error: "MarketFeatures" has no attribute "price_data"  [attr-defined]
domain\memory\pattern_memory.py:121:28: error: "MarketFeatures" has no attribute "volume_data"  [attr-defined]
domain\memory\pattern_memory.py:123:36: error: "MarketFeatures" has no attribute "symbol"  [attr-defined]
domain\memory\pattern_memory.py:130:33: error: "MarketFeatures" has no attribute "symbol"  [attr-defined]
domain\memory\pattern_memory.py:888:32: error: Incompatible types in assignment (expression has type "str", variable has type "PatternType | None")  [assignment]
domain\memory\pattern_memory.py:888:32: note: Items in the first union not in the second: "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"
application\services\order_validator.py:249:16: error: Argument "id" to "Portfolio" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
application\services\base_service.py:107:75: error: Function "builtins.callable" is not valid as a type  [valid-type]
application\services\base_service.py:107:75: note: Perhaps you meant "typing.Callable" instead of "callable"?
application\services\base_service.py:115:49: error: callable? not callable  [misc]
application\services\base_service.py:142:1: error: Library stubs not installed for "psutil"  [import-untyped]
application\services\base_service.py:142:1: note: Hint: "python3 -m pip install types-psutil"
application\services\base_service.py:142:1: note: (or run "mypy --install-types" to install all missing stub packages)
infrastructure\core\evolution_manager.py:20:1: error: Skipping analyzing "deap": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\core\evolution_manager.py:207:16: error: Incompatible return value type (got "bool_", expected "bool")  [return-value]
infrastructure\core\evolution_manager.py:549:53: error: Incompatible types in assignment (expression has type "float", target has type "bool")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:13:1: error: Skipping analyzing "ccxt": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\external_services\exchanges\base_exchange_service.py:100:19: error: "None" has no attribute "load_markets"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:111:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:112:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:112:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:134:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:135:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:135:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:166:27: error: "None" has no attribute "fetch_ohlcv"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:188:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:188:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:192:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:192:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:193:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:235:17: error: Unsupported target for indexed assignment ("dict[str, Literal['GTC', 'IOC', 'FOK'] | bool] | float | str | None")  [index]
infrastructure\external_services\exchanges\base_exchange_service.py:235:55: error: Incompatible types in assignment (expression has type "float", target has type "Literal['GTC', 'IOC', 'FOK'] | bool")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:237:28: error: "None" has no attribute "create_order"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:254:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:254:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:258:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:258:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:259:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:284:28: error: "None" has no attribute "cancel_order"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:286:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:286:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:290:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:290:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:291:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:302:28: error: "None" has no attribute "fetch_order"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:318:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:318:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:322:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:322:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:323:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:340:28: error: "None" has no attribute "fetch_balance"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:354:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:354:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:355:20: error: Incompatible return value type (got "dict[Any, dict[str, float]]", expected "dict[str, float]")  [return-value]
infrastructure\external_services\exchanges\base_exchange_service.py:358:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:358:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:359:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\external_services\exchanges\base_exchange_service.py:376:28: error: "None" has no attribute "fetch_positions"  [attr-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:396:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:396:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:400:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\external_services\exchanges\base_exchange_service.py:400:13: note: Left operand is of type "float | int | None"
infrastructure\external_services\exchanges\base_exchange_service.py:401:42: error: Incompatible types in assignment (expression has type "str", target has type "float | int | None")  [assignment]
infrastructure\repositories\trading\events.py:164:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\events.py:165:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\events.py:169:58: error: Function "builtins.callable" is not valid as a type  [valid-type]
infrastructure\repositories\trading\events.py:169:58: note: Perhaps you meant "typing.Callable" instead of "callable"?
infrastructure\repositories\trading\events.py:178:60: error: Function "builtins.callable" is not valid as a type  [valid-type]
infrastructure\repositories\trading\events.py:178:60: note: Perhaps you meant "typing.Callable" instead of "callable"?
infrastructure\repositories\trading\events.py:200:28: error: Name "asyncio" is not defined  [name-defined]
infrastructure\repositories\trading\events.py:201:35: error: callable? not callable  [misc]
infrastructure\repositories\trading\events.py:203:29: error: callable? not callable  [misc]
infrastructure\repositories\trading\events.py:269:31: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\events.py:273:32: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\repositories\trading\events.py:287:31: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\events.py:300:31: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\events.py:318:35: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\trading\events.py:319:40: error: "Position" has no attribute "average_price"  [attr-defined]
infrastructure\repositories\trading\converters.py:36:37: error: "TradingPair" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\converters.py:37:32: error: "Order" has no attribute "account"; maybe "amount"?  [attr-defined]
infrastructure\repositories\trading\converters.py:43:28: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\converters.py:44:28: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\converters.py:87:20: error: Unexpected keyword argument "account" for "Order"; did you mean "amount"?  [call-arg]
infrastructure\repositories\trading\converters.py:88:20: error: Argument "id" to "Order" has incompatible type "UUID"; expected "OrderId"  [arg-type]
infrastructure\repositories\trading\converters.py:93:26: error: Argument "quantity" to "Order" has incompatible type "Decimal"; expected "VolumeValue"  [arg-type]
infrastructure\repositories\trading\converters.py:94:23: error: Argument "price" to "Order" has incompatible type "Decimal | None"; expected "Price | None"  [arg-type]
infrastructure\repositories\trading\converters.py:96:28: error: Argument "created_at" to "Order" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
infrastructure\repositories\trading\converters.py:97:28: error: Argument "updated_at" to "Order" has incompatible type "datetime | None"; expected "Timestamp"  [arg-type]
infrastructure\repositories\trading\converters.py:108:37: error: "TradingPair" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\converters.py:109:32: error: "Position" has no attribute "account"  [attr-defined]
infrastructure\repositories\trading\converters.py:111:30: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\trading\converters.py:112:35: error: "Position" has no attribute "average_price"  [attr-defined]
infrastructure\repositories\trading\converters.py:125:28: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\converters.py:126:28: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\converters.py:146:20: error: Unexpected keyword argument "account" for "Position"  [call-arg]
infrastructure\repositories\trading\converters.py:146:20: error: Unexpected keyword argument "quantity" for "Position"  [call-arg]
infrastructure\repositories\trading\converters.py:146:20: error: Unexpected keyword argument "average_price" for "Position"  [call-arg]
infrastructure\repositories\trading\converters.py:147:20: error: Argument "id" to "Position" has incompatible type "UUID"; expected "PositionId"  [arg-type]
infrastructure\repositories\trading\converters.py:148:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
infrastructure\repositories\trading\converters.py:150:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
infrastructure\repositories\trading\converters.py:153:32: error: Argument "unrealized_pnl" to "Position" has incompatible type "Decimal | None"; expected "Money | None"  [arg-type]
infrastructure\repositories\trading\converters.py:154:30: error: Argument "realized_pnl" to "Position" has incompatible type "Decimal | None"; expected "Money | None"  [arg-type]
infrastructure\repositories\trading\converters.py:155:28: error: Argument "created_at" to "Position" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
infrastructure\repositories\trading\converters.py:156:28: error: Argument "updated_at" to "Position" has incompatible type "datetime | None"; expected "Timestamp"  [arg-type]
infrastructure\repositories\trading\converters.py:166:24: error: "TradingPair" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\converters.py:167:28: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\converters.py:168:32: error: "TradingPair" has no attribute "base_asset"  [attr-defined]
infrastructure\repositories\trading\converters.py:169:33: error: "TradingPair" has no attribute "quote_asset"  [attr-defined]
infrastructure\repositories\trading\converters.py:183:28: error: "TradingPair" has no attribute "created_at"  [attr-defined]
infrastructure\repositories\trading\converters.py:184:28: error: "TradingPair" has no attribute "updated_at"  [attr-defined]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "id" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "symbol" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "base_asset" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "quote_asset" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "created_at" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:195:20: error: Unexpected keyword argument "updated_at" for "TradingPair"  [call-arg]
infrastructure\repositories\trading\converters.py:211:24: error: "Account" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\converters.py:212:22: error: "Account" has no attribute "name"  [attr-defined]
infrastructure\repositories\trading\converters.py:226:34: error: "str" has no attribute "code"; maybe "encode"?  [attr-defined]
infrastructure\repositories\trading\converters.py:227:33: error: "Balance" has no attribute "amount"  [attr-defined]
infrastructure\repositories\trading\converters.py:252:20: error: Unexpected keyword argument "id" for "Account"  [call-arg]
infrastructure\repositories\trading\converters.py:252:20: error: Unexpected keyword argument "name" for "Account"  [call-arg]
infrastructure\repositories\trading\converters.py:255:26: error: Argument "balances" to "Account" has incompatible type "list[Money]"; expected "list[Balance]"  [arg-type]
infrastructure\repositories\trading\converters.py:257:28: error: Argument "updated_at" to "Account" has incompatible type "datetime | None"; expected "datetime"  [arg-type]
infrastructure\ml_services\window_optimizer.py:8:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\window_optimizer.py:13:1: error: Skipping analyzing "sklearn.ensemble": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\window_optimizer.py:14:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\window_optimizer.py:15:1: error: Skipping analyzing "sklearn.model_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\window_optimizer.py:16:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\window_optimizer.py:344:13: error: Need type annotation for "importance" (hint: "importance: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\window_optimizer.py:348:25: error: Argument 1 to "zip" has incompatible type "list[str] | None"; expected "Iterable[str]"  [arg-type]
infrastructure\services\technical_analysis_service.py:18:1: error: Module "domain.types.technical_types" has no attribute "TechnicalAnalysisResult"; maybe "TechnicalAnalysisReport"?  [attr-defined]
infrastructure\services\technical_analysis_service.py:18:1: error: Module "domain.types.technical_types" has no attribute "IndicatorResult"; maybe "TechnicalIndicatorResult"?  [attr-defined]
infrastructure\services\technical_analysis_service.py:182:5: error: Signature of "calculate_atr" incompatible with supertype "TechnicalAnalysisService"  [override]
infrastructure\services\technical_analysis_service.py:182:5: note:      Superclass:
infrastructure\services\technical_analysis_service.py:182:5: note:          def calculate_atr(self, df: DataFrame, period: int = ...) -> Series[Any]
infrastructure\services\technical_analysis_service.py:182:5: note:      Subclass:
infrastructure\services\technical_analysis_service.py:182:5: note:          def calculate_atr(self, high: Series[Any], low: Series[Any], close: Series[Any], period: int | None = ...) -> Series[Any]
infrastructure\services\technical_analysis_service.py:182:5: error: Signature of "calculate_atr" incompatible with supertype "TechnicalAnalysisProtocol"  [override]
infrastructure\services\technical_analysis_service.py:182:5: note:      Superclass:
infrastructure\services\technical_analysis_service.py:182:5: note:          def calculate_atr(self, df: DataFrame, period: int = ...) -> Series[Any]
infrastructure\services\technical_analysis_service.py:182:5: note:      Subclass:
infrastructure\services\technical_analysis_service.py:182:5: note:          def calculate_atr(self, high: Series[Any], low: Series[Any], close: Series[Any], period: int | None = ...) -> Series[Any]
infrastructure\services\technical_analysis_service.py:326:34: error: Incompatible types in assignment (expression has type "tuple[Series[Any], Series[Any], Series[Any]]", target has type "Series[Any]")  [assignment]
infrastructure\services\technical_analysis_service.py:327:45: error: Incompatible types in assignment (expression has type "tuple[Series[Any], Series[Any], Series[Any]]", target has type "Series[Any]")  [assignment]
infrastructure\services\technical_analysis_service.py:331:40: error: Incompatible types in assignment (expression has type "tuple[Series[Any], Series[Any]]", target has type "Series[Any]")  [assignment]
infrastructure\services\technical_analysis_service.py:336:46: error: Incompatible types in assignment (expression has type "tuple[Series[Any], Series[Any], Series[Any]]", target has type "Series[Any]")  [assignment]
infrastructure\ml_services\advanced_price_predictor.py:22:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\advanced_price_predictor.py:465:9: error: Need type annotation for "feature_cache" (hint: "feature_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:466:9: error: Need type annotation for "prediction_cache" (hint: "prediction_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:467:9: error: Need type annotation for "model_state" (hint: "model_state: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:470:24: error: Need type annotation for "metrics"  [var-annotated]
infrastructure\ml_services\advanced_price_predictor.py:493:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:496:40: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:502:41: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:509:28: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:516:34: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:521:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:526:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:531:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:536:32: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:539:27: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\advanced_price_predictor.py:576:50: error: Argument 1 to "savgol_filter" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
infrastructure\ml_services\advanced_price_predictor.py:577:51: error: Argument 1 to "savgol_filter" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | SequenceND[CanArrayND[floating[Any] | integer[Any] | bool_, tuple[int, ...]] | float | floating[Any] | integer[Any] | bool_ | CanArray0D[floating[Any] | integer[Any] | bool_]]"  [arg-type]
infrastructure\ml_services\advanced_price_predictor.py:619:13: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[ndarray[Any, Any]]")  [assignment]
infrastructure\ml_services\advanced_price_predictor.py:620:13: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[ExtensionArray | ndarray[Any, Any]]")  [assignment]
infrastructure\ml_services\advanced_price_predictor.py:623:22: error: "list[ndarray[Any, Any]]" has no attribute "reshape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:623:36: error: "list[ndarray[Any, Any]]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:625:37: error: "list[ndarray[Any, Any]]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\advanced_price_predictor.py:734:16: error: Incompatible return value type (got "tuple[Any, floating[Any]]", expected "tuple[ndarray[Any, Any], float]")  [return-value]
domain\protocols\strategy_protocol.py:20:1: error: Cannot find implementation or library stub for module named "talib"  [import-not-found]
domain\protocols\strategy_protocol.py:96:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\protocols\strategy_protocol.py:202:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:203:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:204:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:205:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\strategy_protocol.py:969:23: error: Generator has incompatible item type "int"; expected "bool"  [misc]
domain\protocols\strategy_protocol.py:969:49: error: Item "None" of "Money | None" has no attribute "value"  [union-attr]
domain\protocols\strategy_protocol.py:977:28: error: Item "None" of "Money | None" has no attribute "value"  [union-attr]
domain\protocols\strategy_protocol.py:977:28: error: Generator has incompatible item type "MoneyAmount | Any"; expected "bool"  [misc]
domain\protocols\strategy_protocol.py:978:30: error: Item "None" of "Money | None" has no attribute "value"  [union-attr]
domain\protocols\strategy_protocol.py:978:30: error: Generator has incompatible item type "MoneyAmount | Any"; expected "bool"  [misc]
domain\protocols\exchange_protocol.py:305:12: error: "Volume" has no attribute "is_zero"  [attr-defined]
domain\protocols\exchange_protocol.py:403:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\exchange_protocol.py:404:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\exchange_protocol.py:405:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\exchange_protocol.py:543:19: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
domain\protocols\exchange_protocol.py:555:19: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
domain\protocols\exchange_protocol.py:687:34: error: Incompatible types in assignment (expression has type "ClientConnection", variable has type "None")  [assignment]
domain\protocols\exchange_protocol.py:693:23: error: "None" has no attribute "send"  [attr-defined]
domain\protocols\exchange_protocol.py:737:24: error: Name "websockets" is not defined  [name-defined]
infrastructure\repositories\trading\services.py:29:27: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\repositories\trading\services.py:34:31: error: "TradingPair" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\trading\services.py:41:31: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:42:31: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:51:30: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\trading\services.py:52:31: error: "Position" has no attribute "average_price"  [attr-defined]
infrastructure\repositories\trading\services.py:53:36: error: Argument 1 to "float" has incompatible type "Money"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\repositories\trading\services.py:54:34: error: Argument 1 to "float" has incompatible type "Money"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\repositories\trading\services.py:65:31: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:66:31: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:75:33: error: Generator has incompatible item type "float"; expected "bool"  [misc]
infrastructure\repositories\trading\services.py:75:39: error: "Balance" has no attribute "amount"  [attr-defined]
infrastructure\repositories\trading\services.py:77:17: error: Generator has incompatible item type "float"; expected "bool"  [misc]
infrastructure\repositories\trading\services.py:77:23: error: "Balance" has no attribute "amount"  [attr-defined]
infrastructure\repositories\trading\services.py:78:20: error: "str" has no attribute "code"; maybe "encode"?  [attr-defined]
infrastructure\repositories\trading\services.py:82:35: error: "Account" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\services.py:149:36: error: "TradingPair" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\services.py:150:31: error: "Order" has no attribute "account"; maybe "amount"?  [attr-defined]
infrastructure\repositories\trading\services.py:156:27: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:157:27: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:164:36: error: "TradingPair" has no attribute "id"  [attr-defined]
infrastructure\repositories\trading\services.py:165:31: error: "Position" has no attribute "account"  [attr-defined]
infrastructure\repositories\trading\services.py:167:29: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\trading\services.py:168:34: error: "Position" has no attribute "average_price"  [attr-defined]
infrastructure\repositories\trading\services.py:171:27: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
infrastructure\repositories\trading\services.py:172:27: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
domain\strategies\strategy_registry.py:46:30: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "MetadataDict")  [assignment]
domain\strategies\strategy_registry.py:94:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:95:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:96:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:97:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:98:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:99:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_registry.py:100:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\arbitrage_strategy.py:43:34: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\arbitrage_strategy.py:43:73: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\arbitrage_strategy.py:44:44: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\arbitrage_strategy.py:45:9: error: Need type annotation for "technical_indicators" (hint: "technical_indicators: dict[<type>, <type>] = ...")  [var-annotated]
domain\strategies\arbitrage_strategy.py:50:9: error: Need type annotation for "pattern_recognition" (hint: "pattern_recognition: list[<type>] = ...")  [var-annotated]
domain\strategies\arbitrage_strategy.py:83:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
domain\strategies\scalping_strategy.py:39:30: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\scalping_strategy.py:39:71: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\scalping_strategy.py:40:34: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\scalping_strategy.py:40:73: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\scalping_strategy.py:44:44: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\scalping_strategy.py:45:9: error: Need type annotation for "technical_indicators" (hint: "technical_indicators: dict[<type>, <type>] = ...")  [var-annotated]
domain\strategies\scalping_strategy.py:50:9: error: Need type annotation for "pattern_recognition" (hint: "pattern_recognition: list[<type>] = ...")  [var-annotated]
domain\strategies\scalping_strategy.py:69:24: error: Need type annotation for "price_change"  [var-annotated]
domain\strategies\scalping_strategy.py:69:28: error: Argument 1 to "abs" has incompatible type "Price"; expected "SupportsAbs[Never]"  [arg-type]
domain\strategies\scalping_strategy.py:69:69: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\scalping_strategy.py:83:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
domain\strategies\breakout_strategy.py:39:29: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\breakout_strategy.py:39:68: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\breakout_strategy.py:40:24: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\breakout_strategy.py:46:9: error: Need type annotation for "technical_indicators" (hint: "technical_indicators: dict[<type>, <type>] = ...")  [var-annotated]
domain\strategies\breakout_strategy.py:51:9: error: Need type annotation for "pattern_recognition" (hint: "pattern_recognition: list[<type>] = ...")  [var-annotated]
domain\strategies\breakout_strategy.py:84:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
domain\strategies\mean_reversion_strategy.py:41:30: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\mean_reversion_strategy.py:41:71: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\mean_reversion_strategy.py:43:34: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\mean_reversion_strategy.py:43:73: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\mean_reversion_strategy.py:44:44: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\mean_reversion_strategy.py:50:9: error: Need type annotation for "pattern_recognition" (hint: "pattern_recognition: list[<type>] = ...")  [var-annotated]
domain\strategies\mean_reversion_strategy.py:72:21: error: Need type annotation for "deviation"  [var-annotated]
domain\strategies\mean_reversion_strategy.py:72:25: error: Argument 1 to "abs" has incompatible type "Price"; expected "SupportsAbs[Never]"  [arg-type]
domain\strategies\mean_reversion_strategy.py:72:66: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\mean_reversion_strategy.py:86:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
domain\strategies\trend_following_strategy.py:43:30: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\trend_following_strategy.py:43:71: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\trend_following_strategy.py:46:34: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\trend_following_strategy.py:46:73: error: Unsupported operand types for / ("Price" and "Price")  [operator]
domain\strategies\trend_following_strategy.py:47:44: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\trend_following_strategy.py:49:32: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\trend_following_strategy.py:50:31: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
domain\strategies\trend_following_strategy.py:57:9: error: Need type annotation for "pattern_recognition" (hint: "pattern_recognition: list[<type>] = ...")  [var-annotated]
domain\strategies\trend_following_strategy.py:91:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
domain\strategies\trend_following_strategy.py:107:23: error: Argument "price" to "Signal" has incompatible type "Price"; expected "Money | None"  [arg-type]
infrastructure\services\enhanced_trading\__init__.py:32:1: error: Incompatible import of "calculate_performance_metrics" (imported name has type "Callable[[list[dict[str, Any]], DataFrame], dict[str, Any]]", local name has type "Callable[[dict[str, Any], DataFrame, list[dict[str, Any]]], dict[str, Any]]")  [assignment]
infrastructure\strategies\adaptive\market_regime_detector.py:24:37: error: "MarketRegimeAgent" has no attribute "predict_regime"; maybe "reset_regime"?  [attr-defined]
infrastructure\evolution\backup.py:48:28: error: Incompatible types in assignment (expression has type "None", variable has type "StrategyStorage")  [assignment]
infrastructure\evolution\backup.py:51:28: error: Incompatible types in assignment (expression has type "None", variable has type "StrategyStorage")  [assignment]
infrastructure\evolution\backup.py:54:28: error: Incompatible types in assignment (expression has type "None", variable has type "StrategyStorage")  [assignment]
infrastructure\evolution\backup.py:204:13: error: Need type annotation for "backups" (hint: "backups: list[<type>] = ...")  [var-annotated]
infrastructure\evolution\backup.py:359:17: error: No overload variant of "execute" of "Session" matches argument type "str"  [call-overload]
infrastructure\evolution\backup.py:359:17: note: Possible overload variants:
infrastructure\evolution\backup.py:359:17: note:     def [_T: Any] execute(self, statement: TypedReturnsRows[_T], params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[_T]
infrastructure\evolution\backup.py:359:17: note:     def execute(self, statement: UpdateBase, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> CursorResult[Any]
infrastructure\evolution\backup.py:359:17: note:     def execute(self, statement: Executable, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[Any]
infrastructure\evolution\backup.py:360:17: error: No overload variant of "execute" of "Session" matches argument type "str"  [call-overload]
infrastructure\evolution\backup.py:360:17: note: Possible overload variants:
infrastructure\evolution\backup.py:360:17: note:     def [_T: Any] execute(self, statement: TypedReturnsRows[_T], params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[_T]
infrastructure\evolution\backup.py:360:17: note:     def execute(self, statement: UpdateBase, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> CursorResult[Any]
infrastructure\evolution\backup.py:360:17: note:     def execute(self, statement: Executable, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[Any]
infrastructure\evolution\backup.py:361:17: error: No overload variant of "execute" of "Session" matches argument type "str"  [call-overload]
infrastructure\evolution\backup.py:361:17: note: Possible overload variants:
infrastructure\evolution\backup.py:361:17: note:     def [_T: Any] execute(self, statement: TypedReturnsRows[_T], params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[_T]
infrastructure\evolution\backup.py:361:17: note:     def execute(self, statement: UpdateBase, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> CursorResult[Any]
infrastructure\evolution\backup.py:361:17: note:     def execute(self, statement: Executable, params: Sequence[Mapping[str, Any]] | Mapping[str, Any] | None = ..., *, execution_options: _OrmKnownExecutionOptions | Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> Result[Any]
infrastructure\evolution\backup.py:370:29: error: Incompatible types in assignment (expression has type "StrategyEvaluationModel", variable has type "StrategyCandidateModel")  [assignment]
infrastructure\evolution\backup.py:375:29: error: Incompatible types in assignment (expression has type "EvolutionContextModel", variable has type "StrategyCandidateModel")  [assignment]
infrastructure\strategies\manipulation_strategies.py:51:33: error: "DefaultTechnicalAnalysisService" has no attribute "calculate_order_book_imbalance"  [attr-defined]
infrastructure\strategies\manipulation_strategies.py:71:16: error: "DefaultTechnicalAnalysisService" has no attribute "detect_volume_spike"  [attr-defined]
infrastructure\strategies\manipulation_strategies.py:95:23: error: Argument 1 of "analyze" is incompatible with supertype "BaseStrategy"; supertype defines the argument type as "DataFrame"  [override]
infrastructure\strategies\manipulation_strategies.py:95:23: note: This violates the Liskov substitution principle
infrastructure\strategies\manipulation_strategies.py:95:23: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\strategies\manipulation_strategies.py:221:37: error: Argument 1 to "analyze" of "ManipulationStrategy" has incompatible type "DataFrame"; expected "dict[str, Any]"  [arg-type]
infrastructure\strategies\manipulation_strategies.py:253:20: error: Incompatible return value type (got "dict[str, object]", expected "Signal | None")  [return-value]
infrastructure\strategies\trend_strategies.py:146:30: error: "MarketStructureResult" has no attribute "__iter__" (not iterable)  [attr-defined]
infrastructure\strategies\trend_strategies.py:150:30: error: "DefaultTechnicalAnalysisService" has no attribute "calculate_liquidity_zones"  [attr-defined]
infrastructure\strategies\trend_strategies.py:261:30: error: "MarketStructureResult" has no attribute "__iter__" (not iterable)  [attr-defined]
infrastructure\strategies\trend_strategies.py:265:30: error: "DefaultTechnicalAnalysisService" has no attribute "calculate_liquidity_zones"  [attr-defined]
infrastructure\strategies\trend_strategies.py:371:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\trend_strategies.py:451:21: error: Dict entry 2 has incompatible type "str": "dict[str, float]"; expected "str": "float"  [dict-item]
infrastructure\strategies\trend_strategies.py:475:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\trend_strategies.py:622:22: error: Name "detect_impulse_candle" is not defined  [name-defined]
infrastructure\strategies\trend_strategies.py:625:20: error: Name "detect_inner_bar" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:15:1: error: Skipping analyzing "deap": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\transformer_predictor.py:17:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\transformer_predictor.py:19:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\transformer_predictor.py:89:9: error: Need type annotation for "momentum_buffer" (hint: "momentum_buffer: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:105:77: error: Incompatible default for argument "learning_rate" (default has type "None", argument has type "float")  [assignment]
infrastructure\ml_services\transformer_predictor.py:105:77: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
infrastructure\ml_services\transformer_predictor.py:105:77: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
infrastructure\ml_services\transformer_predictor.py:142:9: error: Need type annotation for "population" (hint: "population: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:234:25: error: Incompatible types in assignment (expression has type "list[Any]", variable has type "map[Any]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:237:39: error: Value of type "map[Any]" is not indexable  [index]
infrastructure\ml_services\transformer_predictor.py:289:9: error: Need type annotation for "data_buffer" (hint: "data_buffer: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:290:9: error: Need type annotation for "performance_history" (hint: "performance_history: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:296:22: error: Incompatible types in assignment (expression has type "AdaptiveTransformer", variable has type "None")  [assignment]
infrastructure\ml_services\transformer_predictor.py:419:15: error: Need type annotation for "history"  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:427:20: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:438:24: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:476:20: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:492:16: error: "Tensor" not callable  [operator]
infrastructure\ml_services\transformer_predictor.py:515:9: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[ndarray[Any, Any]]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:516:9: error: Incompatible types in assignment (expression has type "ndarray[Any, dtype[Any]]", variable has type "list[Any]")  [assignment]
infrastructure\ml_services\transformer_predictor.py:519:34: error: "list[ndarray[Any, Any]]" has no attribute "reshape"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:519:48: error: "list[ndarray[Any, Any]]" has no attribute "shape"  [attr-defined]
infrastructure\ml_services\transformer_predictor.py:590:63: error: Argument 2 to "PositionalEncoding" has incompatible type "float"; expected "int"  [arg-type]
infrastructure\ml_services\transformer_predictor.py:633:9: error: Need type annotation for "metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:636:9: error: Need type annotation for "models" (hint: "models: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:637:9: error: Need type annotation for "scalers" (hint: "scalers: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:638:9: error: Need type annotation for "metrics" (hint: "metrics: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:641:9: error: Need type annotation for "_prediction_cache" (hint: "_prediction_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:642:9: error: Need type annotation for "_feature_cache" (hint: "_feature_cache: dict[<type>, <type>] = ...")  [var-annotated]
infrastructure\ml_services\transformer_predictor.py:684:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:685:60: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:687:17: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:689:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:690:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:698:36: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:699:31: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:706:33: error: Name "talib" is not defined  [name-defined]
infrastructure\ml_services\transformer_predictor.py:864:68: error: Argument 2 to "_optimize_hyperparameters" of "TransformerPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\ml_services\transformer_predictor.py:905:51: error: Argument 1 to "_calculate_metrics" of "TransformerPredictor" has incompatible type "ExtensionArray | ndarray[Any, Any]"; expected "ndarray[Any, Any]"  [arg-type]
infrastructure\ml_services\transformer_predictor.py:913:58: error: "TransformerConfig" has no attribute "metrics_window"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:31:1: error: Skipping analyzing "ta": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\decision_reasoner.py:39:1: error: Library stubs not installed for "seaborn"  [import-untyped]
infrastructure\ml_services\decision_reasoner.py:39:1: note: Hint: "python3 -m pip install types-seaborn"
infrastructure\ml_services\decision_reasoner.py:41:11: error: Incompatible types in assignment (expression has type "None", variable has type Module)  [assignment]
infrastructure\ml_services\decision_reasoner.py:47:1: error: Cannot find implementation or library stub for module named "shap"  [import-not-found]
infrastructure\ml_services\decision_reasoner.py:48:1: error: Cannot find implementation or library stub for module named "lime"  [import-not-found]
infrastructure\ml_services\decision_reasoner.py:167:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:176:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:193:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:202:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:217:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:226:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:249:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:258:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:272:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:281:20: error: Unexpected keyword argument "timestamp" for "SignalSource"  [call-arg]
infrastructure\ml_services\decision_reasoner.py:300:46: error: "type[ActionType]" has no attribute "BUY"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:300:91: error: "type[ActionType]" has no attribute "SELL"  [attr-defined]
infrastructure\ml_services\decision_reasoner.py:364:44: error: Incompatible types in assignment (expression has type "dict[str, float | str]", target has type "dict[str, list[float]] | dict[str, float] | int | None")  [assignment]
infrastructure\ml_services\decision_reasoner.py:389:34: error: "SignalSource" has no attribute "timestamp"  [attr-defined]
infrastructure\strategies\evolution\evolvable_base_strategy.py:49:23: error: Incompatible types in assignment (expression has type "EvolutionConfig", variable has type "dict[str, Any]")  [assignment]
infrastructure\strategies\evolution\evolvable_base_strategy.py:62:9: error: Need type annotation for "training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\evolution\evolvable_base_strategy.py:66:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\evolution\evolvable_base_strategy.py:125:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\evolution\evolvable_base_strategy.py:216:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
infrastructure\strategies\evolution\evolvable_base_strategy.py:226:17: error: Dict entry 0 has incompatible type "str": "str"; expected "str": "float"  [dict-item]
infrastructure\strategies\evolution\evolvable_base_strategy.py:429:5: error: Signature of "save_state" incompatible with supertype "BaseStrategy"  [override]
infrastructure\strategies\evolution\evolvable_base_strategy.py:429:5: note:      Superclass:
infrastructure\strategies\evolution\evolvable_base_strategy.py:429:5: note:          def save_state(self) -> Any
infrastructure\strategies\evolution\evolvable_base_strategy.py:429:5: note:      Subclass:
infrastructure\strategies\evolution\evolvable_base_strategy.py:429:5: note:          def save_state(self, path: str) -> bool
domain\services\portfolio_analysis.py:18:1: error: Module "domain.exceptions" has no attribute "PortfolioAnalysisError"  [attr-defined]
domain\services\portfolio_analysis.py:88:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\services\portfolio_analysis.py:94:30: error: Argument "portfolio_id" to "PortfolioWeights" has incompatible type "str"; expected "PortfolioId"  [arg-type]
domain\services\portfolio_analysis.py:106:33: error: "Position" has no attribute "symbol"  [attr-defined]
domain\services\portfolio_analysis.py:115:26: error: Argument "portfolio_id" to "PortfolioWeights" has incompatible type "PortfolioId | str"; expected "PortfolioId"  [arg-type]
domain\services\portfolio_analysis.py:139:30: error: Argument "portfolio_id" to "PortfolioMetrics" has incompatible type "str"; expected "PortfolioId"  [arg-type]
domain\services\portfolio_analysis.py:203:32: error: "Portfolio" has no attribute "max_position_size"  [attr-defined]
domain\services\portfolio_analysis.py:204:27: error: "Portfolio" has no attribute "max_position_size"  [attr-defined]
domain\services\portfolio_analysis.py:207:21: error: "Portfolio" has no attribute "positions"  [attr-defined]
domain\services\portfolio_analysis.py:211:90: error: "Portfolio" has no attribute "max_concentration"  [attr-defined]
domain\services\portfolio_analysis.py:212:31: error: "Portfolio" has no attribute "max_concentration"  [attr-defined]
domain\services\ml_predictor.py:86:5: error: Return type "Coroutine[Any, Any, PredictionResult]" of "predict_spread" incompatible with return type "Coroutine[Any, Any, dict[str, float]]" in supertype "IMLPredictor"  [override]
domain\services\ml_predictor.py:116:5: error: Return type "Coroutine[Any, Any, LiquidityPredictionResult]" of "predict_liquidity" incompatible with return type "Coroutine[Any, Any, dict[str, float]]" in supertype "IMLPredictor"  [override]
domain\services\ml_predictor.py:132:47: error: Invalid index type "int | float" for "Tensor"; expected type "SupportsIndex | bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | _NestedSequence[bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | None] | tuple[SupportsIndex | bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | _NestedSequence[bool | int | slice[Any, Any, Any] | EllipsisType | Tensor | None] | None, ...] | None"  [index]
domain\services\ml_predictor.py:137:45: error: Invalid index type "int | float" for "list[str]"; expected type "SupportsIndex"  [index]
domain\services\ml_predictor.py:179:5: error: Return type "Coroutine[Any, Any, MLModelPerformance]" of "get_model_performance" incompatible with return type "Coroutine[Any, Any, dict[str, float]]" in supertype "IMLPredictor"  [override]
domain\services\ml_predictor.py:260:13: error: "None" has no attribute "error"  [attr-defined]
domain\services\ml_predictor.py:310:13: error: "None" has no attribute "error"  [attr-defined]
domain\services\ml_predictor.py:357:13: error: "None" has no attribute "error"  [attr-defined]
domain\services\ml_predictor.py:373:13: error: "None" has no attribute "error"  [attr-defined]
domain\services\ml_predictor.py:383:13: error: "None" has no attribute "error"  [attr-defined]
domain\services\ml_predictor.py:393:13: error: "None" has no attribute "error"  [attr-defined]
domain\protocols\repository_protocol.py:151:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\repository_protocol.py:152:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\protocols\repository_protocol.py:364:6: error: Argument 1 to "asynccontextmanager" has incompatible type "Callable[[RepositoryProtocol[T]], Coroutine[Any, Any, AsyncIterator[TransactionProtocol]]]"; expected "Callable[[RepositoryProtocol[T]], AsyncIterator[Never]]"  [arg-type]
domain\protocols\repository_protocol.py:377:20: error: Function "builtins.callable" is not valid as a type  [valid-type]
domain\protocols\repository_protocol.py:377:20: note: Perhaps you meant "typing.Callable" instead of "callable"?
domain\evolution\strategy_optimizer.py:33:13: error: Need type annotation for "best_params" (hint: "best_params: dict[<type>, <type>] = ...")  [var-annotated]
domain\evolution\strategy_optimizer.py:46:14: error: Incompatible types in assignment (expression has type "type", variable has type Module)  [assignment]
domain\evolution\strategy_optimizer.py:121:40: error: "StrategyCandidate" object is not iterable  [misc]
domain\evolution\strategy_optimizer.py:124:45: error: Cannot determine type of "parent1"  [has-type]
domain\evolution\strategy_optimizer.py:124:54: error: Cannot determine type of "parent2"  [has-type]
domain\evolution\strategy_optimizer.py:151:29: error: Argument 1 to "mean" has incompatible type "list[Decimal]"; expected "_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]] | _NestedSequence[_SupportsArray[dtype[bool_ | integer[Any] | floating[Any]]]] | bool | int | float | _NestedSequence[bool | int | float]"  [arg-type]
domain\evolution\strategy_optimizer.py:344:32: error: Argument "parameters" to "IndicatorConfig" has incompatible type "dict[str, Any]"; expected "IndicatorParameters"  [arg-type]
domain\evolution\strategy_optimizer.py:344:56: error: Argument 1 to "_mutate_parameters" of "StrategyOptimizer" has incompatible type "IndicatorParameters"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_optimizer.py:359:32: error: Argument "parameters" to "FilterConfig" has incompatible type "dict[str, Any]"; expected "FilterParameters"  [arg-type]
domain\evolution\strategy_optimizer.py:359:56: error: Argument 1 to "_mutate_parameters" of "StrategyOptimizer" has incompatible type "FilterParameters"; expected "dict[str, Any]"  [arg-type]
domain\evolution\strategy_optimizer.py:416:46: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
domain\evolution\strategy_optimizer.py:430:46: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
domain\evolution\strategy_optimizer.py:435:39: error: Incompatible types in assignment (expression has type "float", target has type "int")  [assignment]
domain\evolution\strategy_optimizer.py:462:32: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:476:26: error: Incompatible types in assignment (expression has type "FilterParameters", variable has type "IndicatorParameters")  [assignment]
domain\evolution\strategy_optimizer.py:480:32: error: TypedDict key must be a string literal; expected one of ("period", "fast", "slow", "signal", "acceleration", ...)  [literal-required]
domain\evolution\strategy_optimizer.py:486:28: error: Argument "parameters" to "FilterConfig" has incompatible type "IndicatorParameters"; expected "FilterParameters"  [arg-type]
domain\evolution\strategy_optimizer.py:573:28: error: Argument "parameters" to "IndicatorConfig" has incompatible type "dict[str, Any]"; expected "IndicatorParameters"  [arg-type]
domain\evolution\strategy_optimizer.py:596:28: error: Argument "parameters" to "FilterConfig" has incompatible type "dict[str, Any]"; expected "FilterParameters"  [arg-type]
application\types.py:235:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:236:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:237:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:238:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:239:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:260:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:261:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:276:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:299:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:300:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:301:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:302:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:303:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:318:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:319:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:336:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:337:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:355:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:382:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:383:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:403:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:404:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:405:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:427:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:428:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:429:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:430:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:431:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:432:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:527:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:528:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:529:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:549:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:550:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\types.py:572:5: error: Attributes without a default cannot follow attributes with one  [misc]
application\services\risk_assessor.py:61:23: error: "VolumeValue" has no attribute "to_decimal"  [attr-defined]
application\services\risk_assessor.py:61:53: error: Item "Price" of "Price | None" has no attribute "to_decimal"  [union-attr]
application\services\risk_assessor.py:61:53: error: Item "None" of "Price | None" has no attribute "to_decimal"  [union-attr]
application\services\risk_assessor.py:178:24: error: Unsupported left operand type for - ("Never")  [operator]
application\services\risk_assessor.py:258:37: error: "Price" has no attribute "to_decimal"  [attr-defined]
application\services\risk_assessor.py:260:21: error: "Price" has no attribute "to_decimal"  [attr-defined]
application\services\risk_assessor.py:266:29: error: "Price" has no attribute "to_decimal"  [attr-defined]
application\services\position_creator.py:94:29: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\services\position_creator.py:94:29: error: Unexpected keyword argument "base_currency" for "Price"; did you mean "currency"?  [call-arg]
application\services\position_creator.py:95:31: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\services\position_creator.py:95:31: error: Unexpected keyword argument "base_currency" for "Price"; did you mean "currency"?  [call-arg]
application\services\position_creator.py:97:27: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\services\position_creator.py:97:27: error: Unexpected keyword argument "base_currency" for "Price"; did you mean "currency"?  [call-arg]
application\services\position_creator.py:98:29: error: Unexpected keyword argument "amount" for "Price"  [call-arg]
application\services\position_creator.py:98:29: error: Unexpected keyword argument "base_currency" for "Price"; did you mean "currency"?  [call-arg]
infrastructure\external_services\order_manager.py:102:39: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:199:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\external_services\order_manager.py:223:27: error: Generator has incompatible item type "float"; expected "bool"  [misc]
infrastructure\external_services\order_manager.py:223:57: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:242:32: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:243:30: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:248:63: error: "TimestampValue" has no attribute "to_datetime"  [attr-defined]
infrastructure\external_services\order_manager.py:268:32: error: "Timestamp" has no attribute "replace"  [attr-defined]
infrastructure\external_services\order_manager.py:277:31: error: Generator has incompatible item type "float"; expected "bool"  [misc]
infrastructure\external_services\order_manager.py:277:61: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:282:42: error: "TimestampValue" has no attribute "to_datetime"  [attr-defined]
infrastructure\external_services\order_manager.py:291:44: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:292:57: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:334:29: error: Argument 1 to "float" has incompatible type "Volume"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:378:31: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:434:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_account_info" incompatible with return type "Coroutine[Any, Any, Account]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:438:5: error: Return type "Coroutine[Any, Any, Money]" of "get_balance" incompatible with return type "Coroutine[Any, Any, Balance]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:446:5: error: Return type "Coroutine[Any, Any, domain.entities.market.MarketData]" of "get_market_data" incompatible with return type "Coroutine[Any, Any, domain.protocols.exchange_protocol.MarketData]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:450:23: error: Argument "timestamp" to "MarketData" has incompatible type "Timestamp"; expected "TimestampValue"  [arg-type]
infrastructure\external_services\order_manager.py:462:5: error: Return type "Coroutine[Any, Any, list[domain.entities.trading.Trade]]" of "get_trade_history" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trade.Trade]]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:480:26: error: Argument "quantity" to "Order" has incompatible type "Volume"; expected "VolumeValue"  [arg-type]
infrastructure\external_services\order_manager.py:502:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:518:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:537:31: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:538:32: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:539:38: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:540:50: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:541:23: error: Argument "price" to "Order" has incompatible type "PriceValue | None"; expected "Price | None"  [arg-type]
infrastructure\external_services\order_manager.py:541:46: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:541:69: error: Unsupported right operand type for in ("OrderRequest")  [operator]
infrastructure\external_services\order_manager.py:549:66: error: Value of type "OrderRequest" is not indexable  [index]
infrastructure\external_services\order_manager.py:571:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:575:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:582:36: error: Incompatible types in assignment (expression has type "PriceValue", target has type "VolumeValue")  [assignment]
infrastructure\external_services\order_manager.py:595:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:599:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:614:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:618:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:627:32: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:665:36: error: Argument 1 to "float" has incompatible type "Price"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
infrastructure\external_services\order_manager.py:684:23: error: Missing positional argument "order_id" in call to "OrderNotFoundError"  [call-arg]
infrastructure\external_services\order_manager.py:746:24: error: Cannot instantiate abstract class "ProductionOrderManager" with abstract attributes "connect", "connection_status", "disconnect" and "exchange_name"  [abstract]
infrastructure\external_services\order_manager.py:761:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_account_info" incompatible with return type "Coroutine[Any, Any, Account]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:765:5: error: Return type "Coroutine[Any, Any, Money]" of "get_balance" incompatible with return type "Coroutine[Any, Any, Balance]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:773:5: error: Return type "Coroutine[Any, Any, domain.entities.market.MarketData]" of "get_market_data" incompatible with return type "Coroutine[Any, Any, domain.protocols.exchange_protocol.MarketData]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:781:5: error: Return type "Coroutine[Any, Any, list[domain.entities.trading.Trade]]" of "get_trade_history" incompatible with return type "Coroutine[Any, Any, list[domain.entities.trade.Trade]]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\order_manager.py:808:22: error: Argument "side" to "OrderRequest" has incompatible type "domain.entities.order.OrderSide"; expected "domain.types.external_service_types.OrderSide"  [arg-type]
infrastructure\external_services\order_manager.py:809:28: error: Argument "order_type" to "OrderRequest" has incompatible type "domain.entities.order.OrderType"; expected "domain.types.external_service_types.OrderType"  [arg-type]
infrastructure\external_services\order_manager.py:828:22: error: Argument "side" to "OrderRequest" has incompatible type "domain.entities.order.OrderSide"; expected "domain.types.external_service_types.OrderSide"  [arg-type]
infrastructure\external_services\order_manager.py:829:28: error: Argument "order_type" to "OrderRequest" has incompatible type "domain.entities.order.OrderType"; expected "domain.types.external_service_types.OrderType"  [arg-type]
infrastructure\external_services\order_manager.py:833:73: error: Argument 1 to "OrderId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\order_manager.py:845:22: error: Argument "side" to "OrderRequest" has incompatible type "domain.entities.order.OrderSide"; expected "domain.types.external_service_types.OrderSide"  [arg-type]
infrastructure\external_services\order_manager.py:846:28: error: Argument "order_type" to "OrderRequest" has incompatible type "domain.entities.order.OrderType"; expected "domain.types.external_service_types.OrderType"  [arg-type]
infrastructure\external_services\order_manager.py:850:77: error: Argument 1 to "OrderId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\order_manager.py:862:22: error: Argument "side" to "OrderRequest" has incompatible type "domain.entities.order.OrderSide"; expected "domain.types.external_service_types.OrderSide"  [arg-type]
infrastructure\external_services\order_manager.py:863:28: error: Argument "order_type" to "OrderRequest" has incompatible type "domain.entities.order.OrderType"; expected "domain.types.external_service_types.OrderType"  [arg-type]
infrastructure\ml_services\evolvable_decision_reasoner.py:63:48: error: Incompatible types in assignment (expression has type "EvolvableDecisionConfig", base class "DecisionReasoner" defined the type as "dict[str, Any]")  [assignment]
infrastructure\ml_services\evolvable_decision_reasoner.py:75:55: error: Incompatible types in assignment (expression has type "list[dict[str, Any]]", base class "DecisionReasoner" defined the type as "list[AggregatedSignal]")  [assignment]
infrastructure\ml_services\evolvable_decision_reasoner.py:82:5: error: Missing return statement  [return]
infrastructure\ml_services\evolvable_decision_reasoner.py:115:5: error: Missing return statement  [return]
infrastructure\ml_services\evolvable_decision_reasoner.py:389:17: error: Property "confidence" defined in "AggregatedSignal" is read-only  [misc]
infrastructure\ml_services\model_selector.py:8:1: error: Skipping analyzing "catboost": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:9:1: error: Skipping analyzing "joblib": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:15:1: error: Skipping analyzing "prophet": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:16:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:18:1: error: Skipping analyzing "sklearn.model_selection": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:19:1: error: Skipping analyzing "statsmodels.tsa.arima.model": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:20:1: error: Library stubs not installed for "tensorflow.keras.callbacks"  [import-untyped]
infrastructure\ml_services\model_selector.py:20:1: note: Hint: "python3 -m pip install types-tensorflow"
infrastructure\ml_services\model_selector.py:21:1: error: Library stubs not installed for "tensorflow.keras.layers"  [import-untyped]
infrastructure\ml_services\model_selector.py:22:1: error: Library stubs not installed for "tensorflow.keras.models"  [import-untyped]
infrastructure\ml_services\model_selector.py:23:1: error: Library stubs not installed for "tensorflow.keras.optimizers"  [import-untyped]
infrastructure\ml_services\model_selector.py:25:1: error: Skipping analyzing "sklearn.preprocessing": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\ml_services\model_selector.py:557:21: error: Item "dict[Never, Never]" of "DataFrame | dict[Never, Never]" has no attribute "to_dict"  [union-attr]
infrastructure\ml_services\model_selector.py:707:13: error: Need type annotation for "dataset" (hint: "dataset: list[<type>] = ...")  [var-annotated]
infrastructure\ml_services\model_selector.py:717:23: error: Argument 1 to "Series" has incompatible type "list[int]"; expected "Sequence[Never]"  [arg-type]
infrastructure\ml_services\model_selector.py:735:13: error: Attribute "train_metadata" already defined on line 76  [no-redef]
infrastructure\ml_services\model_selector.py:745:13: error: Need type annotation for "dataset" (hint: "dataset: list[<type>] = ...")  [var-annotated]
domain\repositories\base_repository_impl.py:14:1: error: Module "domain.exceptions.base_exceptions" has no attribute "EntityNotFoundError"  [attr-defined]
domain\repositories\base_repository_impl.py:14:1: error: Module "domain.exceptions.base_exceptions" has no attribute "EntitySaveError"  [attr-defined]
domain\repositories\base_repository_impl.py:14:1: error: Module "domain.exceptions.base_exceptions" has no attribute "EntityUpdateError"; maybe "EntityDeleteError"?  [attr-defined]
domain\repositories\base_repository_impl.py:14:1: error: Module "domain.exceptions.base_exceptions" has no attribute "ValidationError"; maybe "EvaluationError"?  [attr-defined]
domain\repositories\base_repository_impl.py:58:37: error: Incompatible types in assignment (expression has type "dict[str, T]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Any]")  [assignment]
domain\repositories\base_repository_impl.py:59:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
domain\repositories\base_repository_impl.py:159:9: error: Need type annotation for "warnings" (hint: "warnings: list[<type>] = ...")  [var-annotated]
domain\repositories\base_repository_impl.py:407:27: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[UUID | str]"  [arg-type]
domain\repositories\base_repository_impl.py:407:27: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\repositories\base_repository_impl.py:407:27: note: Consider using "Sequence" instead, which is covariant
domain\repositories\base_repository_impl.py:436:27: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[UUID | str]"  [arg-type]
domain\repositories\base_repository_impl.py:436:27: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\repositories\base_repository_impl.py:436:27: note: Consider using "Sequence" instead, which is covariant
domain\repositories\base_repository_impl.py:467:27: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[UUID | str]"  [arg-type]
domain\repositories\base_repository_impl.py:467:27: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
domain\repositories\base_repository_impl.py:467:27: note: Consider using "Sequence" instead, which is covariant
infrastructure\strategies\adaptive\ml_signal_processor.py:25:31: error: "Tensor" not callable  [operator]
domain\services\__init__.py:47:1: error: Module "domain.services.technical_indicators" has no attribute "TechnicalIndicatorsService"  [attr-defined]
infrastructure\evolution\migration.py:168:26: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:168:26: note: Possible overload variants:
infrastructure\evolution\migration.py:168:26: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:168:26: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:176:20: error: Incompatible return value type (got "list[dict[Any, Any]]", expected "list[MigrationMetadata]")  [return-value]
infrastructure\evolution\migration.py:212:17: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:212:17: note: Possible overload variants:
infrastructure\evolution\migration.py:212:17: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:212:17: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:258:21: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:258:21: note: Possible overload variants:
infrastructure\evolution\migration.py:258:21: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:258:21: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:272:21: error: No overload variant of "exec" of "Session" matches argument type "TextClause"  [call-overload]
infrastructure\evolution\migration.py:272:21: note: Possible overload variants:
infrastructure\evolution\migration.py:272:21: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:272:21: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:330:17: error: No overload variant of "exec" of "Session" matches argument types "TextClause", "dict[str, object]"  [call-overload]
infrastructure\evolution\migration.py:330:17: note: Possible overload variants:
infrastructure\evolution\migration.py:330:17: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:330:17: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:354:26: error: No overload variant of "exec" of "Session" matches argument types "TextClause", "dict[str, str]"  [call-overload]
infrastructure\evolution\migration.py:354:26: note: Possible overload variants:
infrastructure\evolution\migration.py:354:26: note:     def [_TSelectParam: Any] exec(self, statement: Select[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> TupleResult[_TSelectParam]
infrastructure\evolution\migration.py:354:26: note:     def [_TSelectParam: Any] exec(self, statement: SelectOfScalar[_TSelectParam], *, params: Mapping[str, Any] | Sequence[Mapping[str, Any]] | None = ..., execution_options: Mapping[str, Any] = ..., bind_arguments: dict[str, Any] | None = ..., _parent_execute_state: Any | None = ..., _add_event: Any | None = ...) -> ScalarResult[_TSelectParam]
infrastructure\evolution\migration.py:359:28: error: Incompatible return value type (got "dict[Any, Any]", expected "MigrationMetadata | None")  [return-value]
infrastructure\external_services\risk_analysis_service.py:26:23: error: Unexpected keyword argument "portfolio" for "OrderRequest"; did you mean "portfolio_id"?  [call-arg]
infrastructure\external_services\risk_analysis_service.py:26:23: error: Unexpected keyword argument "historical_returns" for "OrderRequest"  [call-arg]
infrastructure\external_services\account_manager.py:31:18: error: Name "AccountManagerConfig" is not defined  [name-defined]
infrastructure\external_services\account_manager.py:34:25: error: Argument "api_key" to "ExchangeCredentials" has incompatible type "str"; expected "APIKey"  [arg-type]
infrastructure\external_services\account_manager.py:35:28: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\account_manager.py:44:32: error: Name "ProductionAccountManager" is not defined  [name-defined]
infrastructure\external_services\account_manager.py:65:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_account_info" incompatible with return type "Coroutine[Any, Any, Account]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\account_manager.py:72:5: error: Return type "Coroutine[Any, Any, Balance | None]" of "get_balance" incompatible with return type "Coroutine[Any, Any, Balance]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\account_manager.py:72:33: error: Argument 1 of "get_balance" is incompatible with supertype "ExchangeProtocol"; supertype defines the argument type as "Currency"  [override]
infrastructure\external_services\account_manager.py:72:33: note: This violates the Liskov substitution principle
infrastructure\external_services\account_manager.py:72:33: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\external_services\account_manager.py:100:5: error: Signature of "place_order" incompatible with supertype "ExchangeProtocol"  [override]
infrastructure\external_services\account_manager.py:100:5: note:      Superclass:
infrastructure\external_services\account_manager.py:100:5: note:          def place_order(self, symbol: Symbol, side: OrderSide, order_type: OrderType, quantity: Volume, price: Price | None = ..., stop_price: Price | None = ..., portfolio_id: PortfolioId | None = ..., strategy_id: StrategyId | None = ..., signal_id: SignalId | None = ...) -> Coroutine[Any, Any, Order]
infrastructure\external_services\account_manager.py:100:5: note:      Subclass:
infrastructure\external_services\account_manager.py:100:5: note:          def place_order(self, order: Order) -> Coroutine[Any, Any, bool]
infrastructure\external_services\account_manager.py:114:5: error: Signature of "validate_order" incompatible with supertype "ExchangeProtocol"  [override]
infrastructure\external_services\account_manager.py:114:5: note:      Superclass:
infrastructure\external_services\account_manager.py:114:5: note:          def validate_order(self, symbol: Symbol, side: OrderSide, order_type: OrderType, quantity: Volume, price: Price | None = ...) -> Coroutine[Any, Any, bool]
infrastructure\external_services\account_manager.py:114:5: note:      Subclass:
infrastructure\external_services\account_manager.py:114:5: note:          def validate_order(self, order: Order) -> Coroutine[Any, Any, bool]
infrastructure\repositories\risk_repository.py:29:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:30:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:31:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:32:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:33:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:33:39: error: Incompatible types in assignment (expression has type "dict[str, Any]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, RiskProfile]")  [assignment]
infrastructure\repositories\risk_repository.py:34:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\risk_repository.py:34:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
infrastructure\repositories\risk_repository.py:47:5: error: Return type "Coroutine[Any, Any, bool]" of "save_risk_profile" incompatible with return type "Coroutine[Any, Any, RiskProfile]" in supertype "RiskRepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:90:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, RiskProfile]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:112:31: error: Argument 1 of "get_by_id" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\risk_repository.py:112:31: note: This violates the Liskov substitution principle
infrastructure\repositories\risk_repository.py:112:31: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\risk_repository.py:120:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:120:5: note:      Superclass:
infrastructure\repositories\risk_repository.py:120:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[RiskProfile]]
infrastructure\repositories\risk_repository.py:120:5: note:      Subclass:
infrastructure\repositories\risk_repository.py:120:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\risk_repository.py:124:28: error: Argument 1 of "delete" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\risk_repository.py:124:28: note: This violates the Liskov substitution principle
infrastructure\repositories\risk_repository.py:124:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\risk_repository.py:361:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\risk_repository.py:400:5: error: Return type "Coroutine[Any, Any, bool]" of "save_risk_profile" incompatible with return type "Coroutine[Any, Any, RiskProfile]" in supertype "RiskRepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:450:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\risk_repository.py:450:17: note: Left operand is of type "int | None"
infrastructure\repositories\risk_repository.py:452:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\risk_repository.py:452:13: note: Left operand is of type "int | None"
infrastructure\repositories\risk_repository.py:492:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, RiskProfile]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:500:31: error: Argument 1 of "get_by_id" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\risk_repository.py:500:31: note: This violates the Liskov substitution principle
infrastructure\repositories\risk_repository.py:500:31: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\risk_repository.py:504:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\risk_repository.py:504:5: note:      Superclass:
infrastructure\repositories\risk_repository.py:504:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[RiskProfile]]
infrastructure\repositories\risk_repository.py:504:5: note:      Subclass:
infrastructure\repositories\risk_repository.py:504:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\risk_repository.py:520:28: error: Argument 1 of "delete" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\risk_repository.py:520:28: note: This violates the Liskov substitution principle
infrastructure\repositories\risk_repository.py:520:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\risk_repository.py:897:9: error: Module "domain.entities.risk" has no attribute "RiskTolerance"  [attr-defined]
infrastructure\repositories\risk_repository.py:901:16: error: Unexpected keyword argument "description" for "RiskProfile"  [call-arg]
infrastructure\repositories\risk_repository.py:901:16: error: Unexpected keyword argument "risk_tolerance" for "RiskProfile"  [call-arg]
infrastructure\repositories\risk_repository.py:901:16: error: Unexpected keyword argument "max_position_size" for "RiskProfile"  [call-arg]
infrastructure\repositories\risk_repository.py:907:32: error: Argument "max_portfolio_risk" to "RiskProfile" has incompatible type "Money"; expected "Decimal"  [arg-type]
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "id" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "risk_profile_id" for "RiskManager"; did you mean "risk_profile"?  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "name" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "strategy" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "parameters" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "created_at" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "updated_at" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\risk_repository.py:917:16: error: Unexpected keyword argument "metadata" for "RiskManager"  [call-arg]
domain\entities\risk.py:303:5: note: "RiskManager" defined here
infrastructure\repositories\ml_repository.py:29:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:30:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:31:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:32:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:33:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:34:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:35:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:36:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:37:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\ml_repository.py:52:5: error: Return type "Coroutine[Any, Any, bool]" of "save_model" incompatible with return type "Coroutine[Any, Any, Model]" in supertype "MLRepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:96:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, Model]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:106:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:106:5: note:      Superclass:
infrastructure\repositories\ml_repository.py:106:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Model]]
infrastructure\repositories\ml_repository.py:106:5: note:      Subclass:
infrastructure\repositories\ml_repository.py:106:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\ml_repository.py:322:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\ml_repository.py:361:5: error: Return type "Coroutine[Any, Any, bool]" of "save_model" incompatible with return type "Coroutine[Any, Any, Model]" in supertype "MLRepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:415:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\ml_repository.py:415:17: note: Left operand is of type "int | None"
infrastructure\repositories\ml_repository.py:417:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\ml_repository.py:417:13: note: Left operand is of type "int | None"
infrastructure\repositories\ml_repository.py:473:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, Model]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:483:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\ml_repository.py:483:5: note:      Superclass:
infrastructure\repositories\ml_repository.py:483:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Model]]
infrastructure\repositories\ml_repository.py:483:5: note:      Subclass:
infrastructure\repositories\ml_repository.py:483:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\ml_repository.py:877:16: error: Unexpected keyword argument "parameters" for "Model"; did you mean "hyperparameters"?  [call-arg]
infrastructure\repositories\ml_repository.py:877:16: error: Unexpected keyword argument "model_path" for "Model"  [call-arg]
infrastructure\repositories\ml_repository.py:881:26: error: "type[TradingPair]" has no attribute "from_string"  [attr-defined]
infrastructure\repositories\ml_repository.py:883:22: error: Argument "accuracy" to "Model" has incompatible type "float | None"; expected "Decimal"  [arg-type]
infrastructure\repositories\strategy_repository.py:13:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
infrastructure\repositories\strategy_repository.py:35:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:36:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:37:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:38:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:39:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:39:39: error: Incompatible types in assignment (expression has type "dict[str, Any]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Strategy]")  [assignment]
infrastructure\repositories\strategy_repository.py:40:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\strategy_repository.py:40:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
infrastructure\repositories\strategy_repository.py:54:5: error: Return type "Coroutine[Any, Any, bool]" of "save_strategy" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "StrategyRepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:211:5: error: Return type "AsyncIterator[Any]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Strategy]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:244:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:244:5: note:      Superclass:
infrastructure\repositories\strategy_repository.py:244:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Strategy]]
infrastructure\repositories\strategy_repository.py:244:5: note:      Subclass:
infrastructure\repositories\strategy_repository.py:244:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\strategy_repository.py:250:15: error: Missing positional argument "entity_id" in call to "EntityUpdateError"  [call-arg]
infrastructure\repositories\strategy_repository.py:276:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:288:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:318:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:365:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\strategy_repository.py:404:5: error: Return type "Coroutine[Any, Any, bool]" of "save_strategy" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "StrategyRepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:454:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\strategy_repository.py:454:17: note: Left operand is of type "int | None"
infrastructure\repositories\strategy_repository.py:456:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\strategy_repository.py:456:13: note: Left operand is of type "int | None"
infrastructure\repositories\strategy_repository.py:565:5: error: Return type "Coroutine[Any, Any, bool]" of "save" incompatible with return type "Coroutine[Any, Any, Strategy]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:575:5: error: Signature of "get_all" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\strategy_repository.py:575:5: note:      Superclass:
infrastructure\repositories\strategy_repository.py:575:5: note:          def get_all(self, options: QueryOptions | None = ...) -> Coroutine[Any, Any, list[Strategy]]
infrastructure\repositories\strategy_repository.py:575:5: note:      Subclass:
infrastructure\repositories\strategy_repository.py:575:5: note:          def get_all(self) -> Coroutine[Any, Any, list[Any]]
infrastructure\repositories\market_repository.py:71:46: error: Incompatible types in assignment (expression has type "MarketData | None", variable has type "list[MarketData] | None")  [assignment]
infrastructure\repositories\market_repository.py:82:41: error: Argument 2 to "set_cache" of "InMemoryMarketRepository" has incompatible type "list[MarketData]"; expected "MarketData"  [arg-type]
infrastructure\repositories\market_repository.py:145:107: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[MarketId]"; expected "list[UUID | str]"  [arg-type]
infrastructure\repositories\market_repository.py:145:107: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
infrastructure\repositories\market_repository.py:145:107: note: Consider using "Sequence" instead, which is covariant
infrastructure\repositories\market_repository.py:216:5: error: Return type "AsyncIterator[MarketData]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[MarketData]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:216:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\market_repository.py:216:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\market_repository.py:223:5: error: Return type "AsyncIterator[Any]" of "transaction" incompatible with return type "_AsyncGeneratorContextManager[Never, None]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:241:20: error: "AsyncIterator[Any]" has no attribute "__aenter__"; maybe "__aiter__"?  [attr-defined]
infrastructure\repositories\market_repository.py:241:20: error: "AsyncIterator[Any]" has no attribute "__aexit__"; maybe "__anext__" or "__aiter__"?  [attr-defined]
infrastructure\repositories\market_repository.py:254:107: error: Argument "processed_ids" to "BulkOperationResult" has incompatible type "list[MarketId]"; expected "list[UUID | str]"  [arg-type]
infrastructure\repositories\market_repository.py:254:107: note: "list" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
infrastructure\repositories\market_repository.py:254:107: note: Consider using "Sequence" instead, which is covariant
infrastructure\repositories\market_repository.py:309:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\market_repository.py:320:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:330:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\market_repository.py:341:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:382:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\market_repository.py:654:20: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\market_repository.py:659:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\market_repository.py:670:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:679:16: error: Unexpected keyword argument "message" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\market_repository.py:689:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:722:5: error: Return type "AsyncIterator[MarketData]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[MarketData]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\market_repository.py:722:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\market_repository.py:722:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\market_repository.py:745:20: error: Incompatible return value type (got "None", expected "MarketData")  [return-value]
infrastructure\repositories\market_repository.py:750:9: error: Module "domain.types" has no attribute "Timeframe"  [attr-defined]
infrastructure\repositories\market_repository.py:767:20: error: Incompatible return value type (got "None", expected "MarketRegime")  [return-value]
infrastructure\repositories\portfolio_repository.py:183:5: error: Return type "AsyncIterator[Portfolio]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Portfolio]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:183:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\portfolio_repository.py:183:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\portfolio_repository.py:255:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:271:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:301:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\portfolio_repository.py:725:5: error: Return type "AsyncIterator[Portfolio]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Portfolio]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:725:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\portfolio_repository.py:725:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\portfolio_repository.py:877:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "get_performance_metrics" incompatible with return type "Coroutine[Any, Any, PerformanceMetricsDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\portfolio_repository.py:897:5: error: Return type "Coroutine[Any, Any, dict[str, Any]]" of "health_check" incompatible with return type "Coroutine[Any, Any, HealthCheckDict]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\trading\trading_repository.py:24:1: error: Module "domain.value_objects.volume" has no attribute "VolumeValue"  [attr-defined]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "_cache" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "_cache_ttl" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "count" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "find_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "find_one_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "get_by_id" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "get_performance_metrics" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "health_check" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:31:1: error: Definition of "state" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:37:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:38:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:39:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:40:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "_cache" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "_cache_ttl" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "count" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "find_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "find_one_by" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "get_by_id" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "get_performance_metrics" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "health_check" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:443:1: error: Definition of "state" in base class "BaseRepository" is incompatible with definition in base class "RepositoryProtocol"  [misc]
infrastructure\repositories\trading\trading_repository.py:452:25: error: Extra keys ("queries_executed", "cache_hits", "cache_misses", "errors", "last_health_check") for TypedDict "RepositoryMetrics"  [typeddict-unknown-key]
infrastructure\repositories\trading\trading_repository.py:464:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\trading\trading_repository.py:546:35: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:548:31: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:794:35: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:799:31: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1080:26: error: Name "PortfolioId" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1081:25: error: Name "StrategyId" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1082:23: error: Name "SignalId" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1085:26: error: Argument "trading_pair" to "Order" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair"  [arg-type]
infrastructure\repositories\trading\trading_repository.py:1100:22: error: Name "ast" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1109:26: error: Name "PortfolioId" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1111:18: error: Name "PositionSide" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1124:22: error: Name "ast" is not defined  [name-defined]
infrastructure\repositories\trading\trading_repository.py:1141:47: error: TypedDict "RepositoryMetrics" has no key "queries_executed"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1142:41: error: TypedDict "RepositoryMetrics" has no key "cache_hits"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1143:43: error: TypedDict "RepositoryMetrics" has no key "cache_misses"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1144:37: error: TypedDict "RepositoryMetrics" has no key "errors"  [typeddict-item]
infrastructure\repositories\trading\trading_repository.py:1145:48: error: TypedDict "RepositoryMetrics" has no key "last_health_check"  [typeddict-item]
infrastructure\services\enhanced_trading_service.py:62:55: error: Incompatible types in assignment (expression has type "str", variable has type "ExecutionAlgorithm")  [assignment]
infrastructure\services\enhanced_trading_service.py:153:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:188:70: error: Argument 4 to "create_bracket_order" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service.py:188:83: error: Argument 5 to "create_bracket_order" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service.py:188:96: error: Argument 6 to "create_bracket_order" has incompatible type "Any | None"; expected "Decimal"  [arg-type]
infrastructure\services\enhanced_trading_service.py:199:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:258:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:327:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:353:20: error: Missing positional argument "current_positions" in call to "calculate_performance_metrics"  [call-arg]
infrastructure\services\enhanced_trading_service.py:353:50: error: Argument 1 to "calculate_performance_metrics" has incompatible type "list[dict[str, Any]]"; expected "dict[str, Any]"  [arg-type]
infrastructure\services\enhanced_trading_service.py:361:43: error: Name "timedelta" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:386:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
infrastructure\services\enhanced_trading_service.py:403:19: error: Name "EnhancedTradingError" is not defined  [name-defined]
domain\repositories\position_repository.py:186:28: error: Argument 1 of "exists" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
domain\repositories\position_repository.py:186:28: note: This violates the Liskov substitution principle
domain\repositories\position_repository.py:186:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
domain\repositories\position_repository.py:201:5: error: Signature of "count" incompatible with supertype "RepositoryProtocol"  [override]
domain\repositories\position_repository.py:201:5: note:      Superclass:
domain\repositories\position_repository.py:201:5: note:          def count(self, filters: list[QueryFilter] | None = ...) -> Coroutine[Any, Any, int]
domain\repositories\position_repository.py:201:5: note:      Subclass:
domain\repositories\position_repository.py:201:5: note:          def count(self, open_only: bool = ..., trading_pair: TradingPair | None = ...) -> Coroutine[Any, Any, int]
domain\repositories\trading_repository.py:10:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
domain\repositories\trading_repository.py:175:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\trading_repository.py:176:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\trading_repository.py:177:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:79:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:80:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\portfolio_repository.py:83:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\ml_repository.py:61:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\ml_repository.py:62:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\market_repository.py:63:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\repositories\market_repository.py:64:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\trading_service.py:13:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
application\services\trading_service.py:224:26: error: Incompatible types in "await" (actual type "bool", expected type "Awaitable[Any]")  [misc]
application\services\trading_service.py:224:32: error: Too many arguments for "validate_trade" of "RiskManager"  [call-arg]
application\services\trading_service.py:225:17: error: Argument 1 to "validate_trade" of "RiskManager" has incompatible type "UUID"; expected "Money"  [arg-type]
application\services\trading_service.py:225:31: error: Argument 2 to "validate_trade" of "RiskManager" has incompatible type "str"; expected "Money"  [arg-type]
application\services\trading_service.py:232:20: error: Argument "id" to "Order" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:233:30: error: Argument "portfolio_id" to "Order" has incompatible type "UUID"; expected "PortfolioId"  [arg-type]
application\services\trading_service.py:234:30: error: Argument "trading_pair" to "Order" has incompatible type "str"; expected "TradingPair"  [arg-type]
application\services\trading_service.py:235:22: error: Argument "side" to "Order" has incompatible type "domain.entities.trading.OrderSide"; expected "domain.entities.order.OrderSide"  [arg-type]
application\services\trading_service.py:236:28: error: Argument "order_type" to "Order" has incompatible type "domain.entities.trading.OrderType"; expected "domain.entities.order.OrderType"  [arg-type]
application\services\trading_service.py:237:26: error: Argument "quantity" to "Order" has incompatible type "Volume"; expected "VolumeValue"  [arg-type]
application\services\trading_service.py:240:24: error: Argument "status" to "Order" has incompatible type "str"; expected "OrderStatus"  [arg-type]
application\services\trading_service.py:241:28: error: Argument "created_at" to "Order" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
application\services\trading_service.py:242:28: error: Argument "updated_at" to "Order" has incompatible type "datetime"; expected "Timestamp"  [arg-type]
application\services\trading_service.py:258:61: error: Argument 1 to "get_order" of "TradingRepositoryProtocol" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:263:21: error: Unexpected keyword argument "portfolio_id" for "Trade"  [call-arg]
application\services\trading_service.py:263:21: error: Unexpected keyword argument "executed_at" for "Trade"  [call-arg]
application\services\trading_service.py:263:21: error: Unexpected keyword argument "fee" for "Trade"  [call-arg]
application\services\trading_service.py:264:20: error: Argument "id" to "Trade" has incompatible type "UUID"; expected "TradeId"  [arg-type]
application\services\trading_service.py:265:26: error: Argument "order_id" to "Trade" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:268:22: error: Argument "side" to "Trade" has incompatible type "domain.entities.order.OrderSide"; expected "domain.entities.trading.OrderSide"  [arg-type]
application\services\trading_service.py:276:28: error: Incompatible types in assignment (expression has type "str", variable has type "OrderStatus")  [assignment]
application\services\trading_service.py:276:62: error: Unsupported operand types for >= ("Volume" and "VolumeValue")  [operator]
application\services\trading_service.py:277:32: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\trading_service.py:291:61: error: Argument 1 to "get_order" of "TradingRepositoryProtocol" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:298:28: error: Incompatible types in assignment (expression has type "str", variable has type "OrderStatus")  [assignment]
application\services\trading_service.py:299:32: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\trading_service.py:312:26: error: "TradingRepositoryProtocol" has no attribute "get_active_orders"  [attr-defined]
application\services\trading_service.py:325:26: error: "TradingRepositoryProtocol" has no attribute "get_order_history"  [attr-defined]
application\services\trading_service.py:340:26: error: "TradingRepositoryProtocol" has no attribute "get_trade_history"  [attr-defined]
application\services\trading_service.py:349:23: error: Unexpected keyword argument "portfolio_id" for "TradingSession"  [call-arg]
application\services\trading_service.py:349:23: error: Unexpected keyword argument "status" for "TradingSession"  [call-arg]
application\services\trading_service.py:350:20: error: Argument "id" to "TradingSession" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:355:19: error: "TradingRepositoryProtocol" has no attribute "save_session"  [attr-defined]
application\services\trading_service.py:363:29: error: "TradingRepositoryProtocol" has no attribute "get_session"  [attr-defined]
application\services\trading_service.py:369:19: error: "TradingRepositoryProtocol" has no attribute "save_session"  [attr-defined]
application\services\trading_service.py:386:32: error: "Portfolio" has no attribute "total_value"  [attr-defined]
application\services\trading_service.py:398:60: error: Argument 1 to "get_order" of "TradingRepositoryProtocol" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:412:61: error: Argument 1 to "get_order" of "TradingRepositoryProtocol" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:423:34: error: Incompatible types in assignment (expression has type "Volume", variable has type "VolumeValue")  [assignment]
application\services\trading_service.py:427:17: error: "Order" has no attribute "take_profit_price"  [attr-defined]
application\services\trading_service.py:429:32: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\trading_service.py:446:61: error: Argument 1 to "get_order" of "TradingRepositoryProtocol" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:450:21: error: Unexpected keyword argument "portfolio_id" for "Trade"  [call-arg]
application\services\trading_service.py:450:21: error: Unexpected keyword argument "fee" for "Trade"  [call-arg]
application\services\trading_service.py:450:21: error: Unexpected keyword argument "executed_at" for "Trade"  [call-arg]
application\services\trading_service.py:450:21: error: Unexpected keyword argument "metadata" for "Trade"  [call-arg]
application\services\trading_service.py:451:20: error: Argument "id" to "Trade" has incompatible type "UUID"; expected "TradeId"  [arg-type]
application\services\trading_service.py:452:26: error: Argument "order_id" to "Trade" has incompatible type "UUID"; expected "OrderId"  [arg-type]
application\services\trading_service.py:455:22: error: Argument "side" to "Trade" has incompatible type "domain.entities.order.OrderSide"; expected "domain.entities.trading.OrderSide"  [arg-type]
application\services\trading_service.py:472:26: error: "TradingRepositoryProtocol" has no attribute "get_trade"; maybe "get_order"?  [attr-defined]
application\services\trading_service.py:488:24: error: Unexpected keyword argument "status" for "Position"  [call-arg]
application\services\trading_service.py:488:24: error: Unexpected keyword argument "created_at" for "Position"  [call-arg]
application\services\trading_service.py:489:20: error: Argument "id" to "Position" has incompatible type "UUID"; expected "PositionId"  [arg-type]
application\services\trading_service.py:490:24: error: Argument "symbol" to "Position" has incompatible type "str"; expected "Symbol"  [arg-type]
application\services\trading_service.py:491:22: error: Argument "side" to "Position" has incompatible type "str"; expected "PositionSide"  [arg-type]
application\services\trading_service.py:499:26: error: Argument "metadata" to "Position" has incompatible type "dict[str, Any]"; expected "MetadataDict"  [arg-type]
application\services\trading_service.py:502:19: error: "TradingRepositoryProtocol" has no attribute "save_position"  [attr-defined]
application\services\trading_service.py:517:30: error: "TradingRepositoryProtocol" has no attribute "get_position"  [attr-defined]
application\services\trading_service.py:528:19: error: "TradingRepositoryProtocol" has no attribute "save_position"  [attr-defined]
application\services\trading_service.py:544:30: error: "TradingRepositoryProtocol" has no attribute "get_position"  [attr-defined]
application\services\trading_service.py:558:19: error: "TradingRepositoryProtocol" has no attribute "save_position"  [attr-defined]
application\services\trading_service.py:567:26: error: "TradingRepositoryProtocol" has no attribute "get_position"  [attr-defined]
application\services\trading_service.py:576:26: error: "TradingRepositoryProtocol" has no attribute "get_active_positions"  [attr-defined]
application\services\trading_service.py:589:26: error: "TradingRepositoryProtocol" has no attribute "get_position_history"  [attr-defined]
application\services\trading_service.py:626:34: error: Generator has incompatible item type "int"; expected "bool"  [misc]
application\services\trading_service.py:626:59: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:627:33: error: Generator has incompatible item type "int"; expected "bool"  [misc]
application\services\trading_service.py:627:58: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:631:29: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:638:20: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:639:38: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:645:24: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:649:32: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:650:34: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:682:32: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:686:34: error: Generator has incompatible item type "Decimal"; expected "bool"  [misc]
application\services\trading_service.py:722:27: error: "Trade" has no attribute "pnl"  [attr-defined]
application\services\trading_service.py:786:16: error: Incompatible return value type (got "floating[Any]", expected "float")  [return-value]
application\services\trading_service.py:836:52: error: "Position" has no attribute "created_at"  [attr-defined]
application\services\trading_service.py:837:27: error: "Position" has no attribute "status"  [attr-defined]
application\services\trading_service.py:849:71: error: "Position" has no attribute "portfolio_id"  [attr-defined]
application\services\trading_service.py:851:34: error: Generator has incompatible item type "Decimal"; expected "bool"  [misc]
application\services\trading_service.py:852:40: error: Generator has incompatible item type "Decimal"; expected "bool"  [misc]
application\services\risk_service.py:13:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
application\services\risk_service.py:62:71: error: Argument 1 to "get_portfolio" of "PortfolioRepositoryProtocol" has incompatible type "str"; expected "PortfolioId"  [arg-type]
application\services\risk_service.py:137:34: error: "Portfolio" has no attribute "positions"  [attr-defined]
application\services\risk_service.py:171:29: error: "Portfolio" has no attribute "positions"  [attr-defined]
application\services\risk_service.py:199:29: error: "Portfolio" has no attribute "positions"  [attr-defined]
application\services\risk_service.py:219:71: error: Argument 1 to "get_portfolio" of "PortfolioRepositoryProtocol" has incompatible type "str"; expected "PortfolioId"  [arg-type]
application\services\risk_service.py:230:39: error: "Portfolio" has no attribute "positions"  [attr-defined]
application\services\risk_service.py:244:71: error: Argument 1 to "get_portfolio" of "PortfolioRepositoryProtocol" has incompatible type "str"; expected "PortfolioId"  [arg-type]
application\services\risk_service.py:250:29: error: "Portfolio" has no attribute "positions"  [attr-defined]
application\services\risk_service.py:280:30: error: Argument "trading_pair" to "Order" has incompatible type "Symbol"; expected "TradingPair"  [arg-type]
application\services\risk_service.py:283:26: error: Argument "quantity" to "Order" has incompatible type "Decimal"; expected "VolumeValue"  [arg-type]
application\services\risk_service.py:293:13: error: "Position" has no attribute "status"  [attr-defined]
application\services\risk_service.py:293:31: error: "<typing special form>" has no attribute "CLOSED"  [attr-defined]
application\services\notification_service.py:143:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\notification_service.py:248:5: note: "send_notification" of "NotificationService" defined here
application\services\notification_service.py:324:26: error: Unexpected keyword argument "type" for "send_notification" of "NotificationService"  [call-arg]
application\services\notification_service.py:325:29: error: "Trade" has no attribute "portfolio_id"  [attr-defined]
application\services\notification_service.py:382:26: error: Unexpected keyword argument "type" for "send_notification" of "NotificationService"  [call-arg]
application\services\notification_service.py:412:26: error: Unexpected keyword argument "type" for "send_notification" of "NotificationService"  [call-arg]
application\protocols\use_case_protocols.py:13:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
application\protocols\use_case_protocols.py:154:68: error: Name "RiskMetrics" is not defined  [name-defined]
application\protocols\service_protocols.py:13:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
application\protocols\service_protocols.py:240:94: error: Name "CreateOrderRequest" is not defined  [name-defined]
application\protocols\service_protocols.py:265:84: error: Name "CreateOrderRequest" is not defined  [name-defined]
application\prediction\pattern_predictor.py:67:37: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
application\prediction\pattern_predictor.py:327:30: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
application\prediction\pattern_predictor.py:388:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:395:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:399:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:405:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:409:17: error: "Sequence[str]" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:483:17: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:486:17: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:489:17: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:494:17: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:502:21: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:508:21: error: "object" has no attribute "append"  [attr-defined]
application\prediction\pattern_predictor.py:618:21: error: Dict entry 1 has incompatible type "str": "float"; expected "str": "int"  [dict-item]
application\prediction\pattern_predictor.py:624:21: error: Dict entry 2 has incompatible type "str": "float"; expected "str": "int"  [dict-item]
application\monitoring\pattern_observer.py:88:32: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
application\monitoring\pattern_observer.py:99:28: error: "Timestamp" has no attribute "isoformat"  [attr-defined]
application\monitoring\pattern_observer.py:141:26: error: "PatternDetection" has no attribute "pattern_id"  [attr-defined]
application\monitoring\pattern_observer.py:148:24: error: Incompatible return value type (got "None", expected "str")  [return-value]
application\monitoring\pattern_observer.py:176:13: error: "PatternMemory" has no attribute "save_snapshot"  [attr-defined]
application\monitoring\pattern_observer.py:190:20: error: Incompatible return value type (got "None", expected "str")  [return-value]
application\monitoring\pattern_observer.py:417:17: error: Name "np" is not defined  [name-defined]
application\monitoring\pattern_observer.py:439:21: error: "Timestamp" has no attribute "timestamp"  [attr-defined]
application\monitoring\pattern_observer.py:440:23: error: "Timestamp" has no attribute "timestamp"  [attr-defined]
application\monitoring\pattern_observer.py:481:23: error: "PatternMemory" has no attribute "save_outcome"  [attr-defined]
application\monitoring\pattern_observer.py:531:10: error: Name "PatternSnapshot" is not defined  [name-defined]
application\monitoring\pattern_observer.py:571:24: error: "PatternDetection" has no attribute "pattern_id"  [attr-defined]
application\monitoring\pattern_observer.py:591:30: error: Name "np" is not defined  [name-defined]
application\monitoring\pattern_observer.py:617:38: error: Name "np" is not defined  [name-defined]
application\monitoring\pattern_observer.py:620:34: error: Name "np" is not defined  [name-defined]
infrastructure\external_services\exchanges\factory.py:30:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
infrastructure\external_services\exchanges\factory.py:51:21: error: Argument "api_key" to "ExchangeCredentials" has incompatible type "str"; expected "APIKey"  [arg-type]
infrastructure\external_services\exchanges\factory.py:52:24: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\exchanges\factory.py:60:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
infrastructure\external_services\exchanges\factory.py:76:21: error: Argument "api_key" to "ExchangeCredentials" has incompatible type "str"; expected "APIKey"  [arg-type]
infrastructure\external_services\exchanges\factory.py:77:24: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\exchanges\factory.py:85:27: error: Argument "exchange_name" to "ExchangeServiceConfig" has incompatible type "str"; expected "ExchangeName"  [arg-type]
domain\strategies\strategy_factory.py:91:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:92:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:95:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:97:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
domain\strategies\strategy_factory.py:324:28: error: Name "RiskLevel" is not defined  [name-defined]
domain\strategies\strategy_factory.py:325:38: error: Name "ConfidenceLevel" is not defined  [name-defined]
domain\strategies\strategy_factory.py:514:21: error: "StrategyConfig" has no attribute "name"  [attr-defined]
domain\strategies\strategy_factory.py:515:30: error: "StrategyConfig" has no attribute "category"  [attr-defined]
domain\strategies\strategy_factory.py:516:53: error: "StrategyConfig" has no attribute "trading_pairs"  [attr-defined]
domain\strategies\strategy_factory.py:517:27: error: "StrategyConfig" has no attribute "parameters"  [attr-defined]
infrastructure\repositories\position_repository.py:12:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\position_repository.py:41:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:42:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:43:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:44:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:45:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:46:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:46:39: error: Incompatible types in assignment (expression has type "dict[str, Any]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, Any]")  [assignment]
infrastructure\repositories\position_repository.py:47:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
infrastructure\repositories\position_repository.py:47:48: error: Incompatible types in assignment (expression has type "dict[str, datetime]", base class "RepositoryProtocol" defined the type as "dict[UUID | str, datetime]")  [assignment]
infrastructure\repositories\position_repository.py:63:5: error: Return type "Coroutine[Any, Any, Position]" of "save" incompatible with return type "Coroutine[Any, Any, bool]" in supertype "PositionRepository"  [override]
infrastructure\repositories\position_repository.py:69:9: error: "InMemoryPositionRepository" has no attribute "_update_position_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:73:9: error: "InMemoryPositionRepository" has no attribute "_update_position_metrics"  [attr-defined]
infrastructure\repositories\position_repository.py:138:19: error: "InMemoryPositionRepository" has no attribute "_analyze_position_risk"  [attr-defined]
infrastructure\repositories\position_repository.py:158:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:160:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:190:75: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:202:19: error: Missing positional arguments "entity_type", "entity_id" in call to "EntityNotFoundError"  [call-arg]
infrastructure\repositories\position_repository.py:206:9: error: "InMemoryPositionRepository" has no attribute "_remove_from_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:210:9: error: "InMemoryPositionRepository" has no attribute "_update_position_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:228:13: error: "InMemoryPositionRepository" has no attribute "_remove_from_indexes"  [attr-defined]
infrastructure\repositories\position_repository.py:233:13: error: "InMemoryPositionRepository" has no attribute "_update_position_metrics"  [attr-defined]
infrastructure\repositories\position_repository.py:241:28: error: Argument 1 of "exists" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\position_repository.py:241:28: note: This violates the Liskov substitution principle
infrastructure\repositories\position_repository.py:241:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\position_repository.py:249:5: error: Signature of "count" incompatible with supertype "RepositoryProtocol"  [override]
infrastructure\repositories\position_repository.py:249:5: note:      Superclass:
infrastructure\repositories\position_repository.py:249:5: note:          def count(self, filters: list[QueryFilter] | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:249:5: note:      Subclass:
infrastructure\repositories\position_repository.py:249:5: note:          def count(self, open_only: bool = ..., trading_pair: TradingPair | None = ...) -> Coroutine[Any, Any, int]
infrastructure\repositories\position_repository.py:275:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:277:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:291:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:293:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:313:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:315:50: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:330:30: error: "Position" has no attribute "quantity"  [attr-defined]
infrastructure\repositories\position_repository.py:334:67: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
infrastructure\repositories\position_repository.py:341:76: error: "Position" has no attribute "symbol"  [attr-defined]
infrastructure\repositories\position_repository.py:394:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:394:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:397:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:397:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:398:43: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
infrastructure\repositories\position_repository.py:409:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:409:17: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:411:28: error: Unexpected keyword argument "quantity" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:411:28: error: Unexpected keyword argument "entry_time" for "Position"; did you mean "entry_price"?  [call-arg]
infrastructure\repositories\position_repository.py:411:28: error: Unexpected keyword argument "exit_time" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:411:28: error: Unexpected keyword argument "is_open" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:411:28: error: Unexpected keyword argument "is_profitable" for "Position"  [call-arg]
infrastructure\repositories\position_repository.py:426:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\position_repository.py:426:13: note: Left operand is of type "int | None"
infrastructure\repositories\position_repository.py:427:43: error: Incompatible types in assignment (expression has type "str", target has type "int | None")  [assignment]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:54:5: error: Return type "StrategyAnalysis" of "analyze" incompatible with return type "dict[str, Any]" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:115:5: error: Return type "domain.types.strategy_types.Signal | None" of "generate_signal" incompatible with return type "infrastructure.strategies.base_strategy.Signal | None" in supertype "BaseStrategy"  [override]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:138:54: error: Argument 1 to "_generate_base_signal" of "AdaptiveStrategyGenerator" has incompatible type "Callable[..., Any]"; expected "str"  [arg-type]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:157:9: error: Need type annotation for "signals" (hint: "signals: list[<type>] = ...")  [var-annotated]
infrastructure\strategies\adaptive\adaptive_strategy_generator.py:165:54: error: Argument 1 to "_generate_base_signal" of "AdaptiveStrategyGenerator" has incompatible type "Callable[..., Any]"; expected "str"  [arg-type]
application\use_cases\manage_trading_pairs.py:203:30: error: Argument "trading_pair" to "CreateTradingPairResponse" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:241:30: error: Argument "trading_pair" to "UpdateTradingPairResponse" has incompatible type "domain.entities.trading_pair.TradingPair"; expected "domain.types.TradingPair | None"  [arg-type]
application\use_cases\manage_trading_pairs.py:280:51: error: Argument 1 to "append" of "list" has incompatible type "tuple[TradingPair, None]"; expected "tuple[TradingPair, TradingPairMetrics]"  [arg-type]
application\use_cases\manage_trading_pairs.py:283:47: error: Argument 1 to "append" of "list" has incompatible type "tuple[TradingPair, None]"; expected "tuple[TradingPair, TradingPairMetrics]"  [arg-type]
application\use_cases\manage_trading_pairs.py:286:31: error: Argument "trading_pairs" to "GetTradingPairsResponse" has incompatible type "list[domain.entities.trading_pair.TradingPair]"; expected "list[domain.types.TradingPair]"  [arg-type]
application\use_cases\manage_trading_pairs.py:420:32: error: Incompatible types in assignment (expression has type "MarketData", variable has type "list[MarketData]")  [assignment]
application\use_cases\manage_trading_pairs.py:422:19: error: "list[MarketData]" has no attribute "bid"  [attr-defined]
application\use_cases\manage_trading_pairs.py:423:19: error: "list[MarketData]" has no attribute "ask"  [attr-defined]
application\use_cases\manage_risk.py:278:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:337:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:340:29: error: Missing positional argument "portfolio_id" in call to "Position"  [call-arg]
application\use_cases\manage_risk.py:341:20: error: Argument "id" to "Position" has incompatible type "OrderId"; expected "PositionId"  [arg-type]
application\use_cases\manage_risk.py:342:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
application\use_cases\manage_risk.py:343:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
application\use_cases\manage_risk.py:344:24: error: Argument "volume" to "Position" has incompatible type "VolumeValue"; expected "Volume"  [arg-type]
application\use_cases\manage_risk.py:345:29: error: Argument "entry_price" to "Position" has incompatible type "Price | None"; expected "Price"  [arg-type]
application\use_cases\manage_risk.py:346:31: error: Argument "current_price" to "Position" has incompatible type "Price | None"; expected "Price"  [arg-type]
application\use_cases\manage_risk.py:347:28: error: Argument "created_at" to "Position" has incompatible type "pandas._libs.tslibs.timestamps.Timestamp"; expected "domain.value_objects.timestamp.Timestamp"  [arg-type]
application\use_cases\manage_risk.py:348:28: error: Argument "updated_at" to "Position" has incompatible type "pandas._libs.tslibs.timestamps.Timestamp"; expected "domain.value_objects.timestamp.Timestamp"  [arg-type]
application\use_cases\manage_risk.py:445:31: error: "PositionRepository" has no attribute "get_by_portfolio_id"  [attr-defined]
application\use_cases\manage_risk.py:574:16: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:575:47: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:578:58: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:584:41: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\use_cases\manage_risk.py:627:20: error: Incompatible return value type (got "dict[Symbol, list[float]]", expected "dict[str, list[float]]")  [return-value]
application\use_cases\manage_risk.py:627:20: note: Perhaps you need a type annotation for "returns_data"? Suggestion: "dict[str, list[float]]"
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "str")  [operator]
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "bytes")  [operator]
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "date")  [operator]
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "timedelta")  [operator]
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "datetime64")  [operator]
application\use_cases\manage_risk.py:836:30: error: Unsupported operand types for / ("float" and "timedelta64")  [operator]
application\use_cases\manage_risk.py:836:30: note: Right operand is of type "str | bytes | date | timedelta | datetime64 | <7 more items>"
application\use_cases\manage_risk.py:836:30: error: Argument 1 to "float" has incompatible type "float | Any | complex | floating[Any] | complexfloating[Any, Any]"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
application\use_cases\manage_risk.py:836:63: error: Unsupported operand types for < ("int" and "complex")  [operator]
application\use_cases\manage_risk.py:836:63: note: Left operand is of type "str | bytes | date | timedelta | datetime64 | <7 more items>"
application\use_cases\manage_risk.py:836:81: error: Unsupported operand types for > ("str" and "int")  [operator]
application\use_cases\manage_risk.py:836:81: error: Unsupported operand types for > ("bytes" and "int")  [operator]
application\use_cases\manage_risk.py:836:81: error: Unsupported operand types for > ("date" and "int")  [operator]
application\use_cases\manage_risk.py:836:81: error: Unsupported operand types for > ("timedelta" and "int")  [operator]
application\use_cases\manage_risk.py:939:16: error: "dict[str, float | Decimal | str]" has no attribute "var_95"  [attr-defined]
application\use_cases\manage_risk.py:940:31: error: "dict[str, float | Decimal | str]" has no attribute "var_95"  [attr-defined]
application\use_cases\manage_risk.py:942:20: error: "dict[str, float | Decimal | str]" has no attribute "max_drawdown"  [attr-defined]
application\use_cases\manage_risk.py:943:31: error: "dict[str, float | Decimal | str]" has no attribute "max_drawdown"  [attr-defined]
application\use_cases\manage_positions.py:22:1: error: Module "domain.types" has no attribute "PositionStatus"  [attr-defined]
application\use_cases\manage_positions.py:22:1: error: Module "domain.types" has no attribute "OrderSide"  [attr-defined]
application\use_cases\manage_positions.py:26:1: error: Module "application.types" has no attribute "PositionManagementUseCase"  [attr-defined]
application\use_cases\manage_positions.py:68:20: error: Missing positional argument "item" in call to "PositionId"  [call-arg]
application\use_cases\manage_positions.py:70:30: error: Argument "trading_pair" to "Position" has incompatible type "domain.types.TradingPair"; expected "domain.entities.trading_pair.TradingPair"  [arg-type]
application\use_cases\manage_positions.py:71:22: error: Argument "side" to "Position" has incompatible type "OrderSide"; expected "PositionSide"  [arg-type]
application\use_cases\manage_positions.py:78:19: error: "PositionRepository" has no attribute "create"  [attr-defined]
application\use_cases\manage_positions.py:116:17: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:120:44: error: Incompatible types in assignment (expression has type "Price", target has type "Volume")  [assignment]
application\use_cases\manage_positions.py:125:25: error: Argument "changes" to "UpdatePositionResponse" has incompatible type "dict[str, Volume]"; expected "dict[str, str | float | int | bool]"  [arg-type]
application\use_cases\manage_positions.py:158:16: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:163:66: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:165:28: error: "Position" has no attribute "calculate_unrealized_pnl"; maybe "_calculate_unrealized_pnl"?  [attr-defined]
application\use_cases\manage_positions.py:200:16: error: "GetPositionsRequest" has no attribute "symbol"  [attr-defined]
application\use_cases\manage_positions.py:201:85: error: "GetPositionsRequest" has no attribute "symbol"  [attr-defined]
application\use_cases\manage_positions.py:221:20: error: Unexpected keyword argument "total_value" for "GetPositionsResponse"  [call-arg]
application\use_cases\manage_positions.py:283:30: error: "Position" has no attribute "symbol"  [attr-defined]
application\use_cases\manage_positions.py:284:22: error: Argument "side" to "PositionMetrics" has incompatible type "PositionSide"; expected "OrderSide"  [arg-type]
application\use_cases\manage_positions.py:285:24: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:286:29: error: Argument "entry_price" to "PositionMetrics" has incompatible type "Price"; expected "PriceValue"  [arg-type]
application\use_cases\manage_positions.py:287:31: error: Argument "current_price" to "PositionMetrics" has incompatible type "Price"; expected "PriceValue | None"  [arg-type]
application\use_cases\manage_positions.py:290:27: error: Unsupported operand types for + ("Money" and "None")  [operator]
application\use_cases\manage_positions.py:290:27: error: Unsupported left operand type for + ("None")  [operator]
application\use_cases\manage_positions.py:290:27: note: Both left and right operands are unions
application\use_cases\manage_positions.py:292:32: error: "Position" has no attribute "get_market_value"  [attr-defined]
application\use_cases\manage_positions.py:293:25: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:294:28: error: "Position" has no attribute "entry_time"; maybe "entry_price"?  [attr-defined]
application\use_cases\manage_positions.py:295:28: error: Argument "updated_at" to "PositionMetrics" has incompatible type "Timestamp"; expected "TimestampValue"  [arg-type]
application\use_cases\manage_positions.py:317:24: error: Unexpected keyword argument "symbol" for "Position"  [call-arg]
application\use_cases\manage_positions.py:317:24: error: Unexpected keyword argument "quantity" for "Position"  [call-arg]
application\use_cases\manage_positions.py:317:24: error: Unexpected keyword argument "entry_time" for "Position"; did you mean "entry_price"?  [call-arg]
application\use_cases\manage_positions.py:348:30: error: Missing positional argument "symbol" in call to "get_by_symbol" of "PositionRepository"  [call-arg]
application\use_cases\manage_positions.py:349:17: error: Argument 1 to "get_by_symbol" of "PositionRepository" has incompatible type "TradingPair"; expected "UUID"  [arg-type]
application\use_cases\manage_positions.py:360:32: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:362:61: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:365:17: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:369:20: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:370:21: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_positions.py:371:24: error: "Position" has no attribute "quantity"  [attr-defined]
application\use_cases\manage_orders.py:30:37: error: Name "OrderManagementUseCase" is not defined  [name-defined]
application\use_cases\manage_orders.py:73:26: error: Argument "quantity" to "Order" has incompatible type "Volume"; expected "VolumeValue"  [arg-type]
application\use_cases\manage_orders.py:74:29: error: Argument 1 to "Price" has incompatible type "Price"; expected "Decimal"  [arg-type]
application\use_cases\manage_orders.py:91:21: error: Argument 1 to "get_by_trading_pair" of "PositionRepository" has incompatible type "PortfolioId"; expected "TradingPair"  [arg-type]
application\use_cases\manage_orders.py:91:43: error: Argument 2 to "get_by_trading_pair" of "PositionRepository" has incompatible type "TradingPair"; expected "bool"  [arg-type]
application\use_cases\manage_orders.py:93:36: error: "list[Position]" has no attribute "volume"  [attr-defined]
application\use_cases\manage_orders.py:94:37: error: "TradingPair" has no attribute "symbol"  [attr-defined]
application\use_cases\manage_orders.py:156:35: error: Argument "cancellation_time" to "CancelOrderResponse" has incompatible type "Timestamp"; expected "TimestampValue | None"  [arg-type]
application\use_cases\manage_orders.py:273:17: error: "Order" has no attribute "filled_volume"; maybe "filled_value"?  [attr-defined]
application\use_cases\manage_orders.py:276:20: error: "VolumeValue" has no attribute "amount"  [attr-defined]
application\use_cases\manage_orders.py:276:44: error: "Order" has no attribute "volume"  [attr-defined]
application\use_cases\manage_orders.py:278:22: error: "VolumeValue" has no attribute "amount"  [attr-defined]
application\services\technical_analysis_service.py:17:1: error: Name "TechnicalAnalysisService" already defined (possibly by an import)  [no-redef]
application\services\technical_analysis_service.py:67:42: error: "TechnicalIndicator" has no attribute "values"; maybe "value"?  [attr-defined]
application\services\portfolio_service.py:57:66: error: Argument 1 to "get_portfolio" of "PortfolioRepository" has incompatible type "UUID"; expected "EntityId"  [arg-type]
application\services\ml_service.py:61:55: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\ml_service.py:154:51: error: Argument 1 to "delete_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\ml_service.py:174:1: error: Skipping analyzing "sklearn.ensemble": module is installed, but missing library stubs or py.typed marker  [import-untyped]
application\services\ml_service.py:175:1: error: Skipping analyzing "sklearn.metrics": module is installed, but missing library stubs or py.typed marker  [import-untyped]
application\services\ml_service.py:411:70: error: Argument 1 to "get_predictions_by_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\market_data_service.py:20:9: error: Need type annotation for "_cache" (hint: "_cache: dict[<type>, <type>] = ...")  [var-annotated]
application\services\market_data_service.py:155:38: error: Function "builtins.callable" is not valid as a type  [valid-type]
application\services\market_data_service.py:155:38: note: Perhaps you meant "typing.Callable" instead of "callable"?
application\services\implementations\trading_service_impl.py:61:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\trading_service_impl.py:104:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:111:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:137:29: error: "TradingRepository" has no attribute "cancel_order"  [attr-defined]
application\services\implementations\trading_service_impl.py:174:61: error: Argument 1 to "get_order" of "TradingRepository" has incompatible type "OrderId"; expected "EntityId"  [arg-type]
application\services\implementations\trading_service_impl.py:200:55: error: Argument 1 to "_is_balance_cache_expired" of "TradingServiceImpl" has incompatible type "Money"; expected "dict[str, Money]"  [arg-type]
application\services\implementations\trading_service_impl.py:201:28: error: Incompatible return value type (got "Money", expected "dict[str, Money]")  [return-value]
application\services\implementations\trading_service_impl.py:204:29: error: "TradingRepository" has no attribute "get_account_balance"  [attr-defined]
application\services\implementations\trading_service_impl.py:227:28: error: "TradingRepository" has no attribute "get_trade_history"  [attr-defined]
application\services\implementations\trading_service_impl.py:252:28: error: "TradingRepository" has no attribute "get_open_orders"  [attr-defined]
application\services\implementations\trading_service_impl.py:306:55: error: Unsupported operand types for * ("VolumeAmount" and "float")  [operator]
application\services\implementations\trading_service_impl.py:337:29: error: "TradingRepository" has no attribute "execute_order"; maybe "delete_order"?  [attr-defined]
application\services\implementations\trading_service_impl.py:342:36: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\implementations\trading_service_impl.py:348:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:349:17: error: Unsupported operand types for + ("object" and "VolumeAmount")  [operator]
application\services\implementations\trading_service_impl.py:356:22: error: Unsupported operand types for * ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:356:37: error: Unsupported operand types for - ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:356:75: error: Unsupported operand types for / ("float" and "object")  [operator]
application\services\implementations\trading_service_impl.py:362:23: error: "SignalService" has no attribute "process_order_execution"  [attr-defined]
application\services\implementations\trading_service_impl.py:366:32: error: "type[OrderStatus]" has no attribute "FAILED"  [attr-defined]
application\services\implementations\trading_service_impl.py:367:36: error: Incompatible types in assignment (expression has type "datetime", variable has type "Timestamp")  [assignment]
application\services\implementations\trading_service_impl.py:373:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:379:13: error: Unsupported operand types for + ("object" and "int")  [operator]
application\services\implementations\trading_service_impl.py:383:22: error: No overload variant of "__sub__" of "datetime" matches argument type "Timestamp"  [operator]
application\services\implementations\trading_service_impl.py:383:22: note: Possible overload variants:
application\services\implementations\trading_service_impl.py:383:22: note:     def __sub__(self, datetime, /) -> timedelta
application\services\implementations\trading_service_impl.py:383:22: note:     def __sub__(self, timedelta, /) -> datetime
application\services\implementations\trading_service_impl.py:403:17: error: Unsupported left operand type for / ("object")  [operator]
application\services\implementations\trading_service_impl.py:404:20: error: Unsupported operand types for < ("int" and "object")  [operator]
application\services\implementations\trading_service_impl.py:406:35: error: Argument 1 to "float" has incompatible type "object"; expected "str | Buffer | SupportsFloat | SupportsIndex"  [arg-type]
application\services\implementations\risk_service_impl.py:19:1: error: Cannot find implementation or library stub for module named "domain.repositories.risk_repository"  [import-not-found]
application\services\implementations\risk_service_impl.py:39:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\risk_service_impl.py:65:39: error: Incompatible types in assignment (expression has type "domain.entities.risk.RiskMetrics", target has type "application.types.RiskMetrics")  [assignment]
application\services\implementations\risk_service_impl.py:66:16: error: Incompatible return value type (got "domain.entities.risk.RiskMetrics", expected "application.types.RiskMetrics")  [return-value]
application\services\implementations\risk_service_impl.py:72:90: error: "RiskMetrics" has no attribute "portfolio_var_99"; maybe "portfolio_var_95", "portfolio_cvar_95", or "portfolio_value"?  [attr-defined]
application\services\implementations\risk_service_impl.py:91:64: error: Argument 1 to "validate_risk_limits" of "RiskAnalysisService" has incompatible type "application.types.RiskMetrics"; expected "domain.entities.risk.RiskMetrics"  [arg-type]
application\services\implementations\risk_service_impl.py:91:78: error: Argument 2 to "validate_risk_limits" of "RiskAnalysisService" has incompatible type "dict[str, Any]"; expected "RiskLimits"  [arg-type]
application\services\implementations\risk_service_impl.py:96:16: error: "RiskAnalysisService" has no attribute "get_risk_alerts"  [attr-defined]
application\services\implementations\risk_service_impl.py:100:39: error: "RiskMetrics" has no attribute "last_updated"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:20:1: error: Cannot find implementation or library stub for module named "domain.services.portfolio_optimizer"  [import-not-found]
application\services\implementations\portfolio_service_impl.py:61:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\portfolio_service_impl.py:92:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:164:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:202:31: error: "PortfolioRepository" has no attribute "get_portfolio_positions"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:205:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:219:23: error: Unexpected keyword argument "portfolio_id" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:219:23: error: Unexpected keyword argument "position_count" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:219:23: error: Unexpected keyword argument "volatility" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:219:23: error: Unexpected keyword argument "last_updated" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:219:23: error: Unexpected keyword argument "metadata" for "PortfolioMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:230:43: error: "Portfolio" has no attribute "strategies"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:263:29: error: "PortfolioRepository" has no attribute "get_portfolio_balance"; maybe "get_portfolio" or "get_portfolio_by_account"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:286:29: error: "PortfolioRepository" has no attribute "update_portfolio_balance"; maybe "update_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:323:37: error: "PortfolioRepository" has no attribute "get_portfolio_history"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:327:24: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:327:24: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:327:24: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:330:34: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:338:31: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:372:16: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:374:37: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:375:42: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:376:51: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:379:37: error: "Portfolio" has no attribute "risk_limits"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:382:57: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:384:39: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:388:33: error: "CreateOrderRequest" has no attribute "symbol"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:392:35: error: "CreateOrderRequest" has no attribute "amount"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:419:71: error: Argument 1 to "get_portfolio" of "PortfolioRepository" has incompatible type "PortfolioId"; expected "EntityId"  [arg-type]
application\services\implementations\portfolio_service_impl.py:422:52: error: Incompatible types in assignment (expression has type "domain.entities.portfolio_fixed.Portfolio", target has type "domain.entities.portfolio.Portfolio")  [assignment]
application\services\implementations\portfolio_service_impl.py:424:20: error: Incompatible return value type (got "domain.entities.portfolio_fixed.Portfolio | None", expected "domain.entities.portfolio.Portfolio | None")  [return-value]
application\services\implementations\portfolio_service_impl.py:477:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:492:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:507:40: error: "PortfolioRepository" has no attribute "get_portfolio_returns"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:522:24: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:522:24: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:522:24: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:523:46: error: Argument 1 to "PortfolioId" has incompatible type "str"; expected "UUID"  [arg-type]
application\services\implementations\portfolio_service_impl.py:525:34: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:533:31: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:574:20: error: Unexpected keyword argument "period" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:574:20: error: Unexpected keyword argument "daily_return" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:574:20: error: Unexpected keyword argument "total_trades" for "PerformanceMetrics"  [call-arg]
application\services\implementations\portfolio_service_impl.py:575:42: error: Argument 1 to "PortfolioId" has incompatible type "str"; expected "UUID"  [arg-type]
application\services\implementations\portfolio_service_impl.py:577:30: error: Argument "total_return" to "PerformanceMetrics" has incompatible type "Any | Decimal"; expected "Percentage"  [arg-type]
application\services\implementations\portfolio_service_impl.py:585:27: error: Argument "timestamp" to "PerformanceMetrics" has incompatible type "datetime"; expected "TimestampValue"  [arg-type]
application\services\implementations\portfolio_service_impl.py:595:32: error: "PortfolioRepository" has no attribute "get_all_portfolios"; maybe "get_portfolio" or "get_all_positions"?  [attr-defined]
application\services\implementations\portfolio_service_impl.py:603:22: error: No overload variant of "__sub__" of "datetime" matches argument type "Timestamp"  [operator]
application\services\implementations\portfolio_service_impl.py:603:22: note: Possible overload variants:
application\services\implementations\portfolio_service_impl.py:603:22: note:     def __sub__(self, datetime, /) -> timedelta
application\services\implementations\portfolio_service_impl.py:603:22: note:     def __sub__(self, timedelta, /) -> datetime
application\services\implementations\portfolio_service_impl.py:608:39: error: "PortfolioMetrics" has no attribute "last_updated"  [attr-defined]
application\services\implementations\portfolio_service_impl.py:638:36: error: "PortfolioRepository" has no attribute "get_active_portfolios"; maybe "get_portfolio"?  [attr-defined]
application\services\implementations\ml_service_impl.py:49:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\ml_service_impl.py:97:35: error: "MLPredictor" has no attribute "predict"  [attr-defined]
application\services\implementations\ml_service_impl.py:109:26: error: Argument "metadata" to "MLPrediction" has incompatible type "dict[str, Any]"; expected "MetadataDict"  [arg-type]
application\services\implementations\ml_service_impl.py:149:34: error: "MLPredictor" has no attribute "analyze_sentiment"  [attr-defined]
application\services\implementations\ml_service_impl.py:201:26: error: "MLPredictor" has no attribute "detect_patterns"  [attr-defined]
application\services\implementations\ml_service_impl.py:214:26: error: Argument "metadata" to "PatternDetection" has incompatible type "dict[str, Any]"; expected "MetadataDict"  [arg-type]
application\services\implementations\ml_service_impl.py:241:30: error: "MLPredictor" has no attribute "calculate_risk_metrics"  [attr-defined]
application\services\implementations\ml_service_impl.py:269:56: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\implementations\ml_service_impl.py:275:37: error: "MLPredictor" has no attribute "train_model"; maybe "train_models"?  [attr-defined]
application\services\implementations\ml_service_impl.py:279:34: error: Unsupported operand types for + ("str" and "int")  [operator]
application\services\implementations\ml_service_impl.py:280:17: error: "Model" has no attribute "last_trained"  [attr-defined]
application\services\implementations\ml_service_impl.py:281:17: error: "Model" has no attribute "training_metrics"  [attr-defined]
application\services\implementations\ml_service_impl.py:283:23: error: "MLRepository" has no attribute "update_model"  [attr-defined]
application\services\implementations\ml_service_impl.py:310:56: error: Argument 1 to "get_model" of "MLRepository" has incompatible type "str"; expected "EntityId"  [arg-type]
application\services\implementations\ml_service_impl.py:315:39: error: "MLPredictor" has no attribute "evaluate_model"  [attr-defined]
application\services\implementations\ml_service_impl.py:349:37: error: "Model" has no attribute "model_id"  [attr-defined]
application\services\implementations\ml_service_impl.py:350:34: error: "Model" has no attribute "model_id"  [attr-defined]
application\services\implementations\ml_service_impl.py:415:39: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:56:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
application\services\implementations\market_service_impl.py:92:29: error: Missing positional argument "timeframe" in call to "get_market_data" of "MarketRepository"  [call-arg]
application\services\implementations\market_service_impl.py:95:51: error: Incompatible types in assignment (expression has type "list[MarketData]", target has type "MarketData")  [assignment]
application\services\implementations\market_service_impl.py:98:16: error: Incompatible return value type (got "list[MarketData]", expected "MarketData | None")  [return-value]
application\services\implementations\market_service_impl.py:123:33: error: "MarketRepository" has no attribute "get_historical_data"  [attr-defined]
application\services\implementations\market_service_impl.py:157:43: error: "Price" has no attribute "timestamp"  [attr-defined]
application\services\implementations\market_service_impl.py:162:28: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:164:45: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:166:20: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:186:43: error: Argument 1 to "_is_cache_expired" of "MarketServiceImpl" has incompatible type "Any | None"; expected "TimestampValue"  [arg-type]
application\services\implementations\market_service_impl.py:190:27: error: "MarketRepository" has no attribute "get_order_book"  [attr-defined]
application\services\implementations\market_service_impl.py:232:25: error: "MarketMetricsService" has no attribute "calculate_metrics"; maybe "calculate_trend_metrics", "calculate_volume_metrics", or "calculate_momentum_metrics"?  [attr-defined]
application\services\implementations\market_service_impl.py:288:26: error: "TechnicalAnalysisService" has no attribute "analyze_market"; maybe "analyze_market_data"?  [attr-defined]
application\services\implementations\market_service_impl.py:320:28: error: "TechnicalAnalysisService" has no attribute "calculate_indicators"; maybe "calculate_atr"?  [attr-defined]
application\services\implementations\market_service_impl.py:344:39: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:353:31: error: "TimestampValue" has no attribute "value"  [attr-defined]
application\services\implementations\market_service_impl.py:385:44: error: "MarketData" has no attribute "current_price"  [attr-defined]
application\services\implementations\market_service_impl.py:387:49: error: "MarketData" has no attribute "price_change_24h"  [attr-defined]
application\services\implementations\market_service_impl.py:466:5: error: Name "validate_input" already defined on line 418  [no-redef]
application\services\implementations\market_service_impl.py:477:5: error: Name "process" already defined on line 429  [no-redef]
application\services\implementations\market_service_impl.py:487:5: error: Name "_process_market_data" already defined on line 439  [no-redef]
application\services\implementations\market_service_impl.py:509:5: error: Name "_process_symbol" already defined on line 461  [no-redef]
application\services\implementations\cache_service_impl.py:48:15: error: Call to abstract method "initialize" of "BaseApplicationService" with trivial body via super() is unsafe  [safe-super]
infrastructure\repositories\order_repository.py:30:31: error: Name "domain" is not defined  [name-defined]
infrastructure\repositories\order_repository.py:182:82: error: Unsupported operand types for <= ("datetime" and "Timestamp")  [operator]
infrastructure\repositories\order_repository.py:182:98: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:198:31: error: Incompatible types in assignment (expression has type "list[Order]", variable has type "dict_values[OrderId, Order]")  [assignment]
infrastructure\repositories\order_repository.py:198:50: error: Argument 1 to "_apply_filter" of "InMemoryOrderRepository" has incompatible type "dict_values[OrderId, Order]"; expected "list[Order]"  [arg-type]
infrastructure\repositories\order_repository.py:224:24: error: Name "criteria" is not defined  [name-defined]
infrastructure\repositories\order_repository.py:225:22: error: Name "criteria" is not defined  [name-defined]
infrastructure\repositories\order_repository.py:246:60: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:248:60: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:267:60: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:269:60: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:288:60: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:290:60: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:308:60: error: Unsupported operand types for >= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:310:60: error: Unsupported operand types for <= ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:323:79: error: Unsupported operand types for < ("Timestamp" and "datetime")  [operator]
infrastructure\repositories\order_repository.py:533:1: error: Skipping analyzing "asyncpg": module is installed, but missing library stubs or py.typed marker  [import-untyped]
infrastructure\repositories\order_repository.py:627:17: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\order_repository.py:627:17: note: Left operand is of type "int | None"
infrastructure\repositories\order_repository.py:629:13: error: Unsupported operand types for + ("None" and "int")  [operator]
infrastructure\repositories\order_repository.py:629:13: note: Left operand is of type "int | None"
infrastructure\repositories\order_repository.py:806:28: error: Argument 1 of "exists" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\order_repository.py:806:28: note: This violates the Liskov substitution principle
infrastructure\repositories\order_repository.py:806:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\order_repository.py:1071:16: error: Unexpected keyword argument "volume" for "Order"  [call-arg]
infrastructure\repositories\order_repository.py:1071:16: error: Unexpected keyword argument "filled_volume" for "Order"  [call-arg]
infrastructure\repositories\order_repository.py:1071:16: error: Unexpected keyword argument "remaining_volume" for "Order"  [call-arg]
infrastructure\repositories\order_repository.py:1074:26: error: "type[TradingPair]" has no attribute "from_string"  [attr-defined]
infrastructure\repositories\order_repository.py:1078:19: error: Missing positional argument "currency" in call to "Price"  [call-arg]
infrastructure\repositories\order_repository.py:1078:25: error: Argument 1 to "Price" has incompatible type "Money"; expected "Decimal"  [arg-type]
infrastructure\repositories\order_repository.py:1079:27: error: Argument 1 to "Volume" has incompatible type "Money"; expected "int | float | Decimal"  [arg-type]
infrastructure\repositories\order_repository.py:1080:34: error: Argument 1 to "Volume" has incompatible type "Money"; expected "int | float | Decimal"  [arg-type]
infrastructure\repositories\order_repository.py:1081:37: error: Argument 1 to "Volume" has incompatible type "Money"; expected "int | float | Decimal"  [arg-type]
infrastructure\repositories\order_repository.py:1093:54: error: Incompatible types in assignment (expression has type "datetime", target has type "int | None")  [assignment]
infrastructure\repositories\order_repository.py:1137:19: error: "QueryOptions" has no attribute "limit"  [attr-defined]
infrastructure\repositories\order_repository.py:1138:20: error: "QueryOptions" has no attribute "offset"  [attr-defined]
infrastructure\repositories\order_repository.py:1165:19: error: "QueryOptions" has no attribute "limit"  [attr-defined]
infrastructure\repositories\order_repository.py:1166:20: error: "QueryOptions" has no attribute "offset"  [attr-defined]
infrastructure\repositories\order_repository.py:1174:5: error: Name "exists" already defined on line 806  [no-redef]
infrastructure\repositories\order_repository.py:1174:28: error: Argument 1 of "exists" is incompatible with supertype "RepositoryProtocol"; supertype defines the argument type as "UUID | str"  [override]
infrastructure\repositories\order_repository.py:1174:28: note: This violates the Liskov substitution principle
infrastructure\repositories\order_repository.py:1174:28: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#incompatible-overrides
infrastructure\repositories\order_repository.py:1180:5: error: Return type "AsyncIterator[Order]" of "stream" incompatible with return type "Coroutine[Any, Any, AsyncIterator[Order]]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1180:5: note: Consider declaring "stream" in supertype "RepositoryProtocol" without "async"
infrastructure\repositories\order_repository.py:1180:5: note: See https://mypy.readthedocs.io/en/stable/more_types.html#asynchronous-iterators
infrastructure\repositories\order_repository.py:1182:18: error: "QueryOptions" has no attribute "offset"  [attr-defined]
infrastructure\repositories\order_repository.py:1183:17: error: "QueryOptions" has no attribute "limit"  [attr-defined]
infrastructure\repositories\order_repository.py:1194:28: error: "QueryOptions" has no attribute "limit"  [attr-defined]
infrastructure\repositories\order_repository.py:1198:5: error: Return type "_AsyncGeneratorContextManager[TransactionProtocol, None]" of "transaction" incompatible with return type "_AsyncGeneratorContextManager[Never, None]" in supertype "RepositoryProtocol"  [override]
infrastructure\repositories\order_repository.py:1205:55: error: Function "builtins.callable" is not valid as a type  [valid-type]
infrastructure\repositories\order_repository.py:1205:55: note: Perhaps you meant "typing.Callable" instead of "callable"?
infrastructure\repositories\order_repository.py:1208:26: error: callable? not callable  [misc]
infrastructure\repositories\order_repository.py:1225:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\order_repository.py:1243:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\order_repository.py:1261:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\order_repository.py:1284:20: error: Argument "errors" to "BulkOperationResult" has incompatible type "list[str]"; expected "list[dict[str, Any]]"  [arg-type]
infrastructure\repositories\order_repository.py:1310:16: error: Unexpected keyword argument "total_entities" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\order_repository.py:1310:16: error: Unexpected keyword argument "cache_hits" for "RepositoryResponse"; did you mean "cache_hit"?  [call-arg]
infrastructure\repositories\order_repository.py:1310:16: error: Unexpected keyword argument "cache_misses" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\order_repository.py:1310:16: error: Unexpected keyword argument "avg_query_time" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\order_repository.py:1319:16: error: Extra keys ("total_queries", "avg_query_time", "cache_hit_rate", "error_rate") for TypedDict "PerformanceMetricsDict"  [typeddict-unknown-key]
infrastructure\repositories\order_repository.py:1328:16: error: Unexpected keyword argument "cache_hits" for "RepositoryResponse"; did you mean "cache_hit"?  [call-arg]
infrastructure\repositories\order_repository.py:1328:16: error: Unexpected keyword argument "cache_misses" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\order_repository.py:1328:16: error: Unexpected keyword argument "cache_size" for "RepositoryResponse"  [call-arg]
infrastructure\repositories\order_repository.py:1341:20: error: Extra keys ("database_connected", "cache_available", "last_check") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
infrastructure\repositories\order_repository.py:1348:20: error: Extra keys ("database_connected", "cache_available", "error", "last_check") for TypedDict "HealthCheckDict"  [typeddict-unknown-key]
application\symbol_selection\opportunity_selector.py:224:39: error: "BaseException" object is not iterable  [misc]
application\symbol_selection\opportunity_selector.py:260:29: error: Item "None" of "SymbolMetricsProviderProtocol | None" has no attribute "get_symbol_metrics"  [union-attr]
application\symbol_selection\opportunity_selector.py:264:28: error: "MarketPhaseClassifier" has no attribute "classify_phase"; maybe "classify_market_phase"?  [attr-defined]
application\symbol_selection\opportunity_selector.py:275:35: error: Unexpected keyword argument "score" for "OpportunityScore"  [call-arg]
application\symbol_selection\opportunity_selector.py:275:35: error: Argument "opportunity_score" to "SymbolProfile" has incompatible type "OpportunityScore"; expected "float"  [arg-type]
application\symbol_selection\opportunity_selector.py:277:32: error: Argument "confidence" to "OpportunityScore" has incompatible type "float"; expected "ConfidenceValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:279:32: error: Unexpected keyword argument "total_volume" for "VolumeProfile"  [call-arg]
application\symbol_selection\opportunity_selector.py:279:32: error: Unexpected keyword argument "avg_volume" for "VolumeProfile"; did you mean "avg_volume_1m", "avg_volume_5m", or "avg_volume_15m"?  [call-arg]
application\symbol_selection\opportunity_selector.py:284:33: error: Unexpected keyword argument "support_levels" for "PriceStructure"; did you mean "support_level"?  [call-arg]
application\symbol_selection\opportunity_selector.py:284:33: error: Unexpected keyword argument "resistance_levels" for "PriceStructure"; did you mean "resistance_level"?  [call-arg]
application\symbol_selection\opportunity_selector.py:289:36: error: Extra keys ("order_book_depth", "symmetry") for TypedDict "OrderBookMetrics"  [typeddict-unknown-key]
application\symbol_selection\opportunity_selector.py:294:33: error: Extra keys ("pattern_count", "success_rate", "avg_confidence") for TypedDict "PatternMetrics"  [typeddict-unknown-key]
application\symbol_selection\opportunity_selector.py:299:33: error: Extra key "cross_session_correlation" for TypedDict "SessionMetrics"  [typeddict-unknown-key]
application\symbol_selection\opportunity_selector.py:300:39: error: Incompatible types (expression has type "float", TypedDict item "session_alignment" has type "SessionAlignmentValue")  [typeddict-item]
application\symbol_selection\opportunity_selector.py:313:35: error: Unexpected keyword argument "score" for "OpportunityScore"  [call-arg]
application\symbol_selection\opportunity_selector.py:313:35: error: Argument "opportunity_score" to "SymbolProfile" has incompatible type "OpportunityScore"; expected "float"  [arg-type]
application\symbol_selection\opportunity_selector.py:313:74: error: Argument "confidence" to "OpportunityScore" has incompatible type "float"; expected "ConfidenceValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:314:46: error: Argument 1 to "VolumeProfile" has incompatible type "int"; expected "VolumeValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:314:49: error: Argument 2 to "VolumeProfile" has incompatible type "int"; expected "VolumeValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:314:52: error: Argument 3 to "VolumeProfile" has incompatible type "int"; expected "VolumeValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:315:48: error: Argument 1 to "PriceStructure" has incompatible type "int"; expected "PriceValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:315:53: error: Argument 2 to "PriceStructure" has incompatible type "list[Never]"; expected "ATRValue"  [arg-type]
application\symbol_selection\opportunity_selector.py:315:57: error: Argument 3 to "PriceStructure" has incompatible type "list[Never]"; expected "float"  [arg-type]
application\symbol_selection\opportunity_selector.py:316:36: error: Expected keyword arguments, {...}, or dict(...) in TypedDict constructor  [misc]
application\symbol_selection\opportunity_selector.py:317:33: error: Expected keyword arguments, {...}, or dict(...) in TypedDict constructor  [misc]
application\symbol_selection\opportunity_selector.py:318:33: error: Expected keyword arguments, {...}, or dict(...) in TypedDict constructor  [misc]
application\symbol_selection\opportunity_selector.py:337:31: error: "float" has no attribute "score"  [attr-defined]
application\symbol_selection\opportunity_selector.py:347:52: error: "float" has no attribute "score"  [attr-defined]
application\symbol_selection\opportunity_selector.py:348:51: error: "float" has no attribute "confidence"  [attr-defined]
application\services\service_factory.py:22:1: error: Cannot find implementation or library stub for module named "application.services.implementations.strategy_service_impl"  [import-not-found]
application\services\service_factory.py:26:1: error: Module "application.services.implementations.notification_service_impl" has no attribute "NotificationServiceImpl"  [attr-defined]
application\services\service_factory.py:91:52: error: Missing positional arguments "technical_analysis_service", "market_metrics_service" in call to "MarketServiceImpl"  [call-arg]
application\services\service_factory.py:91:70: error: Argument 1 to "MarketServiceImpl" has incompatible type "dict[str, Any]"; expected "MarketRepository"  [arg-type]
application\services\service_factory.py:106:52: error: Missing positional argument "ml_predictor" in call to "MLServiceImpl"  [call-arg]
application\services\service_factory.py:106:66: error: Argument 1 to "MLServiceImpl" has incompatible type "dict[str, Any]"; expected "MLRepository"  [arg-type]
application\services\service_factory.py:121:52: error: Cannot instantiate abstract class "TradingServiceImpl" with abstract attributes "process" and "validate_input"  [abstract]
application\services\service_factory.py:121:52: error: Missing positional argument "signal_service" in call to "TradingServiceImpl"  [call-arg]
application\services\service_factory.py:121:71: error: Argument 1 to "TradingServiceImpl" has incompatible type "dict[str, Any]"; expected "TradingRepository"  [arg-type]
application\services\service_factory.py:151:52: error: Cannot instantiate abstract class "PortfolioServiceImpl" with abstract attributes "process" and "validate_input"  [abstract]
application\services\service_factory.py:151:52: error: Missing positional argument "portfolio_optimizer" in call to "PortfolioServiceImpl"  [call-arg]
application\services\service_factory.py:151:73: error: Argument 1 to "PortfolioServiceImpl" has incompatible type "dict[str, Any]"; expected "PortfolioRepository"  [arg-type]
application\services\service_factory.py:170:52: error: Cannot instantiate abstract class "RiskServiceImpl" with abstract attributes "process" and "validate_input"  [abstract]
application\services\service_factory.py:170:52: error: Unexpected keyword argument "risk_calculator" for "RiskServiceImpl"  [call-arg]
application\services\implementations\risk_service_impl.py:26:5: note: "RiskServiceImpl" defined here
application\services\service_factory.py:189:52: error: Cannot instantiate abstract class "CacheServiceImpl" with abstract attributes "process" and "validate_input"  [abstract]
application\services\service_factory.py:262:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\service_factory.py:263:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\services\service_factory.py:285:20: error: Too many arguments for "ServiceFactory"  [call-arg]
application\services\service_factory.py:291:20: error: Too many arguments for "ServiceFactory"  [call-arg]
application\services\service_factory.py:305:12: error: Incompatible return value type (got "ServiceFactory | None", expected "ServiceFactory")  [return-value]
application\services\market_service.py:28:43: error: Too many arguments for "TechnicalAnalysisService"  [call-arg]
application\services\market_service.py:83:22: error: "TechnicalAnalysisService" has no attribute "get_technical_indicators"  [attr-defined]
application\services\market_service.py:130:53: error: Incompatible default for argument "alert_types" (default has type "None", argument has type "list[str]")  [assignment]
application\services\market_service.py:130:53: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
application\services\market_service.py:130:53: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
application\services\implementations\__init__.py:8:1: error: Cannot find implementation or library stub for module named "application.services.implementations.strategy_service_impl"  [import-not-found]
application\services\implementations\__init__.py:12:1: error: Module "application.services.implementations.notification_service_impl" has no attribute "NotificationServiceImpl"  [attr-defined]
application\services\implementations\__init__.py:13:1: error: Cannot find implementation or library stub for module named "application.services.implementations.analytics_service_impl"  [import-not-found]
application\services\implementations\__init__.py:14:1: error: Cannot find implementation or library stub for module named "application.services.implementations.metrics_service_impl"  [import-not-found]
application\services\implementations\__init__.py:15:1: error: Cannot find implementation or library stub for module named "application.services.implementations.evolution_service_impl"  [import-not-found]
application\services\implementations\__init__.py:16:1: error: Cannot find implementation or library stub for module named "application.services.implementations.symbol_selection_service_impl"  [import-not-found]
application\orchestration\trading_orchestrator.py:14:1: error: Cannot find implementation or library stub for module named "domain.types.trading_types"  [import-not-found]
application\orchestration\trading_orchestrator.py:15:1: error: Cannot find implementation or library stub for module named "domain.interfaces.trading_orchestrator"  [import-not-found]
application\orchestration\trading_orchestrator.py:16:1: error: Cannot find implementation or library stub for module named "domain.interfaces.strategy_registry"  [import-not-found]
application\orchestration\trading_orchestrator.py:17:1: error: Cannot find implementation or library stub for module named "domain.interfaces.risk_manager"  [import-not-found]
application\orchestration\trading_orchestrator.py:18:1: error: Cannot find implementation or library stub for module named "domain.interfaces.market_data"  [import-not-found]
application\orchestration\trading_orchestrator.py:19:1: error: Cannot find implementation or library stub for module named "domain.interfaces.sentiment_analyzer"  [import-not-found]
application\orchestration\trading_orchestrator.py:20:1: error: Cannot find implementation or library stub for module named "domain.interfaces.portfolio_manager"  [import-not-found]
application\orchestration\trading_orchestrator.py:21:1: error: Cannot find implementation or library stub for module named "domain.interfaces.evolution_manager"  [import-not-found]
application\orchestration\trading_orchestrator.py:23:1: error: Module "application.use_cases.manage_orders" has no attribute "OrderManagementUseCase"; maybe "DefaultOrderManagementUseCase"?  [attr-defined]
application\evolution\evolution_orchestrator.py:13:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
application\evolution\evolution_orchestrator.py:13:1: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
application\evolution\evolution_orchestrator.py:54:59: error: Missing positional argument "storage" in call to "EvolutionMigration"  [call-arg]
application\evolution\evolution_orchestrator.py:82:64: error: Incompatible default for argument "trading_pairs" (default has type "None", argument has type "list[str]")  [assignment]
application\evolution\evolution_orchestrator.py:82:64: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
application\evolution\evolution_orchestrator.py:82:64: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
application\evolution\evolution_orchestrator.py:139:9: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:203:41: error: "type[EvolutionStatus]" has no attribute "ERROR"  [attr-defined]
application\evolution\evolution_orchestrator.py:206:9: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:272:9: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:290:51: error: No overload variant of "max" matches argument types "object", "float"  [call-overload]
application\evolution\evolution_orchestrator.py:290:51: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:290:51: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any]] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT
application\evolution\evolution_orchestrator.py:290:51: note:     def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
application\evolution\evolution_orchestrator.py:290:51: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any]] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT
application\evolution\evolution_orchestrator.py:290:51: note:     def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
application\evolution\evolution_orchestrator.py:290:51: note:     def [SupportsRichComparisonT: SupportsDunderLT[Any] | SupportsDunderGT[Any], _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T
application\evolution\evolution_orchestrator.py:290:51: note:     def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2
application\evolution\evolution_orchestrator.py:306:9: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:341:9: error: No return value expected  [return-value]
application\evolution\evolution_orchestrator.py:353:17: error: Unsupported operand types for + ("object" and "int")  [operator]
application\evolution\evolution_orchestrator.py:367:27: error: "StrategyCandidate" has no attribute "trading_pairs"  [attr-defined]
application\evolution\evolution_orchestrator.py:401:17: error: Incompatible types in "await" (actual type "None", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:414:31: error: "object" has no attribute "isoformat"  [attr-defined]
application\evolution\evolution_orchestrator.py:417:21: error: No overload variant of "__sub__" of "datetime" matches argument type "object"  [operator]
application\evolution\evolution_orchestrator.py:417:21: note: Possible overload variants:
application\evolution\evolution_orchestrator.py:417:21: note:     def __sub__(self, datetime, /) -> timedelta
application\evolution\evolution_orchestrator.py:417:21: note:     def __sub__(self, timedelta, /) -> datetime
application\evolution\evolution_orchestrator.py:483:42: error: Incompatible default for argument "trading_pairs" (default has type "None", argument has type "list[str]")  [assignment]
application\evolution\evolution_orchestrator.py:483:42: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
application\evolution\evolution_orchestrator.py:483:42: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
application\evolution\evolution_orchestrator.py:520:19: error: "StrategyStorage" has no attribute "save_candidate"; maybe "save_strategy_candidate"?  [attr-defined]
application\evolution\evolution_orchestrator.py:530:32: error: "StrategyStorage" has no attribute "get_all_candidates"; maybe "get_strategy_candidates"?  [attr-defined]
application\evolution\evolution_orchestrator.py:540:19: error: "set_evaluation" of "EvolutionCache" does not return a value (it only ever returns None)  [func-returns-value]
application\evolution\evolution_orchestrator.py:549:20: error: Incompatible types in "await" (actual type "Any | None", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:566:13: error: Incompatible types in "await" (actual type "BackupMetadata", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:566:55: error: Argument 1 to "create_backup" of "EvolutionBackup" has incompatible type "dict[str, object]"; expected "str | Path | None"  [arg-type]
application\evolution\evolution_orchestrator.py:576:27: error: Incompatible types in "await" (actual type "bool", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:595:19: error: "EvolutionMigration" has no attribute "run_migration"  [attr-defined]
application\evolution\evolution_orchestrator.py:605:27: error: Incompatible types in "await" (actual type "dict[str, Any]", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:606:29: error: Incompatible types in "await" (actual type "StorageStatistics", expected type "Awaitable[Any]")  [misc]
application\evolution\evolution_orchestrator.py:607:34: error: "EvolutionBackup" has no attribute "get_statistics"  [attr-defined]
infrastructure\external_services\bybit_client.py:39:24: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\bybit_client.py:65:28: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\bybit_client.py:86:28: error: Argument "api_secret" to "ExchangeCredentials" has incompatible type "str"; expected "APISecret"  [arg-type]
infrastructure\external_services\bybit_client.py:89:28: error: "BybitExchangeService" has no attribute "authenticate"  [attr-defined]
infrastructure\external_services\bybit_client.py:100:26: error: "BybitExchangeService" has no attribute "get_account_info"  [attr-defined]
infrastructure\external_services\bybit_client.py:107:20: error: Incompatible return value type (got "dict[str, float]", expected "Balance")  [return-value]
infrastructure\external_services\bybit_client.py:107:26: error: Too many arguments for "get_balance" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\bybit_client.py:111:5: error: Return type "Coroutine[Any, Any, OrderBookSnapshot]" of "get_order_book" incompatible with return type "Coroutine[Any, Any, OrderBook]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\bybit_client.py:114:26: error: "BybitExchangeService" has no attribute "get_order_book"  [attr-defined]
infrastructure\external_services\bybit_client.py:118:5: error: Return type "Coroutine[Any, Any, domain.entities.market.MarketData]" of "get_market_data" incompatible with return type "Coroutine[Any, Any, domain.protocols.exchange_protocol.MarketData]" in supertype "ExchangeProtocol"  [override]
infrastructure\external_services\bybit_client.py:121:20: error: Incompatible return value type (got "list[dict[str, Any]]", expected "MarketData")  [return-value]
infrastructure\external_services\bybit_client.py:121:64: error: Argument 1 to "get_market_data" of "BaseExchangeService" has incompatible type "Symbol"; expected "MarketDataRequest"  [arg-type]
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "symbol" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\bybit_client.py:210:22: error: Name "Money" is not defined  [name-defined]
infrastructure\external_services\bybit_client.py:212:10: error: Name "Money" is not defined  [name-defined]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "side" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "order_type" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "quantity" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "price" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "stop_price" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "portfolio_id" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "strategy_id" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:26: error: Unexpected keyword argument "signal_id" for "place_order" of "BaseExchangeService"  [call-arg]
infrastructure\external_services\exchanges\base_exchange_service.py:211:5: note: "place_order" of "BaseExchangeService" defined here
infrastructure\external_services\bybit_client.py:139:20: error: Incompatible return value type (got "dict[str, Any]", expected "Order")  [return-value]
infrastructure\external_services\bybit_client.py:163:20: error: Incompatible return value type (got "dict[str, Any]", expected "Order")  [return-value]
infrastructure\external_services\bybit_client.py:170:26: error: "BybitExchangeService" has no attribute "get_open_orders"  [attr-defined]
infrastructure\external_services\bybit_client.py:181:26: error: "BybitExchangeService" has no attribute "get_trade_history"  [attr-defined]
infrastructure\external_services\bybit_client.py:188:20: error: Incompatible return value type (got "list[dict[str, Any]]", expected "list[Position]")  [return-value]
infrastructure\external_services\bybit_client.py:202:26: error: "BybitExchangeService" has no attribute "validate_order"  [attr-defined]
infrastructure\external_services\bybit_client.py:215:26: error: "BybitExchangeService" has no attribute "calculate_commission"  [attr-defined]
infrastructure\external_services\bybit_client.py:227:27: error: Argument "timeframe" to "MarketDataRequest" has incompatible type "str"; expected "TimeFrame"  [arg-type]
infrastructure\external_services\bybit_client.py:231:26: error: "BybitExchangeService" has no attribute "get_market_data_legacy"  [attr-defined]
infrastructure\external_services\bybit_client.py:243:22: error: Argument "side" to "OrderRequest" has incompatible type "domain.entities.order.OrderSide"; expected "domain.types.external_service_types.OrderSide"  [arg-type]
infrastructure\external_services\bybit_client.py:244:28: error: Argument "order_type" to "OrderRequest" has incompatible type "domain.entities.order.OrderType"; expected "domain.types.external_service_types.OrderType"  [arg-type]
infrastructure\external_services\bybit_client.py:245:26: error: Argument "quantity" to "OrderRequest" has incompatible type "float"; expected "VolumeValue"  [arg-type]
infrastructure\external_services\bybit_client.py:246:34: error: Argument 1 to "PriceValue" has incompatible type "float"; expected "Decimal"  [arg-type]
infrastructure\external_services\bybit_client.py:249:26: error: "BybitExchangeService" has no attribute "place_order_legacy"  [attr-defined]
infrastructure\external_services\bybit_client.py:256:69: error: Argument 1 to "OrderId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\bybit_client.py:263:74: error: Argument 1 to "OrderId" has incompatible type "str"; expected "UUID"  [arg-type]
infrastructure\external_services\bybit_client.py:264:20: error: "dict[str, Any]" has no attribute "to_dict"  [attr-defined]
infrastructure\external_services\bybit_client.py:271:26: error: "BybitExchangeService" has no attribute "get_balance_legacy"  [attr-defined]
infrastructure\external_services\bybit_client.py:278:26: error: "BybitExchangeService" has no attribute "get_positions_legacy"  [attr-defined]
infrastructure\external_services\bybit_client.py:285:26: error: "BybitExchangeService" has no attribute "get_server_time"  [attr-defined]
infrastructure\external_services\bybit_client.py:292:26: error: "BybitExchangeService" has no attribute "get_exchange_info"  [attr-defined]
infrastructure\external_services\bybit_client.py:299:26: error: "BybitExchangeService" has no attribute "get_ticker"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:16:1: error: Cannot find implementation or library stub for module named "domain.entities.strategy"  [import-not-found]
application\use_cases\trading_orchestrator\core.py:17:1: error: Module "domain.entities.trading" has no attribute "Order"; maybe "OrderId"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:36:1: error: Module "infrastructure.ml_services.decision_reasoner" has no attribute "TradeDecision"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:304:32: error: Missing positional argument "orchestrator" in call to "UpdateHandlers"  [call-arg]
application\use_cases\trading_orchestrator\core.py:305:26: error: Missing positional argument "orchestrator" in call to "Modifiers"  [call-arg]
application\use_cases\trading_orchestrator\core.py:317:65: error: Argument 1 to "get_by_id" of "StrategyRepository" has incompatible type "StrategyId"; expected "EntityId"  [arg-type]
application\use_cases\trading_orchestrator\core.py:327:17: error: Argument 1 to "validate_trading_conditions" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:333:29: error: Item "Strategy" of "Any | Strategy" has no attribute "execute"  [union-attr]
application\use_cases\trading_orchestrator\core.py:333:46: error: "ExecuteStrategyRequest" has no attribute "market_data"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:338:70: error: Argument 2 to "_create_order_from_signal" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "strategy_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "portfolio_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "symbol" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "orders" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "signals" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:342:20: error: Unexpected keyword argument "execution_time" for "ExecuteStrategyResponse"; did you mean "execution_time_ms"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "strategy_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "portfolio_id" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "symbol" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "orders" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "signals" for "ExecuteStrategyResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "execution_time" for "ExecuteStrategyResponse"; did you mean "execution_time_ms"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:354:20: error: Unexpected keyword argument "error" for "ExecuteStrategyResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:368:29: error: "ExecuteStrategyRequest" has no attribute "strategy_name"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:403:25: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:406:74: error: Argument 2 to "_create_order_from_signal" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:409:24: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:409:24: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:409:24: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:409:24: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:410:31: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:417:24: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:417:24: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:417:24: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:417:24: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:417:24: error: Unexpected keyword argument "error" for "ProcessSignalResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:418:31: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:428:20: error: Unexpected keyword argument "signal_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:428:20: error: Unexpected keyword argument "portfolio_id" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:428:20: error: Unexpected keyword argument "order" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:428:20: error: Unexpected keyword argument "processing_time" for "ProcessSignalResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:428:20: error: Unexpected keyword argument "error" for "ProcessSignalResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:429:27: error: "ProcessSignalRequest" has no attribute "signal_id"; maybe "signal"?  [attr-defined]
application\use_cases\trading_orchestrator\core.py:445:70: error: Argument 1 to "calculate_portfolio_weights" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:456:39: error: "PortfolioRebalanceRequest" has no attribute "rebalance_threshold"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:459:46: error: Argument 3 to "_create_rebalance_order" of "DefaultTradingOrchestratorUseCase" has incompatible type "PortfolioId"; expected "str"  [arg-type]
application\use_cases\trading_orchestrator\core.py:464:20: error: Unexpected keyword argument "portfolio_id" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:464:20: error: Unexpected keyword argument "orders" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:464:20: error: Unexpected keyword argument "rebalance_time" for "PortfolioRebalanceResponse"; did you mean "rebalance_cost"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:467:33: error: Argument "current_weights" to "PortfolioRebalanceResponse" has incompatible type "dict[str, Decimal]"; expected "dict[Symbol, Decimal]"  [arg-type]
application\use_cases\trading_orchestrator\core.py:475:20: error: Unexpected keyword argument "portfolio_id" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:475:20: error: Unexpected keyword argument "orders" for "PortfolioRebalanceResponse"  [call-arg]
application\use_cases\trading_orchestrator\core.py:475:20: error: Unexpected keyword argument "rebalance_time" for "PortfolioRebalanceResponse"; did you mean "rebalance_cost"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:475:20: error: Unexpected keyword argument "error" for "PortfolioRebalanceResponse"; did you mean "errors"?  [call-arg]
application\use_cases\trading_orchestrator\core.py:494:29: error: "SessionService" has no attribute "create_session"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:527:29: error: "SessionService" has no attribute "stop_session"  [attr-defined]
application\use_cases\trading_orchestrator\core.py:548:29: error: "SessionService" has no attribute "get_session"; maybe "get_session_phase"?  [attr-defined]
application\services\market_service_factory.py:19:9: error: Need type annotation for "_services_cache" (hint: "_services_cache: dict[<type>, <type>] = ...")  [var-annotated]
application\services\market_service_factory.py:36:66: error: Too many arguments for "TechnicalAnalysisService"  [call-arg]
application\services\__init__.py:9:1: error: Cannot find implementation or library stub for module named "application.services.strategy_service"  [import-not-found]
application\di_container_refactored.py:70:1: error: Cannot find implementation or library stub for module named "application.services.strategy_service"  [import-not-found]
application\di_container_refactored.py:70:1: error: Name "StrategyService" already defined (possibly by an import)  [no-redef]
application\di_container_refactored.py:178:9: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
application\di_container_refactored.py:350:21: error: Need type annotation for "session_cache"  [var-annotated]
application\di_container_refactored.py:665:24: error: No overload variant of "get" of "dict" matches argument type "type[Any]"  [call-overload]
application\di_container_refactored.py:665:24: note: Possible overload variants:
application\di_container_refactored.py:665:24: note:     def get(self, ABCMeta, None = ..., /) -> str | None
application\di_container_refactored.py:665:24: note:     def get(self, ABCMeta, str, /) -> str
application\di_container_refactored.py:665:24: note:     def [_T] get(self, ABCMeta, _T, /) -> str | _T
application\use_cases\__init__.py:8:1: error: Module "application.use_cases.manage_orders" has no attribute "OrderManagementUseCase"; maybe "DefaultOrderManagementUseCase"?  [attr-defined]
application\use_cases\__init__.py:28:1: error: Cannot find implementation or library stub for module named "application.use_cases.trading_orchestrator.dtos"  [import-not-found]
