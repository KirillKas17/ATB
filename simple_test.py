#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
"""

import ast
import sys
from decimal import Decimal

def test_file_syntax(filename):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
        ast.parse(content)
        print(f"‚úÖ {filename} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
    except SyntaxError as e:
        print(f"‚ùå {filename} - —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    except FileNotFoundError:
        print(f"‚ö†Ô∏è {filename} - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå {filename} - –æ—à–∏–±–∫–∞: {e}")
        return False

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç ast.literal_eval
        result = ast.literal_eval('{"test": "value"}')
        print("‚úÖ ast.literal_eval —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –¢–µ—Å—Ç Decimal
        decimal_val = Decimal('0.001')
        print(f"‚úÖ Decimal —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {decimal_val}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")
        return False

def test_decimal_operations():
    """–¢–µ—Å—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å Decimal"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Decimal –æ–ø–µ—Ä–∞—Ü–∏–π...")
    
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π
        order_amount = Decimal('1000.50')
        commission_rate = Decimal('0.001')
        commission = order_amount * commission_rate
        
        print(f"‚úÖ –†–∞—Å—á–µ—Ç –∫–æ–º–∏—Å—Å–∏–π: {order_amount} * {commission_rate} = {commission}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å
        expected = Decimal('1.0005')
        if commission == expected:
            print("‚úÖ –¢–æ—á–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected}, –ø–æ–ª—É—á–µ–Ω–æ {commission}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ Decimal –æ–ø–µ—Ä–∞—Ü–∏—è—Ö: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    files_to_check = [
        "infrastructure/core/technical.py",
        "infrastructure/services/technical_analysis/indicators.py", 
        "domain/services/technical_analysis.py",
        "infrastructure/external_services/order_manager.py",
        "infrastructure/external_services/bybit_client.py",
        "infrastructure/repositories/trading/trading_repository.py",
        "infrastructure/repositories/position_repository.py",
        "infrastructure/strategies/base_strategy.py"
    ]
    
    success_count = 0
    total_tests = len(files_to_check) + 2  # + —Ç–µ—Å—Ç—ã –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ decimal
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    for filename in files_to_check:
        if test_file_syntax(filename):
            success_count += 1
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:")
    if test_imports():
        success_count += 1
    
    if test_decimal_operations():
        success_count += 1
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{total_tests} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if success_count == total_tests:
        print("üéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç–µ")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ—à–ª–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")