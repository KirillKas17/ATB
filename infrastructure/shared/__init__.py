"""
Shared utilities for Infrastructure Layer.
"""

from .cache import (
    CacheableProtocol,
    CacheConfig,
    CacheEntry,
    CacheEvictionStrategy,
    CacheManager,
    CacheMetrics,
    CacheProtocol,
    CacheType,
    MarketDataCache,
    MemoryCache,
    StrategyCache,
    cache_decorator,
    create_cache,
    generate_cache_key,
    get_cache,
    get_cache_manager,
)
from .exceptions import (
    AgentError,
    CacheError,
    ConfigurationError,
    DataIntegrityError,
    EntitySystemError,
    EvolutionError,
    ExternalServiceError,
    InfrastructureConnectionError,
    InfrastructureError,
    InfrastructureTimeoutError,
    MarketDataError,
    MessagingError,
    MLServiceError,
    PerformanceError,
    RepositoryError,
    ResourceError,
    ServiceError,
    TradingError,
    ValidationError,
    create_error_context,
    format_error_message,
    get_error_severity,
    is_infrastructure_error,
)
from .logging import (
    AgentLogger,
    ExternalServiceLogger,
    InfrastructureLogger,
    LogContext,
    LogEntry,
    LoggingConfig,
    LogLevel,
    RepositoryLogger,
    ServiceLogger,
    configure_infrastructure_logging,
    get_logger,
    log_errors_decorator,
    log_performance_decorator,
)

__all__ = [
    # Exceptions
    "InfrastructureError",
    "RepositoryError",
    "CacheError",
    "ExternalServiceError",
    "AgentError",
    "ServiceError",
    "ValidationError",
    "ConfigurationError",
    "InfrastructureConnectionError",
    "InfrastructureTimeoutError",
    "ResourceError",
    "DataIntegrityError",
    "PerformanceError",
    "MarketDataError",
    "TradingError",
    "MLServiceError",
    "MessagingError",
    "EvolutionError",
    "EntitySystemError",
    "create_error_context",
    "format_error_message",
    "is_infrastructure_error",
    "get_error_severity",
    # Logging
    "LogLevel",
    "LogContext",
    "LogEntry",
    "InfrastructureLogger",
    "LoggingConfig",
    "AgentLogger",
    "RepositoryLogger",
    "ServiceLogger",
    "ExternalServiceLogger",
    "get_logger",
    "configure_infrastructure_logging",
    "log_performance_decorator",
    "log_errors_decorator",
    # Cache
    "CacheType",
    "CacheEvictionStrategy",
    "CacheConfig",
    "CacheMetrics",
    "CacheEntry",
    "CacheProtocol",
    "MemoryCache",
    "CacheManager",
    "MarketDataCache",
    "StrategyCache",
    "CacheableProtocol",
    "get_cache_manager",
    "create_cache",
    "get_cache",
    "generate_cache_key",
    "cache_decorator",
]
